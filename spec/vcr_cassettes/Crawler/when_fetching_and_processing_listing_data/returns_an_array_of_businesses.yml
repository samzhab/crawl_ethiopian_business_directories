---
http_interactions:
- request:
    method: get
    uri: http://www.weregna.com/ethiopia-ethiopian-yellow-pages/?wpbdp_view=all_listings
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 02 Mar 2024 03:29:24 GMT
      Server:
      - Apache
      X-Powered-By:
      - PHP/5.6.40
      Link:
      - <http://www.weregna.com/wp-json/>; rel="https://api.w.org/", <http://www.weregna.com/?p=26>;
        rel=shortlink
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20168'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html> 
<html lang="en">
<head>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8989561726736148"
     crossorigin="anonymous"></script>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalabe=no">
<title>Ethiopia yellow pages | Ethiopian yellow pages | ethiopia white pages | ethiopia phone numbers | ethiopia phone directory | ethiopia yellow pages | addis ababa ethiopia yellow pages | directory business | directory ethiopia phonebook | ethiopia find people ethiopia | Weregna</title>
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="http://www.weregna.com/xmlrpc.php">
<!--[if lt IE 9]>
	<script src="http://www.weregna.com/wp-content/themes/accesspress-lite/js/html5.min.js"></script>
<![endif]-->


<!-- All in One SEO Pack 3.2.10 by Michael Torbert of Semper Fi Web Design[303,332] -->
<meta name="description"  content="Ethiopia yellow pages and Ethiopian yellow pages and ethiopia white pages ethiopia phone numbers or ethiopia phone directory. Find ethiopia yellow pages addis ababa. business directory ethiopia. Look at our phonebook ethiopia. You can find people in ethiopia." />

<meta name="keywords"  content="ethiopia yellow pages,ethiopian yellow pages,ethiopia white pages,ethiopia phone numbers ethiopia,phone directory ethiopia,yellow pages addis ababa ethiopia,yellow pages directory business,directory ethiopia phonebook,ethiopia find people ethiopia" />

<script type="application/ld+json" class="aioseop-schema">{"@context":"https://schema.org","@graph":[{"@type":"Organization","@id":"http://www.weregna.com/#organization","url":"http://www.weregna.com/","name":"Weregna","sameAs":[]},{"@type":"WebSite","@id":"http://www.weregna.com/#website","url":"http://www.weregna.com/","name":"Weregna","publisher":{"@id":"http://www.weregna.com/#organization"}},{"@type":"WebPage","@id":"http://www.weregna.com/ethiopia-ethiopian-yellow-pages/#webpage","url":"http://www.weregna.com/ethiopia-ethiopian-yellow-pages/","inLanguage":"en","name":"YELLOW PAGES","isPartOf":{"@id":"http://www.weregna.com/#website"},"datePublished":"2014-04-29T14:23:24+00:00","dateModified":"2018-05-28T09:07:05+00:00","description":"Ethiopia yellow pages and Ethiopian yellow pages  and ethiopia white pages ethiopia phone numbers or ethiopia phone directory. Find ethiopia yellow pages addis ababa.  business directory ethiopia. Look at our phonebook ethiopia. You can find people in ethiopia."}]}</script>
<link rel="canonical" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/" />
<!-- All in One SEO Pack -->
<script type="text/javascript">var ajaxurl = 'http://www.weregna.com/wp-admin/admin-ajax.php';</script><link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel='dns-prefetch' href='//use.fontawesome.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<!-- Business Directory RSS feed -->
<link rel="alternate" type="application/rss+xml" title="YELLOW PAGES Feed" href="http://www.weregna.com/feed/?post_type=wpbdp_listing" />
<!-- /Business Directory RSS feed -->
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/www.weregna.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.7.25"}};
			!function(t,a,e){var r,n,i,o=a.createElement("canvas"),l=o.getContext&&o.getContext("2d");function c(t){var e=a.createElement("script");e.src=t,e.defer=e.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(e)}for(i=Array("flag","emoji4"),e.supports={everything:!0,everythingExceptFlag:!0},n=0;n<i.length;n++)e.supports[i[n]]=function(t){var e,a=String.fromCharCode;if(!l||!l.fillText)return!1;switch(l.clearRect(0,0,o.width,o.height),l.textBaseline="top",l.font="600 32px Arial",t){case"flag":return(l.fillText(a(55356,56826,55356,56819),0,0),o.toDataURL().length<3e3)?!1:(l.clearRect(0,0,o.width,o.height),l.fillText(a(55356,57331,65039,8205,55356,57096),0,0),e=o.toDataURL(),l.clearRect(0,0,o.width,o.height),l.fillText(a(55356,57331,55356,57096),0,0),e!==o.toDataURL());case"emoji4":return l.fillText(a(55357,56425,55356,57341,8205,55357,56507),0,0),e=o.toDataURL(),l.clearRect(0,0,o.width,o.height),l.fillText(a(55357,56425,55356,57341,55357,56507),0,0),e!==o.toDataURL()}return!1}(i[n]),e.supports.everything=e.supports.everything&&e.supports[i[n]],"flag"!==i[n]&&(e.supports.everythingExceptFlag=e.supports.everythingExceptFlag&&e.supports[i[n]]);e.supports.everythingExceptFlag=e.supports.everythingExceptFlag&&!e.supports.flag,e.DOMReady=!1,e.readyCallback=function(){e.DOMReady=!0},e.supports.everything||(r=function(){e.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",r,!1),t.addEventListener("load",r,!1)):(t.attachEvent("onload",r),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&e.readyCallback()})),(r=e.source||{}).concatemoji?c(r.concatemoji):r.wpemoji&&r.twemoji&&(c(r.twemoji),c(r.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='ai1ec_style-css'  href='//www.weregna.com/wp-content/plugins/all-in-one-event-calendar/cache/3beb2b2c_ai1ec_parsed_css.css?ver=2.6.8' type='text/css' media='all' />
<link rel='stylesheet' id='wp-customer-reviews-3-frontend-css'  href='http://www.weregna.com/wp-content/plugins/wp-customer-reviews/css/wp-customer-reviews.css?ver=3.7.0' type='text/css' media='all' />
<link rel='stylesheet' id='wp-property-frontend-css'  href='http://www.weregna.com/wp-content/plugins/wp-property/static/styles/wp_properties.css?ver=2.4.2' type='text/css' media='all' />
<link rel='stylesheet' id='contact-form-7-css'  href='http://www.weregna.com/wp-content/plugins/contact-form-7/includes/css/styles.css?ver=4.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='font-awesome-css'  href='http://www.weregna.com/wp-content/plugins/smooth-scroll-up/css/font-awesome.min.css?ver=4.6.3' type='text/css' media='all' />
<link rel='stylesheet' id='scrollup-css-css'  href='http://www.weregna.com/wp-content/plugins/smooth-scroll-up/css/scrollup.css?ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='theme-my-login-css'  href='http://www.weregna.com/wp-content/plugins/theme-my-login/assets/styles/theme-my-login.min.css?ver=7.0.15' type='text/css' media='all' />
<link rel='stylesheet' id='select2-css'  href='http://www.weregna.com/wp-content/plugins/wp-property/static/styles/select2.min.css?ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='wp-job-manager-frontend-css'  href='http://www.weregna.com/wp-content/plugins/wp-job-manager/assets/css/frontend.css?ver=1.32.2' type='text/css' media='all' />
<link rel='stylesheet' id='google-fonts-css'  href='//fonts.googleapis.com/css?family=Open+Sans%3A400%2C400italic%2C300italic%2C300%2C600%2C600italic%7CLato%3A400%2C100%2C300%2C700&#038;ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='fancybox-css-css'  href='http://www.weregna.com/wp-content/themes/accesspress-lite/css/nivo-lightbox.css?ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='bx-slider-style-css'  href='http://www.weregna.com/wp-content/themes/accesspress-lite/css/jquery.bxslider.css?ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='woo-commerce-style-css'  href='http://www.weregna.com/wp-content/themes/accesspress-lite/css/woocommerce.css?ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='accesspresslite-style-css'  href='http://www.weregna.com/wp-content/themes/accesspress-lite/style.css?ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='responsive-css'  href='http://www.weregna.com/wp-content/themes/accesspress-lite/css/responsive.css?ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='wpbdp_font_awesome-css'  href='https://use.fontawesome.com/releases/v5.6.3/css/all.css?ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='wpbdp-widgets-css'  href='http://www.weregna.com/wp-content/plugins/business-directory-plugin/assets/css/widgets.min.css?ver=5.5.3' type='text/css' media='all' />
<link rel='stylesheet' id='wpbdp-dnd-upload-css'  href='http://www.weregna.com/wp-content/plugins/business-directory-plugin/assets/css/dnd-upload.min.css?ver=5.5.3' type='text/css' media='all' />
<link rel='stylesheet' id='wpbdp-js-select2-css-css'  href='http://www.weregna.com/wp-content/plugins/business-directory-plugin/vendors/select2-4.0.5/css/select2.min.css?ver=4.0.5' type='text/css' media='all' />
<link rel='stylesheet' id='wpbdp-base-css-css'  href='http://www.weregna.com/wp-content/plugins/business-directory-plugin/assets/css/wpbdp.min.css?ver=5.5.3' type='text/css' media='all' />
<link rel='stylesheet' id='wpp-feps-style-css'  href='http://www.weregna.com/wp-content/plugins/wp-property-feps//static/styles/style.css?ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='awpcp-frontend-style-css'  href='http://www.weregna.com/wp-content/plugins/another-wordpress-classifieds-plugin/resources/css/awpcpstyle.css?ver=3.9.5' type='text/css' media='all' />
<!--[if lte IE 6]>
<link rel='stylesheet' id='awpcp-frontend-style-ie-6-css'  href='http://www.weregna.com/wp-content/plugins/another-wordpress-classifieds-plugin/resources/css/awpcpstyle-ie-6.css?ver=3.9.5' type='text/css' media='all' />
<![endif]-->
<!--[if lte IE 7]>
<link rel='stylesheet' id='awpcp-frontend-style-lte-ie-7-css'  href='http://www.weregna.com/wp-content/plugins/another-wordpress-classifieds-plugin/resources/css/awpcpstyle-lte-ie-7.css?ver=3.9.5' type='text/css' media='all' />
<![endif]-->
<script type='text/javascript' src='http://www.weregna.com/wp-includes/js/jquery/jquery.js?ver=1.12.4'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-includes/js/jquery/ui/core.min.js?ver=1.11.4'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-includes/js/jquery/ui/widget.min.js?ver=1.11.4'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-includes/js/jquery/ui/tabs.min.js?ver=1.11.4'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/wp-customer-reviews/js/wp-customer-reviews.js?ver=3.7.0'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var wpp_l10n = {"clone_property":"Clone Property","delete":"Delete","show":"Show","hide":"Hide","featured":"Featured","add_to_featured":"Add to Featured","undefined_error":"Undefined Error.","set_property_type_confirmation":"You are about to set ALL your Properties to the selected Property type. Are you sure?","processing":"Processing...","geo_attribute_usage":"Attention! This attribute (slug) is used by Google Validator and Address Display functionality. It is set automatically and can not be edited on Property Adding\/Updating page.","default_property_image":"Default Property Image","remove_image":"Remove Image","error_types_one":"Settings can't be saved. You need to enter at least one property type.","uploading":"Uploading","drop_file":"Drop files here to upload","upload_images":"Upload Image","cancel":"Cancel","fail":"Failed","dtables":{"first":"First","previous":"Previous","next":"Next","last":"Last","processing":"Processing...","show_menu_entries":"Show _MENU_ entries","no_m_records_found":"No matching records found","no_data_available":"No data available in table","loading":"Loading...","showing_entries":"Showing _START_ to _END_ of _TOTAL_ entries","showing_entries_null":"Showing o 0f 0.000000e+0ntries","filtered_from_total":"(filtered from _MAX_ total entries)","search":"Search:","display":"Display:","records":"records","all":"All"},"feps":{"unnamed_form":"Unnamed Form","form_could_not_be_removed_1":"Form could not be removed because of some server error.","form_could_not_be_removed_2":"Form could not be removed because form ID is undefined."},"fbtabs":{"unnamed_canvas":"Unnamed Canvas"},"attr_not_support_default":"Default Value not supported for this data entry.","are_you_sure":"Are you sure?","replace_all":"Replace all","replace_empty":"Replace only empty","_done":"Done!","validation_error":"Validation error. Check form fields","type_email":"Please type in your e-mail address.","checking_account":"Checking if account exists.","checking_credentials":"Checking your credentials.","credentials_verified":"Your credentials have been verified.","credentials_incorrect":"Your login credentials are not correct.","account_found_type_password":"Account found, please type in your password.","account_created_check_email":"Your account has been created. Check your e-mail to activate account."};
var wpp = {"instance":{"request":{"wpbdp_view":"all_listings"},"get":{"wpbdp_view":"all_listings"},"post":[],"iframe_enabled":false,"ajax_url":"http:\/\/www.weregna.com\/wp-admin\/admin-ajax.php","home_url":"http:\/\/www.weregna.com","user_logged_in":"false","is_permalink":true,"settings":{"configuration":{"autoload_css":"true","automatically_insert_overview":"false","base_slug":"ethiopian-ethiopia-rental","currency_symbol":"$","address_attribute":"location","google_maps_localization":"en","display_address_format":"[city], [state], [street_number] [street_name], [city], [state], [state_code], [county], [country], [zip_code]","property_overview":{"thumbnail_size":"tiny_thumb","fancybox_preview":"true","display_slideshow":"false","show_children":"true","add_sort_by_title":"false","sort_stats_by_groups":"false","show_true_as_image":"false","format_phone_number":"false","pagination_type":"slider"},"single_property_view":{"map_image_type":"tiny_thumb","gm_zoom_level":"13"},"admin_ui":{"overview_table_thumbnail_size":"tiny_thumb"},"google_maps":{"infobox_settings":{"show_direction_link":"true","show_property_title":"true","do_not_show_child_properties":"false"},"show_true_as_image":"false","infobox_attributes":["location","price","bedrooms","bathrooms","deposit","area","phone_number"]},"enable_comments":"true","exclude_from_regular_search_results":"false","do_not_automatically_regenerate_thumbnails":"false","auto_delete_attachments":"true","do_not_override_search_result_page":"true","phone_number":"","bottom_insert_pagenation":"false","gm_zoom_level":"","thousands_sep":",","currency_symbol_placement":"before","show_aggregated_value_as_average":"false","completely_hide_hidden_attributes_in_admin_ui":"false","show_ud_log":"false","allow_parent_deep_depth":"false","disable_automatic_feature_update":"false","disable_wordpress_postmeta_cache":"false","developer_mode":"false","feature_settings":{"feps":{"forms":{"9104082":{"title":"Sample Form","slug":"sample_form","new_post_status":"pending","property_type":"building","trash_time":"0","thumbnail_size":"thumbnail","images_limit":"6","new_role":"subscriber","required":{"post_title":{"attribute":"post_title","title":"Property Title","description":""}},"fields":{"7541750":{"attribute":"location","title":"Address","description":""}}},"205093":{"title":"Submit Rental Properties","slug":"submit_rental_properties","new_post_status":"pending","property_type":"building","trash_time":"0","thumbnail_size":"thumbnail","images_limit":"6","new_role":"subscriber","required":{"post_title":{"attribute":"post_title","title":"Property Title","description":""}},"fields":{"884":{"attribute":"property_type","title":"Property Type","description":""},"88":{"attribute":"post_content","title":"Property Content","description":""},"7541750":{"attribute":"price","title":"Price","description":""},"209":{"attribute":"bedrooms","title":"Bedrooms","description":""},"456":{"attribute":"bathrooms","title":"Bathrooms","description":""},"850":{"attribute":"area","title":"Area","description":""},"97":{"attribute":"phone_number","title":"Phone Number","description":""},"331":{"attribute":"location","title":"Address","description":""},"785":{"attribute":"lease_terms","title":"Lease Terms","description":""},"227":{"attribute":"image_upload","title":"Image Upload","description":""}}}}}},"enable_legacy_features":"true","area_dimensions":"sq. ft"},"default_coords":{"latitude":"57.7973333","longitude":"12.0502107"},"geo_type_attributes":["formatted_address","street_number","route","district","city","county","state","state_code","country","country_code","postal_code"],"images":{"map_icon_shadow":"http:\/\/www.weregna.com\/wp-content\/plugins\/wp-property\/images\/map_icon_shadow.png"},"descriptions":{"descriptions":{"property_type":"The property type will determine the layout.","custom_attribute_overview":"Customize what appears in search results in the attribute section.  For example: 1bed, 2baths, area varies slightly.","tagline":"Will appear on overview pages and on top of every listing page."}},"search_conversions":{"bedrooms":{"Studio":"0.5"}},"image_sizes":{"map_thumb":{"width":"75","height":"75"},"tiny_thumb":{"width":"100","height":"100"},"sidebar_wide":{"width":"195","height":"130"},"slideshow":{"width":"640","height":"235"}},"custom_coords":{"latitude":"","longitude":""},"property_groups":{"main":{"name":"Main","color":"#bdd6ff"}},"property_stats":{"location":"Address","price":"Price","bedrooms":"Bedrooms","bathrooms":"Bathrooms","deposit":"Deposit","area":"Area","phone_number":"Phone Number"},"property_stats_groups":{"location":"","price":"","bedrooms":"","bathrooms":"","deposit":"","area":"","phone_number":""},"searchable_attributes":["location","price","bedrooms","bathrooms","area"],"searchable_attr_fields":{"location":"","price":"","bedrooms":"","bathrooms":"","deposit":"","area":"","phone_number":""},"predefined_search_values":{"location":"","price":"","bedrooms":"","bathrooms":"","deposit":"","area":"","phone_number":""},"admin_attr_fields":{"location":"","price":"","bedrooms":"","bathrooms":"","deposit":"","area":"","phone_number":""},"predefined_values":{"location":"","price":"","bedrooms":"","bathrooms":"","deposit":"","area":"","phone_number":""},"sortable_attributes":["price","bedrooms","bathrooms","deposit","area"],"property_meta":{"lease_terms":"Lease Terms","pet_policy":"Pet Policy","school":"School","tagline":"Tagline"},"property_types":{"building":"Building","floorplan":"Floorplan","single_family_home":"Single Family Home","residential_properties":"Residential Properties","apartment":"Apartment","independent_house_villa":"Independent House\/ Villa","commercial":"Commercial"},"searchable_property_types":["building","floorplan","single_family_home","residential_properties","apartment","independent_house_villa","commercial"],"location_matters":["building","single_family_home","residential_properties","independent_house_villa","commercial"],"hidden_attributes":{"building":["parent"],"floorplan":["parent"],"single_family_home":["parent"],"residential_properties":["parent"],"apartment":["parent"],"independent_house_villa":["parent"],"commercial":["bedrooms","lease_terms","pet_policy","school","parent"]},"property_inheritance":{"floorplan":["location","city","city","street_number","route","state","postal_code","display_address","address_is_formatted"]},"available_features":{"class_admin_tools":{"title":"Admin Tools","tagline":"For developers and designers needing to streamline their development involving WP-Property.","image":"https:\/\/00e32e10dbd99f10ff9c-32e96bd826bcc4c9ec4a01272cd0124b.ssl.cf1.rackcdn.com\/PF-thumbs\/wpp_admin_tools.png","description":"This plugin is intended for developers and theme designers.  The plugin adds a new tab on the settings page called &quot;Developer&quot;.  There you can add new property types, attributes, etc."},"class_agents":{"title":"Real Estate Agents","tagline":"Create and associate real estate agents with your properties.","image":"https:\/\/00e32e10dbd99f10ff9c-32e96bd826bcc4c9ec4a01272cd0124b.ssl.cf1.rackcdn.com\/PF-thumbs\/wpp_agents.png","description":"The WP-Property Real Estate Agent module allows the website administrator to create new Real Estate agent accounts and associate them with properties. Multiple agents can be assigned to any given property and the agent information can be displayed in a widget placed on a property page.  Furthermore, properties can be queried by the agent(s) to create agent-specific property listings pages."},"class_wpp_facebook_tabs":{"title":"Facebook Tabs","tagline":"Facebook Tabs for WP-Property","image":"https:\/\/00e32e10dbd99f10ff9c-32e96bd826bcc4c9ec4a01272cd0124b.ssl.cf1.rackcdn.com\/PF-thumbs\/fb-tabs.png","description":"The Feature allows you to add a tab with property listings or any other content from your website, on a Facebook Page."},"class_wpp_feps":{"title":"Front End Property Submissions (FEPS)","tagline":"Allow your visitors to submit properties.","image":"https:\/\/00e32e10dbd99f10ff9c-32e96bd826bcc4c9ec4a01272cd0124b.ssl.cf1.rackcdn.com\/PF-thumbs\/wpp_feps.png","description":"Front End Property Submission (FEPS) lets you create forms and display them on the front-end of the website.  The forms may be used by visitors to submit properties, which are then held for approval. "},"class_wpp_pdf_flyer":{"title":"PDF Flyer","tagline":"Instantly create PDF flyers for your properties.","image":"https:\/\/00e32e10dbd99f10ff9c-32e96bd826bcc4c9ec4a01272cd0124b.ssl.cf1.rackcdn.com\/PF-thumbs\/class_wpp_pdf_flyer.png","description":"The WP-Property PDF Flyer premium feature allows the website owner to quickly generate PDF flyers, or brochures, ready for printing or download.  The feature comes with a standard PDF format and a user interface allows the administrator to select which information to display, what colors to use, image sizes, and a logo.  For more advances users custom PDF template layouts can be used. "},"class_wpp_power_tools":{"title":"Power Tools with Capability Management","tagline":"Power tools and capability management for WP-Property.","image":"https:\/\/00e32e10dbd99f10ff9c-32e96bd826bcc4c9ec4a01272cd0124b.ssl.cf1.rackcdn.com\/PF-thumbs\/wpp_roles.png","description":"Extra functionality which includes capability management, white labeling the control panel, and changes menu titles."},"class_wpp_property_import":{"title":"XML Property Importer","tagline":"Map and import XML-based properties into your WP-Property powered site.","image":"https:\/\/00e32e10dbd99f10ff9c-32e96bd826bcc4c9ec4a01272cd0124b.ssl.cf1.rackcdn.com\/PF-thumbs\/wpp_property_import.png","description":"The XMLI Importer enables you to automatically import property listings directly into your website.  This includes MLS, RETS, XML, and many other source formats. Properties are created, merged, removed, or updated according to rules you specify. This powerful importation tool downloads and attaches images and can even associate properties with real estate agents, on the fly. Once an import schedule has been created, you can literally import hundreds, thousands, even tens of thousands of properties with a single click."},"class_wpp_slideshow":{"title":"Slideshow","tagline":"A slideshow for every property page, home page, or both.","image":"https:\/\/00e32e10dbd99f10ff9c-32e96bd826bcc4c9ec4a01272cd0124b.ssl.cf1.rackcdn.com\/PF-thumbs\/wpp_slideshow.png","description":"The slideshow feature allows you to insert a slideshow into any property page, home page, or virtually anywhere in your blog. <br \/> <br \/>We made it extremely simple - the slideshow page searches through the Media Library looking for images that are big enough for the slideshow - dimensions to which you would specify in the main WP-Property control panel."},"class_wpp_supermap":{"title":"Super Map","tagline":"Interactive map showcasing all of your properties","image":"https:\/\/00e32e10dbd99f10ff9c-32e96bd826bcc4c9ec4a01272cd0124b.ssl.cf1.rackcdn.com\/PF-thumbs\/wpp_supermap.png","description":"Super Map plugin lets you put a large interactive map virtually anywhere in your WordPress setup.  The map lets your visitors quickly view the location of all your properties, and filter them down by attributes."}},"installed_features":{"class_wpp_feps":{"name":"Front End Property Submissions (FEPS)","version":"2.6.3","description":"Allow users to add properties from the front-end.","class":"class_wpp_feps","minimum.core":"1.42.0","needs_higher_wpp_version":"false","disabled":"false"}},"taxonomies":{"property_feature":{"hierarchical":false,"label":"Features","labels":{"name":"Features","singular_name":"Feature","search_items":"Search Features","all_items":"All Features","parent_item":"Parent Feature","parent_item_colon":"Parent Feature:","edit_item":"Edit Feature","update_item":"Update Feature","add_new_item":"Add New Feature","new_item_name":"New Feature Name","menu_name":"Feature"},"query_var":"property_feature","rewrite":{"slug":"feature"},"default":true,"public":true,"show_ui":true,"show_in_nav_menus":true,"show_tagcloud":true,"add_native_mtbox":true},"community_feature":{"hierarchical":false,"label":"Community Features","labels":{"name":"Community Features","singular_name":"Community Feature","search_items":"Search Community Features","all_items":"All Community Features","parent_item":"Parent Community Feature","parent_item_colon":"Parent Community Feature:","edit_item":"Edit Community Feature","update_item":"Update Community Feature","add_new_item":"Add New Community Feature","new_item_name":"New Community Feature Name","menu_name":"Community Feature"},"query_var":"community_feature","rewrite":{"slug":"community_feature"},"default":true,"public":true,"show_ui":true,"show_in_nav_menus":true,"show_tagcloud":true,"add_native_mtbox":true}},"labels":{"name":"Properties","all_items":"All Properties","singular_name":"Property","add_new":"Add Property","add_new_item":"Add New Property","edit_item":"Edit Property","new_item":"New Property","view_item":"View Property","search_items":"Search Properties","not_found":"No properties found","not_found_in_trash":"No properties found in Trash","parent_item_colon":""},"name":"WP-Property","version":"2.4.2","domain":"wpp","prop_std_att":{"pdf":{"price":{"label":"Price","notice":""},"address":{"label":"Address","notice":"This attribute will be used for automatic geolocation."},"bedrooms":{"label":"Bedrooms","notice":""},"bathrooms":{"label":"Bathrooms","notice":""},"living_space_size":{"label":"Living Space size Sq ft","notice":""},"features":{"label":"Features","notice":""},"community_features":{"label":"Community Features","notice":""}},"importer":{"total_rooms":{"label":"Total Rooms","notice":""},"year_built":{"label":"Year Built","notice":""},"no_of_floors":{"label":"No. of Floors","notice":""},"lot_size_acres":{"label":"Lot size, acres","notice":""},"neighborhood":{"label":"Neighborhood (term)","notice":""},"fees":{"label":"Fees","notice":""},"status":{"label":"Status","notice":""}}},"prop_std_att_mapped":[],"prop_std_att_mapsto":[],"property_assistant":{"default_atts":{"tagline":"Tagline","location":"Address","city":"City","price":"Price","year_built":"Year Built","fees":"Fees"},"residential":{"bedrooms":"Bedrooms","bathrooms":"Bathrooms","total_rooms":"Total Rooms","living_space":"Living space"},"commercial":{"business_purpose":"Business Purpose"},"land":{"lot_size":"Lot Size"}},"attributes":{"types":{"input":"Short Text","textarea":"Textarea","checkbox":"Checkbox","datetime":"Date and Time","currency":"Currency","number":"Number","wysiwyg":"Text Editor","dropdown":"Dropdown Selection","select_advanced":"Advanced Dropdown","multi_checkbox":"Multi-Checkbox","radio":"Radio","url":"URL","oembed":"Oembed","date":"Date picker","time":"Time picker","color":"Color picker","image_advanced":"Image upload","file_advanced":"Files upload","file_input":"File URL"},"searchable":{"input":["input"],"textarea":["input"],"wysiwyg":["input"],"dropdown":["dropdown","multicheckbox"],"select_advanced":["dropdown","multicheckbox"],"checkbox":["checkbox"],"multi_checkbox":["input","dropdown","multicheckbox"],"radio":["dropdown","multicheckbox"],"number":["input","dropdown","range_input","range_dropdown","advanced_range_dropdown"],"currency":["input","dropdown","range_input","range_dropdown","advanced_range_dropdown"],"url":["input"],"date":["range_date"]},"default":{"input":"text","number":"text","currency":"text","url":"text","oembed":"text","textarea":"textarea","wysiwyg":"textarea"},"multiple":["categorical-term","multi_checkbox","image_advanced","file_advanced","image_upload"]},"numeric_attributes":[],"currency_attributes":[]}}};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/wp-property/static/scripts/l10n.js?ver=2.4.2'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-includes/js/jquery/ui/mouse.min.js?ver=1.11.4'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-includes/js/jquery/ui/sortable.min.js?ver=1.11.4'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/wp-property/static/scripts/wpp.global.js?ver=2.4.2'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/business-directory-plugin/vendors/jQuery-File-Upload-9.5.7/js/jquery.iframe-transport.min.js?ver=9.5.7'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/business-directory-plugin/vendors/jQuery-File-Upload-9.5.7/js/jquery.fileupload.min.js?ver=9.5.7'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/business-directory-plugin/assets/js/dnd-upload.min.js?ver=5.5.3'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/business-directory-plugin/vendors/jquery-breakpoints.min.js?ver=0.0.11'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/business-directory-plugin/vendors/select2-4.0.5/js/select2.full.min.js?ver=4.0.5'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-includes/js/jquery/ui/datepicker.min.js?ver=1.11.4'></script>
<script type='text/javascript'>
jQuery(document).ready(function(jQuery){jQuery.datepicker.setDefaults({"closeText":"Close","currentText":"Today","monthNames":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthNamesShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"nextText":"Next","prevText":"Previous","dayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"dayNamesShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"dayNamesMin":["S","M","T","W","T","F","S"],"dateFormat":"MM d, yy","firstDay":1,"isRTL":false});});
</script>
<script type='text/javascript'>
/* <![CDATA[ */
var wpbdp_global = {"ajaxurl":"http:\/\/www.weregna.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/business-directory-plugin/assets/js/wpbdp.min.js?ver=5.5.3'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/wp-property-feps//static/scripts/dot.js?ver=4.7.25'></script>
<link rel='https://api.w.org/' href='http://www.weregna.com/wp-json/' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.weregna.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.weregna.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 4.7.25" />
<link rel='shortlink' href='http://www.weregna.com/?p=26' />
<link rel="alternate" type="application/json+oembed" href="http://www.weregna.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.weregna.com%2Fethiopia-ethiopian-yellow-pages%2F" />
<link rel="alternate" type="text/xml+oembed" href="http://www.weregna.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.weregna.com%2Fethiopia-ethiopian-yellow-pages%2F&#038;format=xml" />
<link rel="stylesheet" type="text/css" href="http://www.weregna.com/wp-content/plugins/j-shortcodes/css/jay.css" />
<script type="text/javascript" src="http://www.weregna.com/wp-content/plugins/j-shortcodes/js/jay.js"></script><link rel="stylesheet" type="text/css" href="http://www.weregna.com/wp-content/plugins/j-shortcodes/galleryview/css/jquery.galleryview-3.0.css" />
<script type="text/javascript" src="http://www.weregna.com/wp-content/plugins/j-shortcodes/galleryview/js/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="http://www.weregna.com/wp-content/plugins/j-shortcodes/galleryview/js/jquery.timers-1.2.js"></script>
<script type="text/javascript" src="http://www.weregna.com/wp-content/plugins/j-shortcodes/galleryview/js/jquery.galleryview-3.0.min.js"></script><link rel="stylesheet" type="text/css" href="http://www.weregna.com/wp-content/plugins/j-shortcodes/css/jquery/smoothness/jquery-ui-1.8.9.custom.css" /><style type="text/css"></style></head>

<body class="page-template-default page page-id-26 no-sidebar accesspress-lite wpbdp-with-button-styles business-directory wpbdp-view-all_listings wpbdp-wp-theme-accesspress-lite wpbdp-theme-no_theme">
<div id="page" class="site">

	<header id="masthead" class="site-header">
    <div id="top-header">
		<div class="ak-container">
			<div class="site-branding">
				
				
								<a href="http://www.weregna.com/" rel="home">
					<img src="http://www.weregna.com/wp-content/uploads/2014/11/logo1.png" alt="Weregna">
				</a>
								
				
			</div><!-- .site-branding -->
        

			<div class="right-header clearfix">
				<div class="header-text"><p>Call us : 202.452.1332</p>
</div>                <div class="clearfix"></div>
                		<div class="socials">
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				</div>
					<div class="ak-search">
						<form method="get" class="searchform" action="http://www.weregna.com/" role="search">
		<input type="text" name="s" value="" class="s" placeholder="Search..." />
		<button type="submit" name="submit" class="searchsubmit"><i class="fa fa-search"></i></button>
	</form>
				</div>
							</div><!-- .right-header -->
		</div><!-- .ak-container -->
  </div><!-- #top-header -->

		
		<nav id="site-navigation" class="main-navigation menu-left">
			<div class="ak-container">
				<h1 class="menu-toggle">Menu</h1>

				<div class="menu-menu-1-container"><ul id="menu-menu-1" class="menu"><li id="menu-item-38" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-38"><a href="http://www.weregna.com/">HOME</a></li>
<li id="menu-item-137" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-137"><a href="http://www.weregna.com/ethiopia-jobs/">JOBS</a>
<ul class="sub-menu">
	<li id="menu-item-278" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-278"><a href="http://www.weregna.com/ethiopia-jobs/">View All JOBS</a></li>
	<li id="menu-item-138" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-138"><a href="http://www.weregna.com/submit-job/">SUBMIT JOB</a></li>
	<li id="menu-item-139" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-139"><a href="http://www.weregna.com/job-dashboard/">JOB DASHBOARD</a></li>
</ul>
</li>
<li id="menu-item-4370" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-4370"><a href="#">RENTALS</a>
<ul class="sub-menu">
	<li id="menu-item-200" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-200"><a href="http://www.weregna.com/ethiopian-ethiopia-rental/">View Rentals</a></li>
	<li id="menu-item-4354" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4354"><a href="http://www.weregna.com/ethiopian-ethiopia-submit-rental-form/">Post Rentals</a></li>
</ul>
</li>
<li id="menu-item-292" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-292"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/">YELLOW PAGES</a></li>
<li id="menu-item-191" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-191"><a href="http://www.weregna.com/local-events/">LOCAL-EVENTS</a></li>
<li id="menu-item-282" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-282"><a href="http://www.weregna.com/login/">Log In / Sign Up</a></li>
<li id="menu-item-7675" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-7675"><a href="http://www.weregna.com/review/">REVIEW</a></li>
<li id="menu-item-42" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-42"><a href="http://www.weregna.com/contact/">CONTACT</a></li>
</ul></div>			</div>
		</nav><!-- #site-navigation -->
	</header><!-- #masthead -->

	<section id="slider-banner">
			</section><!-- #slider-banner -->
		<div id="content" class="site-content">

<div class="ak-container">

	<div id="primary" class="content-area">
		<main id="main" class="site-main" role="main">

			
				
<article id="post-26" class="post-26 page type-page status-publish hentry">
	<header class="entry-header">
		<h1 class="entry-title">YELLOW PAGES</h1>
	</header><!-- .entry-header -->

	<div class="entry-content">
		<div data-wpcr3-content="-1"><div class='wpcr3_respond_1 ' data-ajaxurl='["http:||www","weregna","com|wp-admin|admin-ajax","php?action=wpcr3-ajax"]' data-on-postid='26'data-postid='-1'><div class="wpcr3_reviews_holder"><div class="wpcr3_review_item"><div class="wpcr3_item wpcr3_business" itemscope itemtype="https://schema.org/LocalBusiness"><meta itemprop="name" content="Weregna" /><meta itemprop="url" content="http://www.weregna.com" /><meta itemprop="image" content="http://www.weregna.com/wp-content/plugins/wp-customer-reviews/css/1x1.png" /><div class="wpcr3_dotline"></div><div id="wpcr3_id_7671" class="wpcr3_review" itemprop="review" itemscope itemtype="https://schema.org/Review"><div class="wpcr3_hide" itemprop="author" itemscope itemtype="https://schema.org/Person"><div itemprop="name">Bumbaa</div></div><div class="wpcr3_hide" itemprop="reviewRating" itemscope itemtype="https://schema.org/Rating"><meta itemprop="bestRating" content="5" /><meta itemprop="worstRating" content="1" /><meta itemprop="ratingValue" content="5" /></div><div class="wpcr3_review_ratingValue"><div class="wpcr3_rating_style1"><div class="wpcr3_rating_style1_base "><div class="wpcr3_rating_style1_average" style="width:100%;"></div></div></div></div><div class="wpcr3_review_datePublished" itemprop="datePublished">May 27, 2018</div><div class="wpcr3_review_author">&nbsp;by&nbsp;<span class="wpcr3_caps">Bumbaa</span>&nbsp;on&nbsp;<span class="wpcr3_item_name"><a href="http://www.weregna.com/">Weregna</a></span></div><div class="wpcr3_clear"></div><div class="wpcr3_review_title wpcr3_caps">Excellent Web Portal</div><div class="wpcr3_clear"></div><blockquote class="wpcr3_content" itemprop="reviewBody"><p>This portal got really excellent information regarding Jobs Events Rentals and Yellowpages with lots and lots of data ... I love this Weregna Site which helps me find jobs and also rental for my staying at Ethiopia...<br />Thanks Weregna</p></blockquote><blockquote class="wpcr3_content wpcr3_admin_response"><p>Thanks Mr. Bumbaa for your valuable review</p></blockquote></div></div></div></div></div></div>
<p><code><code><code><tt><div id="wpbdp-page-all_listings" class="wpbdp-page wpbdp-page-all_listings ">
                    <div id="wpbdp-main-box" class="wpbdp-main-box" data-breakpoints='{"tiny": [0,360], "small": [360,560], "medium": [560,710], "large": [710,999999]}' data-breakpoints-class-prefix="wpbdp-main-box">

<div class="main-fields box-row cols-2 cf">
    <form action="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/?wpbdp_view=search" method="get">
        <input type="hidden" name="wpbdp_view" value="search" />
                        <div class="box-col search-fields">
            <div class="box-row cols-1">
                <div class="box-col main-input">
                    <input type="text" id="wpbdp-main-box-keyword-field" class="keywords-field" name="kw" placeholder="Find listings for &lt;keywords&gt;" />
                </div>
                            </div>
        </div>
        <div class="box-col submit-btn">
            <input type="submit" value="Find Listings" /><br />
            <a class="advanced-search-link" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/?wpbdp_view=search">Advanced Search</a>
        </div>
    </form>
</div>

<div class="box-row separator"></div>

<div class="box-row"><div class="wpbdp-main-links-container" data-breakpoints='{"tiny": [0,360], "small": [360,560], "medium": [560,710], "large": [710,999999]}' data-breakpoints-class-prefix="wpbdp-main-links"><div class="wpbdp-main-links wpbdp-main-links-3-buttons"><input id="wpbdp-bar-show-directory-button" type="button" value="Directory" onclick="window.location.href = 'http://www.weregna.com/ethiopia-ethiopian-yellow-pages/'" class="button wpbdp-button" /><input id="wpbdp-bar-view-listings-button" type="button" value="View All Listings" onclick="window.location.href = 'http://www.weregna.com/ethiopia-ethiopian-yellow-pages/?wpbdp_view=all_listings'" class="button wpbdp-button" /><input id="wpbdp-bar-submit-listing-button" type="button" value="Create A Listing" onclick="window.location.href = 'http://www.weregna.com/ethiopia-ethiopian-yellow-pages/?wpbdp_view=submit_listing'" class="button wpbdp-button" /></div></div></div>

</div>
    
    
            
<div id="wpbdp-listings-list" class="listings wpbdp-listings-list list">
            <div id="wpbdp-listing-3891" class="wpbdp-listing-3891 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-69 even" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3891/south-nations-nationalities-peoples-regional-state-ethics-and-anti-corruption-commission/" target="_self" >&#8220;SOUTH NATIONS, NATIONALITIES &#038; PEOPLES&#8217; REGIONAL STATE ETHICS AND ANTI-CORRUPTION COMMISSION&#8221;</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/government-agencies/" rel="tag">Government Agencies</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">HAWASSA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>HAWASSA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value">
 046 220 7069</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government/" rel="tag">Government</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-agencies/" rel="tag">Government Agencies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-bodies/" rel="tag">Government Bodies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-departments/" rel="tag">Government Departments</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-offices/" rel="tag">Government offices</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3891/south-nations-nationalities-peoples-regional-state-ethics-and-anti-corruption-commission/"  >View</a></div>
</div>
<div id="wpbdp-listing-3890" class="wpbdp-listing-3890 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-69 odd" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3890/southern-nations-nationalities-peoples-regional-council-of-nationalities/" target="_self" >&#8220;SOUTHERN NATIONS, NATIONALITIES &#038; PEOPLES REGIONAL COUNCIL OF NATIONALITIES&#8221;</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/government-agencies/" rel="tag">Government Agencies</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">HAWASSA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>HAWASSA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value">
 046 220 8652</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government/" rel="tag">Government</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-agencies/" rel="tag">Government Agencies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-bodies/" rel="tag">Government Bodies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-departments/" rel="tag">Government Departments</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-offices/" rel="tag">Government offices</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3890/southern-nations-nationalities-peoples-regional-council-of-nationalities/"  >View</a></div>
</div>
<div id="wpbdp-listing-3325" class="wpbdp-listing-3325 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-69 even" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3325/the-ethiopian-food-medicines-and-health-care-administration-and-control-authority-efmhaca-6/" target="_self" >&#8220;The Ethiopian Food, Medicines and Health Care Administration and Control Authority (EFMHACA)&#8221;</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/government-agencies/" rel="tag">Government Agencies</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA,P.O.Box 5681</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA,P.O.Box 5681</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value">
 011 552 4122</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government/" rel="tag">Government</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-agencies/" rel="tag">Government Agencies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-bodies/" rel="tag">Government Bodies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-departments/" rel="tag">Government Departments</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-offices/" rel="tag">Government offices</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3325/the-ethiopian-food-medicines-and-health-care-administration-and-control-authority-efmhaca-6/"  >View</a></div>
</div>
<div id="wpbdp-listing-3338" class="wpbdp-listing-3338 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-69 odd" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3338/the-regional-government-of-oromia-water-mineral-and-energy-bureau-6/" target="_self" >&#8220;The Regional Government of Oromia Water, Mineral, and Energy Bureau&#8221;</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/government-agencies/" rel="tag">Government Agencies</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA,P.O.Box 8630</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA,P.O.Box 8630</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value">
 "011 551 6938, 011 554 9333"</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government/" rel="tag">Government</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-agencies/" rel="tag">Government Agencies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-bodies/" rel="tag">Government Bodies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-departments/" rel="tag">Government Departments</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-offices/" rel="tag">Government offices</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3338/the-regional-government-of-oromia-water-mineral-and-energy-bureau-6/"  >View</a></div>
</div>
<div id="wpbdp-listing-780" class="wpbdp-listing-780 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-63 even" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/780/2-seven-car-decor-building-materials/" target="_self" >2-SEVEN CAR DECOR &#038; BUILDING MATERIALS</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/building-construction-meterials/" rel="tag">Building / Construction Meterials</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> 011 155 2088</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/building-materialsconstruction-meterials/" rel="tag">Building Materials,Construction Meterials</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/780/2-seven-car-decor-building-materials/"  >View</a></div>
</div>
<div id="wpbdp-listing-2198" class="wpbdp-listing-2198 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-82 odd" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/2198/2000-habesha-cultural-restaurant/" target="_self" >2000 Habesha Cultural Restaurant</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/restaurant/" rel="tag">Restaurant</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">Addis Ababa, Ethiopia</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>Addis Ababa, Ethiopia</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> +251-116-182253 / 58</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/coffes-shop/" rel="tag">Coffes Shop</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/lounge/" rel="tag">Lounge</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/resturants/" rel="tag">Resturants</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/2198/2000-habesha-cultural-restaurant/"  >View</a></div>
</div>
<div id="wpbdp-listing-2275" class="wpbdp-listing-2275 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-82 even" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/2275/2000-habesha-cultural-restaurant-2/" target="_self" >2000 Habesha Cultural Restaurant</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/restaurant/" rel="tag">Restaurant</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">Addis Ababa, Ethiopia</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>Addis Ababa, Ethiopia</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> +251-116-182253 / 58</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/coffes-shop/" rel="tag">Coffes Shop</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/lounge/" rel="tag">Lounge</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/resturants/" rel="tag">Resturants</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/2275/2000-habesha-cultural-restaurant-2/"  >View</a></div>
</div>
<div id="wpbdp-listing-781" class="wpbdp-listing-781 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-63 odd" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/781/22-building-materials-shop/" target="_self" >22 BUILDING MATERIALS SHOP</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/building-construction-meterials/" rel="tag">Building / Construction Meterials</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> 011 661 4926</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/building-materialsconstruction-meterials/" rel="tag">Building Materials,Construction Meterials</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/781/22-building-materials-shop/"  >View</a></div>
</div>
<div id="wpbdp-listing-1519" class="wpbdp-listing-1519 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-65 even" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1519/2a-3b-bete-abreham-hotel/" target="_self" >2A 3B BETE ABREHAM HOTEL</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/hotels/" rel="tag">Hotels</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value">
 011 662 2245</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value"> 011 663 6048</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotel/" rel="tag">Hotel</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotels/" rel="tag">Hotels</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1519/2a-3b-bete-abreham-hotel/"  >View</a></div>
</div>
<div id="wpbdp-listing-1513" class="wpbdp-listing-1513 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-65 odd" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1513/43th-hotel/" target="_self" >43TH HOTEL</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/hotels/" rel="tag">Hotels</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">GAMBELLA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>GAMBELLA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> 091 246 5099</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotel/" rel="tag">Hotel</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotels/" rel="tag">Hotels</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1513/43th-hotel/"  >View</a></div>
</div>
<div id="wpbdp-listing-1514" class="wpbdp-listing-1514 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-65 even" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1514/7-days-12-hours-cafe-restaurant/" target="_self" >7 DAYS 12 HOURS CAFE &#038; RESTAURANT</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/hotels/" rel="tag">Hotels</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> 011 440 1604</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotel/" rel="tag">Hotel</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotels/" rel="tag">Hotels</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1514/7-days-12-hours-cafe-restaurant/"  >View</a></div>
</div>
<div id="wpbdp-listing-1515" class="wpbdp-listing-1515 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-65 odd" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1515/7-e-hotel/" target="_self" >7 E HOTEL</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/hotels/" rel="tag">Hotels</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> 011 433 9888</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotel/" rel="tag">Hotel</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotels/" rel="tag">Hotels</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1515/7-e-hotel/"  >View</a></div>
</div>
<div id="wpbdp-listing-1516" class="wpbdp-listing-1516 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-65 even" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1516/7-up-hotel/" target="_self" >7 UP HOTEL</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/hotels/" rel="tag">Hotels</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> 011 618 0541</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotel/" rel="tag">Hotel</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotels/" rel="tag">Hotels</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1516/7-up-hotel/"  >View</a></div>
</div>
<div id="wpbdp-listing-1227" class="wpbdp-listing-1227 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-65 odd" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1227/a-m-resort-hotel/" target="_self" >A &#038; M Resort Hotel</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/hotels/" rel="tag">Hotels</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">HAWASSA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>HAWASSA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> 046 221 5208</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotel/" rel="tag">Hotel</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/hotels/" rel="tag">Hotels</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1227/a-m-resort-hotel/"  >View</a></div>
</div>
<div id="wpbdp-listing-1848" class="wpbdp-listing-1848 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-66 even" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1848/a-meucci-plc/" target="_self" >A. MEUCCI PLC</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/spare-parts/" rel="tag">Spare Parts</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> 011 111 1892</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value"> 011 155 3260</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/auto-spare-parts/" rel="tag">Auto Spare Parts</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/car-auto-spare-parts/" rel="tag">Car Auto Spare Parts</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/spare-parts/" rel="tag">Spare Parts</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/1848/a-meucci-plc/"  >View</a></div>
</div>
<div id="wpbdp-listing-3658" class="wpbdp-listing-3658 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-69 odd" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3658/a-a-tvet-agency/" target="_self" >A.A -TVET AGENCY</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/government-agencies/" rel="tag">Government Agencies</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value">
 011 156 4195</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government/" rel="tag">Government</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-agencies/" rel="tag">Government Agencies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-bodies/" rel="tag">Government Bodies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-departments/" rel="tag">Government Departments</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-offices/" rel="tag">Government offices</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3658/a-a-tvet-agency/"  >View</a></div>
</div>
<div id="wpbdp-listing-3900" class="wpbdp-listing-3900 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-69 even" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3900/a-a-water-sewerage-authority/" target="_self" >A.A WATER &#038; SEWERAGE AUTHORITY</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/government-agencies/" rel="tag">Government Agencies</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> 091 307 8555</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government/" rel="tag">Government</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-agencies/" rel="tag">Government Agencies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-bodies/" rel="tag">Government Bodies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-departments/" rel="tag">Government Departments</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-offices/" rel="tag">Government offices</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3900/a-a-water-sewerage-authority/"  >View</a></div>
</div>
<div id="wpbdp-listing-3901" class="wpbdp-listing-3901 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-69 odd" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3901/a-a-youth-sport-commission/" target="_self" >A.A YOUTH &#038; SPORT COMMISSION</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/government-agencies/" rel="tag">Government Agencies</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value"> 011 156 0293</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value">,</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government/" rel="tag">Government</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-agencies/" rel="tag">Government Agencies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-bodies/" rel="tag">Government Bodies</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-departments/" rel="tag">Government Departments</a>, <a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/government-offices/" rel="tag">Government offices</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/3901/a-a-youth-sport-commission/"  >View</a></div>
</div>
<div id="wpbdp-listing-773" class="wpbdp-listing-773 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-63 even" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/773/a-i-a-p-l-c/" target="_self" >A.I.A P.L.C</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/building-construction-meterials/" rel="tag">Building / Construction Meterials</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value">
 011 275 5056</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value"> 011 275 5099</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/building-materialsconstruction-meterials/" rel="tag">Building Materials,Construction Meterials</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/773/a-i-a-p-l-c/"  >View</a></div>
</div>
<div id="wpbdp-listing-779" class="wpbdp-listing-779 wpbdp-listing excerpt wpbdp-excerpt wpbdp-listing-excerpt wpbdp-listing-plan-id-1 wpbdp-listing-plan-free_listing wpbdp-listing-category-id-63 odd" data-breakpoints='{"medium": [560,780], "large": [780,999999]}' data-breakpoints-class-prefix="wpbdp-listing-excerpt">
                
<div class="listing-details">
            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_name wpbdp-field-title wpbdp-field-type-textfield wpbdp-field-association-title  " ><label>Business Name:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/779/a-k-e/" target="_self" >A.K.E</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_genre wpbdp-field-category wpbdp-field-type-select wpbdp-field-association-category  " ><label>Business Genre:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_category/building-construction-meterials/" rel="tag">Building / Construction Meterials</a></span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-short_business_description wpbdp-field-excerpt wpbdp-field-type-textarea wpbdp-field-association-excerpt  " ><label>Short Business Description:</label> <span class="value">ADDIS ABABA, ETHIOPIA</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-long_business_description wpbdp-field-content wpbdp-field-type-textarea wpbdp-field-association-content  " ><label>Long Business Description:</label> <span class="value"><p>ADDIS ABABA, ETHIOPIA</p>
</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_phone_number wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Phone Number:</label> <span class="value">
 011 277 9313</span></div>            <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_fax wpbdp-field-meta wpbdp-field-type-textfield wpbdp-field-association-meta  " ><label>Business Fax:</label> <span class="value"> 011 277 9313</span></div>                        <div class="wpbdp-field-display wpbdp-field wpbdp-field-value field-display field-value wpbdp-field-business_tags wpbdp-field-tags wpbdp-field-type-textfield wpbdp-field-association-tags  " ><label>Business Tags:</label> <span class="value"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/wpbdp_tag/building-materialsconstruction-meterials/" rel="tag">Building Materials,Construction Meterials</a></span></div>    
            <div class="social-fields cf"></div>
    </div>
    
    <div class="listing-actions cf">
    <a class="wpbdp-button button view-listing" href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/779/a-k-e/"  >View</a></div>
</div>

        <div class="wpbdp-pagination">
                    <span class="prev"></span>
            <span class="next"><a href="http://www.weregna.com/ethiopia-ethiopian-yellow-pages/page/2/?wpbdp_view=all_listings" >Next &raquo;</a></span>
                </div>
    </div>
        </div>
</tt></code></code> </code></p>
			</div><!-- .entry-content -->
	</article><!-- #post-## -->

				
			
		</main><!-- #main -->
	</div><!-- #primary -->



</div>

	</div><!-- #content -->

	<footer id="colophon" class="site-footer" role="contentinfo">
	
		
		<div id="bottom-footer">
		<div class="ak-container">
			<h1 class="site-info">
				<a href="http://weregna.com/">©</a>
				<span class="sep"> | </span>
				<a href="http://weregna.com/" title="Weregna Ethiopian" target="_blank">Weregna Ethiopian</a>
			</h1><!-- .site-info -->

			<div class="copyright">
				Copyright &copy; 2024 
				<a href="http://www.weregna.com">
				Weregna				</a>
			</div>
		</div>
		</div>
	</footer><!-- #colophon -->
</div><!-- #page -->

<script> var $nocnflct = jQuery.noConflict();
			$nocnflct(function () {
			    $nocnflct.scrollUp({
				scrollName: 'scrollUp', // Element ID
				scrollClass: 'scrollUp scrollup-link scrollup-right', // Element Class
				scrollDistance: 300, // Distance from top/bottom before showing element (px)
				scrollFrom: 'top', // top or bottom
				scrollSpeed: 300, // Speed back to top (ms )
				easingType: 'linear', // Scroll to top easing (see http://easings.net/)
				animation: 'fade', // Fade, slide, none
				animationInSpeed: 200, // Animation in speed (ms )
				animationOutSpeed: 200, // Animation out speed (ms )
				scrollText: '<id class="fa fa-arrow-circle-up fa-2x"></id>', // Text for element, can contain HTML
				scrollTitle: false, // Set a custom link title if required. Defaults to scrollText
				scrollImg: false, // Set true to use image
				activeOverlay: false, // Set CSS color to display scrollUp active point
				zIndex: 2147483647 // Z-Index for the overlay
			    });
			});</script><link rel='stylesheet' id='sgf-google-fonts-1-css'  href='http://fonts.googleapis.com/css?family=ABeeZee%7CAbel%7CAbril+Fatface%7CAclonica%7CAcme%7CActor%7CAdamina%7CAdvent+Pro%7CAguafina+Script%7CAkronim%7CAladin%7CAldrich%7CAlef%7CAlegreya%7CAlegreya+SC%7CAlegreya+Sans%7CAlegreya+Sans+SC%7CAlex+Brush%7CAlfa+Slab+One%7CAlice%7CAlike%7CAlike+Angular%7CAllan%7CAllerta%7CAllerta+Stencil%7CAllura%7CAlmendra%7CAlmendra+Display%7CAlmendra+SC%7CAmarante%7CAmaranth%7CAmatic+SC%7CAmethysta%7CAnaheim%7CAndada%7CAndika%7CAngkor%7CAnnie+Use+Your+Telescope%7CAnonymous+Pro%7CAntic%7CAntic+Didone%7CAntic+Slab%7CAnton%7CArapey%7CArbutus%7CArbutus+Slab%7CArchitects+Daughter%7CArchivo+Black%7CArchivo+Narrow%7CArimo%7CArizonia%7CArmata%7CArtifika%7CArvo%7CAsap%7CAsset%7CAstloch%7CAsul%7CAtomic+Age%7CAubrey%7CAudiowide%7CAutour+One%7CAverage%7CAverage+Sans%7CAveria+Gruesa+Libre%7CAveria+Libre%7CAveria+Sans+Libre%7CAveria+Serif+Libre%7CBad+Script%7CBalthazar%7CBangers%7CBasic%7CBattambang%7CBaumans%7CBayon%7CBelgrano%7CBelleza%7CBenchNine%7CBentham%7CBerkshire+Swash%7CBevan%7CBigelow+Rules%7CBigshot+One%7CBilbo%7CBilbo+Swash+Caps%7CBitter%7CBlack+Ops+One%7CBokor%7CBonbon%7CBoogaloo%7CBowlby+One%7CBowlby+One+SC%7CBrawler%7CBree+Serif%7CBubblegum+Sans%7CBubbler+One%7CBuda%7CBuenard%7CButcherman%7CButterfly+Kids&#038;ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='sgf-google-fonts-2-css'  href='http://fonts.googleapis.com/css?family=Cabin%7CCabin+Condensed%7CCabin+Sketch%7CCaesar+Dressing%7CCagliostro%7CCalligraffitti%7CCambo%7CCandal%7CCantarell%7CCantata+One%7CCantora+One%7CCapriola%7CCardo%7CCarme%7CCarrois+Gothic%7CCarrois+Gothic+SC%7CCarter+One%7CCaudex%7CCedarville+Cursive%7CCeviche+One%7CChanga+One%7CChango%7CChau+Philomene+One%7CChela+One%7CChelsea+Market%7CChenla%7CCherry+Cream+Soda%7CCherry+Swash%7CChewy%7CChicle%7CChivo%7CCinzel%7CCinzel+Decorative%7CClicker+Script%7CCoda%7CCoda+Caption%7CCodystar%7CCombo%7CComfortaa%7CComing+Soon%7CConcert+One%7CCondiment%7CContent%7CContrail+One%7CConvergence%7CCookie%7CCopse%7CCorben%7CCourgette%7CCousine%7CCoustard%7CCovered+By+Your+Grace%7CCrafty+Girls%7CCreepster%7CCrete+Round%7CCrimson+Text%7CCroissant+One%7CCrushed%7CCuprum%7CCutive%7CCutive+Mono%7CDamion%7CDancing+Script%7CDangrek%7CDawning+of+a+New+Day%7CDays+One%7CDelius%7CDelius+Swash+Caps%7CDelius+Unicase%7CDella+Respira%7CDenk+One%7CDevonshire%7CDhurjati%7CDidact+Gothic%7CDiplomata%7CDiplomata+SC%7CDomine%7CDonegal+One%7CDoppio+One%7CDorsa%7CDosis%7CDr+Sugiyama%7CDroid+Sans%7CDroid+Sans+Mono%7CDroid+Serif%7CDuru+Sans%7CDynalight%7CEB+Garamond%7CEagle+Lake%7CEater%7CEconomica%7CEk+Mukta%7CElectrolize%7CElsie%7CElsie+Swash+Caps%7CEmblema+One%7CEmilys+Candy%7CEngagement%7CEnglebert%7CEnriqueta&#038;ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='sgf-google-fonts-3-css'  href='http://fonts.googleapis.com/css?family=Erica+One%7CEsteban%7CEuphoria+Script%7CEwert%7CExo%7CExo+2%7CExpletus+Sans%7CFanwood+Text%7CFascinate%7CFascinate+Inline%7CFaster+One%7CFasthand%7CFauna+One%7CFederant%7CFedero%7CFelipa%7CFenix%7CFinger+Paint%7CFira+Mono%7CFira+Sans%7CFjalla+One%7CFjord+One%7CFlamenco%7CFlavors%7CFondamento%7CFontdiner+Swanky%7CForum%7CFrancois+One%7CFreckle+Face%7CFredericka+the+Great%7CFredoka+One%7CFreehand%7CFresca%7CFrijole%7CFruktur%7CFugaz+One%7CGFS+Didot%7CGFS+Neohellenic%7CGabriela%7CGafata%7CGaldeano%7CGalindo%7CGentium+Basic%7CGentium+Book+Basic%7CGeo%7CGeostar%7CGeostar+Fill%7CGermania+One%7CGidugu%7CGilda+Display%7CGive+You+Glory%7CGlass+Antiqua%7CGlegoo%7CGloria+Hallelujah%7CGoblin+One%7CGochi+Hand%7CGorditas%7CGoudy+Bookletter+1911%7CGraduate%7CGrand+Hotel%7CGravitas+One%7CGreat+Vibes%7CGriffy%7CGruppo%7CGudea%7CHabibi%7CHalant%7CHammersmith+One%7CHanalei%7CHanalei+Fill%7CHandlee%7CHanuman%7CHappy+Monkey%7CHeadland+One%7CHenny+Penny%7CHerr+Von+Muellerhoff%7CHind%7CHoltwood+One+SC%7CHomemade+Apple%7CHomenaje%7CIM+Fell+DW+Pica%7CIM+Fell+DW+Pica+SC%7CIM+Fell+Double+Pica%7CIM+Fell+Double+Pica+SC%7CIM+Fell+English%7CIM+Fell+English+SC%7CIM+Fell+French+Canon%7CIM+Fell+French+Canon+SC%7CIM+Fell+Great+Primer%7CIM+Fell+Great+Primer+SC%7CIceberg%7CIceland%7CImprima%7CInconsolata%7CInder%7CIndie+Flower%7CInika%7CIrish+Grover%7CIstok+Web%7CItaliana&#038;ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='sgf-google-fonts-4-css'  href='http://fonts.googleapis.com/css?family=Italianno%7CJacques+Francois%7CJacques+Francois+Shadow%7CJim+Nightshade%7CJockey+One%7CJolly+Lodger%7CJosefin+Sans%7CJosefin+Slab%7CJoti+One%7CJudson%7CJulee%7CJulius+Sans+One%7CJunge%7CJura%7CJust+Another+Hand%7CJust+Me+Again+Down+Here%7CKalam%7CKameron%7CKantumruy%7CKarla%7CKarma%7CKaushan+Script%7CKavoon%7CKdam+Thmor%7CKeania+One%7CKelly+Slab%7CKenia%7CKhand%7CKhmer%7CKite+One%7CKnewave%7CKotta+One%7CKoulen%7CKranky%7CKreon%7CKristi%7CKrona+One%7CLa+Belle+Aurore%7CLaila%7CLancelot%7CLato%7CLeague+Script%7CLeckerli+One%7CLedger%7CLekton%7CLemon%7CLibre+Baskerville%7CLife+Savers%7CLilita+One%7CLily+Script+One%7CLimelight%7CLinden+Hill%7CLobster%7CLobster+Two%7CLondrina+Outline%7CLondrina+Shadow%7CLondrina+Sketch%7CLondrina+Solid%7CLora%7CLove+Ya+Like+A+Sister%7CLoved+by+the+King%7CLovers+Quarrel%7CLuckiest+Guy%7CLusitana%7CLustria%7CMacondo%7CMacondo+Swash+Caps%7CMagra%7CMaiden+Orange%7CMako%7CMallanna%7CMandali%7CMarcellus%7CMarcellus+SC%7CMarck+Script%7CMargarine%7CMarko+One%7CMarmelad%7CMarvel%7CMate%7CMate+SC%7CMaven+Pro%7CMcLaren%7CMeddon%7CMedievalSharp%7CMedula+One%7CMegrim%7CMeie+Script%7CMerienda%7CMerienda+One%7CMerriweather%7CMerriweather+Sans%7CMetal%7CMetal+Mania%7CMetamorphous%7CMetrophobic%7CMichroma%7CMilonga%7CMiltonian%7CMiltonian+Tattoo&#038;ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='sgf-google-fonts-5-css'  href='http://fonts.googleapis.com/css?family=Miniver%7CMiss+Fajardose%7CModern+Antiqua%7CMolengo%7CMolle%7CMonda%7CMonofett%7CMonoton%7CMonsieur+La+Doulaise%7CMontaga%7CMontez%7CMontserrat%7CMontserrat+Alternates%7CMontserrat+Subrayada%7CMoul%7CMoulpali%7CMountains+of+Christmas%7CMouse+Memoirs%7CMr+Bedfort%7CMr+Dafoe%7CMr+De+Haviland%7CMrs+Saint+Delafield%7CMrs+Sheppards%7CMuli%7CMystery+Quest%7CNTR%7CNeucha%7CNeuton%7CNew+Rocker%7CNews+Cycle%7CNiconne%7CNixie+One%7CNobile%7CNokora%7CNorican%7CNosifer%7CNothing+You+Could+Do%7CNoticia+Text%7CNoto+Sans%7CNoto+Serif%7CNova+Cut%7CNova+Flat%7CNova+Mono%7CNova+Oval%7CNova+Round%7CNova+Script%7CNova+Slim%7CNova+Square%7CNumans%7CNunito%7COdor+Mean+Chey%7COffside%7COld+Standard+TT%7COldenburg%7COleo+Script%7COleo+Script+Swash+Caps%7COpen+Sans%7COpen+Sans+Condensed%7COranienbaum%7COrbitron%7COregano%7COrienta%7COriginal+Surfer%7COswald%7COver+the+Rainbow%7COverlock%7COverlock+SC%7COvo%7COxygen%7COxygen+Mono%7CPT+Mono%7CPT+Sans%7CPT+Sans+Caption%7CPT+Sans+Narrow%7CPT+Serif%7CPT+Serif+Caption%7CPacifico%7CPaprika%7CParisienne%7CPassero+One%7CPassion+One%7CPathway+Gothic+One%7CPatrick+Hand%7CPatrick+Hand+SC%7CPatua+One%7CPaytone+One%7CPeralta%7CPermanent+Marker%7CPetit+Formal+Script%7CPetrona%7CPhilosopher%7CPiedra%7CPinyon+Script%7CPirata+One%7CPlaster%7CPlay%7CPlayball%7CPlayfair+Display%7CPlayfair+Display+SC%7CPodkova&#038;ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='sgf-google-fonts-6-css'  href='http://fonts.googleapis.com/css?family=Poiret+One%7CPoller+One%7CPoly%7CPompiere%7CPontano+Sans%7CPort+Lligat+Sans%7CPort+Lligat+Slab%7CPrata%7CPreahvihear%7CPress+Start+2P%7CPrincess+Sofia%7CProciono%7CProsto+One%7CPuritan%7CPurple+Purse%7CQuando%7CQuantico%7CQuattrocento%7CQuattrocento+Sans%7CQuestrial%7CQuicksand%7CQuintessential%7CQwigley%7CRacing+Sans+One%7CRadley%7CRajdhani%7CRaleway%7CRaleway+Dots%7CRamabhadra%7CRambla%7CRammetto+One%7CRanchers%7CRancho%7CRationale%7CRedressed%7CReenie+Beanie%7CRevalia%7CRibeye%7CRibeye+Marrow%7CRighteous%7CRisque%7CRoboto%7CRoboto+Condensed%7CRoboto+Slab%7CRochester%7CRock+Salt%7CRokkitt%7CRomanesco%7CRopa+Sans%7CRosario%7CRosarivo%7CRouge+Script%7CRozha+One%7CRubik+Mono+One%7CRubik+One%7CRuda%7CRufina%7CRuge+Boogie%7CRuluko%7CRum+Raisin%7CRuslan+Display%7CRusso+One%7CRuthie%7CRye%7CSacramento%7CSail%7CSalsa%7CSanchez%7CSancreek%7CSansita+One%7CSarina%7CSarpanch%7CSatisfy%7CScada%7CSchoolbell%7CSeaweed+Script%7CSevillana%7CSeymour+One%7CShadows+Into+Light%7CShadows+Into+Light+Two%7CShanti%7CShare%7CShare+Tech%7CShare+Tech+Mono%7CShojumaru%7CShort+Stack%7CSiemreap%7CSigmar+One%7CSignika%7CSignika+Negative%7CSimonetta%7CSintony%7CSirin+Stencil%7CSix+Caps%7CSkranji%7CSlabo+13px%7CSlabo+27px%7CSlackey%7CSmokum%7CSmythe&#038;ver=4.7.25' type='text/css' media='all' />
<link rel='stylesheet' id='sgf-google-fonts-7-css'  href='http://fonts.googleapis.com/css?family=Sniglet%7CSnippet%7CSnowburst+One%7CSofadi+One%7CSofia%7CSonsie+One%7CSorts+Mill+Goudy%7CSource+Code+Pro%7CSource+Sans+Pro%7CSource+Serif+Pro%7CSpecial+Elite%7CSpicy+Rice%7CSpinnaker%7CSpirax%7CSquada+One%7CStalemate%7CStalinist+One%7CStardos+Stencil%7CStint+Ultra+Condensed%7CStint+Ultra+Expanded%7CStoke%7CStrait%7CSue+Ellen+Francisco%7CSunshiney%7CSupermercado+One%7CSuwannaphum%7CSwanky+and+Moo+Moo%7CSyncopate%7CTangerine%7CTaprom%7CTauri%7CTeko%7CTelex%7CTenor+Sans%7CText+Me+One%7CThe+Girl+Next+Door%7CTienne%7CTinos%7CTitan+One%7CTitillium+Web%7CTrade+Winds%7CTrocchi%7CTrochut%7CTrykker%7CTulpen+One%7CUbuntu%7CUbuntu+Condensed%7CUbuntu+Mono%7CUltra%7CUncial+Antiqua%7CUnderdog%7CUnica+One%7CUnifrakturCook%7CUnifrakturMaguntia%7CUnkempt%7CUnlock%7CUnna%7CVT323%7CVampiro+One%7CVarela%7CVarela+Round%7CVast+Shadow%7CVesper+Libre%7CVibur%7CVidaloka%7CViga%7CVoces%7CVolkhov%7CVollkorn%7CVoltaire%7CWaiting+for+the+Sunrise%7CWallpoet%7CWalter+Turncoat%7CWarnes%7CWellfleet%7CWendy+One%7CWire+One%7CYanone+Kaffeesatz%7CYellowtail%7CYeseva+One%7CYesteryear%7CZeyada&#038;ver=4.7.25' type='text/css' media='all' />
<script type='text/javascript' src='http://www.weregna.com/wp-includes/js/jquery/ui/accordion.min.js?ver=1.11.4'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var wpcf7 = {"apiSettings":{"root":"http:\/\/www.weregna.com\/wp-json\/contact-form-7\/v1","namespace":"contact-form-7\/v1"},"recaptcha":{"messages":{"empty":"Please verify that you are not a robot."}}};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/contact-form-7/includes/js/scripts.js?ver=4.9.2'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/smooth-scroll-up/js/jquery.scrollUp.min.js?ver=4.7.25'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var themeMyLogin = {"action":"","errors":[]};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/plugins/theme-my-login/assets/scripts/theme-my-login.min.js?ver=7.0.15'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/themes/accesspress-lite/js/jquery.bxslider.min.js?ver=4.1'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/themes/accesspress-lite/js/nivo-lightbox.min.js?ver=2.1'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/themes/accesspress-lite/js/jquery.actual.min.js?ver=1.0.16'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/themes/accesspress-lite/js/skip-link-focus-fix.js?ver=20130115'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-content/themes/accesspress-lite/js/custom.js?ver=1.1'></script>
<script type='text/javascript' src='http://www.weregna.com/wp-includes/js/wp-embed.min.js?ver=4.7.25'></script>
<style type="text/css"></style>

<!-- Start of StatCounter Code for Default Guide -->
<script type="text/javascript">
var sc_project=10476399; 
var sc_invisible=1; 
var sc_security="e4c0acbe"; 
var scJsHost = (("https:" == document.location.protocol) ?
"https://secure." : "http://www.");
document.write("<sc"+"ript type='text/javascript' src='" +
scJsHost+
"statcounter.com/counter/counter.js'></"+"script>");
</script>
<noscript><div class="statcounter"><a title="shopify
analytics ecommerce" href="http://statcounter.com/shopify/"
target="_blank"><img class="statcounter"
src="http://c.statcounter.com/10476399/0/e4c0acbe/1/"
alt="shopify analytics ecommerce"></a></div></noscript>
<!-- End of StatCounter Code for Default Guide -->

</body>
</html>

  recorded_at: Sat, 02 Mar 2024 03:29:26 GMT
recorded_with: VCR 6.2.0
