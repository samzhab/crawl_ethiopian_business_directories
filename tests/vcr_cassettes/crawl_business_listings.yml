---
http_interactions:
- request:
    method: get
    uri: http://www.weregna.com/ethiopia-ethiopian-yellow-pages/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 02 Mar 2024 20:05:17 GMT
      Server:
      - Apache
      X-Powered-By:
      - PHP/5.6.40
      Link:
      - <http://www.weregna.com/wp-json/>; rel="https://api.w.org/", <http://www.weregna.com/?p=26>;
        rel=shortlink
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20434'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+IAo8aHRtbCBsYW5nPSJlbiI+CjxoZWFkPgo8c2NyaXB0IGFzeW5jIHNyYz0iaHR0cHM6Ly9wYWdlYWQyLmdvb2dsZXN5bmRpY2F0aW9uLmNvbS9wYWdlYWQvanMvYWRzYnlnb29nbGUuanM/Y2xpZW50PWNhLXB1Yi04OTg5NTYxNzI2NzM2MTQ4IgogICAgIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiPjwvc2NyaXB0Pgo8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgdXNlci1zY2FsYWJlPW5vIj4KPHRpdGxlPkV0aGlvcGlhIHllbGxvdyBwYWdlcyB8IEV0aGlvcGlhbiB5ZWxsb3cgcGFnZXMgfCBldGhpb3BpYSB3aGl0ZSBwYWdlcyB8IGV0aGlvcGlhIHBob25lIG51bWJlcnMgfCBldGhpb3BpYSBwaG9uZSBkaXJlY3RvcnkgfCBldGhpb3BpYSB5ZWxsb3cgcGFnZXMgfCBhZGRpcyBhYmFiYSBldGhpb3BpYSB5ZWxsb3cgcGFnZXMgfCBkaXJlY3RvcnkgYnVzaW5lc3MgfCBkaXJlY3RvcnkgZXRoaW9waWEgcGhvbmVib29rIHwgZXRoaW9waWEgZmluZCBwZW9wbGUgZXRoaW9waWEgfCBXZXJlZ25hPC90aXRsZT4KPGxpbmsgcmVsPSJwcm9maWxlIiBocmVmPSJodHRwOi8vZ21wZy5vcmcveGZuLzExIj4KPGxpbmsgcmVsPSJwaW5nYmFjayIgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS94bWxycGMucGhwIj4KPCEtLVtpZiBsdCBJRSA5XT4KCTxzY3JpcHQgc3JjPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvdGhlbWVzL2FjY2Vzc3ByZXNzLWxpdGUvanMvaHRtbDUubWluLmpzIj48L3NjcmlwdD4KPCFbZW5kaWZdLS0+CgoKPCEtLSBBbGwgaW4gT25lIFNFTyBQYWNrIDMuMi4xMCBieSBNaWNoYWVsIFRvcmJlcnQgb2YgU2VtcGVyIEZpIFdlYiBEZXNpZ25bMzAzLDMzMl0gLS0+CjxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiAgY29udGVudD0iRXRoaW9waWEgeWVsbG93IHBhZ2VzIGFuZCBFdGhpb3BpYW4geWVsbG93IHBhZ2VzIGFuZCBldGhpb3BpYSB3aGl0ZSBwYWdlcyBldGhpb3BpYSBwaG9uZSBudW1iZXJzIG9yIGV0aGlvcGlhIHBob25lIGRpcmVjdG9yeS4gRmluZCBldGhpb3BpYSB5ZWxsb3cgcGFnZXMgYWRkaXMgYWJhYmEuIGJ1c2luZXNzIGRpcmVjdG9yeSBldGhpb3BpYS4gTG9vayBhdCBvdXIgcGhvbmVib29rIGV0aGlvcGlhLiBZb3UgY2FuIGZpbmQgcGVvcGxlIGluIGV0aGlvcGlhLiIgLz4KCjxtZXRhIG5hbWU9ImtleXdvcmRzIiAgY29udGVudD0iZXRoaW9waWEgeWVsbG93IHBhZ2VzLGV0aGlvcGlhbiB5ZWxsb3cgcGFnZXMsZXRoaW9waWEgd2hpdGUgcGFnZXMsZXRoaW9waWEgcGhvbmUgbnVtYmVycyBldGhpb3BpYSxwaG9uZSBkaXJlY3RvcnkgZXRoaW9waWEseWVsbG93IHBhZ2VzIGFkZGlzIGFiYWJhIGV0aGlvcGlhLHllbGxvdyBwYWdlcyBkaXJlY3RvcnkgYnVzaW5lc3MsZGlyZWN0b3J5IGV0aGlvcGlhIHBob25lYm9vayxldGhpb3BpYSBmaW5kIHBlb3BsZSBldGhpb3BpYSIgLz4KCjxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vbGQranNvbiIgY2xhc3M9ImFpb3Nlb3Atc2NoZW1hIj57IkBjb250ZXh0IjoiaHR0cHM6Ly9zY2hlbWEub3JnIiwiQGdyYXBoIjpbeyJAdHlwZSI6Ik9yZ2FuaXphdGlvbiIsIkBpZCI6Imh0dHA6Ly93d3cud2VyZWduYS5jb20vI29yZ2FuaXphdGlvbiIsInVybCI6Imh0dHA6Ly93d3cud2VyZWduYS5jb20vIiwibmFtZSI6IldlcmVnbmEiLCJzYW1lQXMiOltdfSx7IkB0eXBlIjoiV2ViU2l0ZSIsIkBpZCI6Imh0dHA6Ly93d3cud2VyZWduYS5jb20vI3dlYnNpdGUiLCJ1cmwiOiJodHRwOi8vd3d3LndlcmVnbmEuY29tLyIsIm5hbWUiOiJXZXJlZ25hIiwicHVibGlzaGVyIjp7IkBpZCI6Imh0dHA6Ly93d3cud2VyZWduYS5jb20vI29yZ2FuaXphdGlvbiJ9fSx7IkB0eXBlIjoiV2ViUGFnZSIsIkBpZCI6Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8jd2VicGFnZSIsInVybCI6Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8iLCJpbkxhbmd1YWdlIjoiZW4iLCJuYW1lIjoiWUVMTE9XIFBBR0VTIiwiaXNQYXJ0T2YiOnsiQGlkIjoiaHR0cDovL3d3dy53ZXJlZ25hLmNvbS8jd2Vic2l0ZSJ9LCJkYXRlUHVibGlzaGVkIjoiMjAxNC0wNC0yOVQxNDoyMzoyNCswMDowMCIsImRhdGVNb2RpZmllZCI6IjIwMTgtMDUtMjhUMDk6MDc6MDUrMDA6MDAiLCJkZXNjcmlwdGlvbiI6IkV0aGlvcGlhIHllbGxvdyBwYWdlcyBhbmQgRXRoaW9waWFuIHllbGxvdyBwYWdlcyAgYW5kIGV0aGlvcGlhIHdoaXRlIHBhZ2VzIGV0aGlvcGlhIHBob25lIG51bWJlcnMgb3IgZXRoaW9waWEgcGhvbmUgZGlyZWN0b3J5LiBGaW5kIGV0aGlvcGlhIHllbGxvdyBwYWdlcyBhZGRpcyBhYmFiYS4gIGJ1c2luZXNzIGRpcmVjdG9yeSBldGhpb3BpYS4gTG9vayBhdCBvdXIgcGhvbmVib29rIGV0aGlvcGlhLiBZb3UgY2FuIGZpbmQgcGVvcGxlIGluIGV0aGlvcGlhLiJ9XX08L3NjcmlwdD4KPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8iIC8+CjwhLS0gQWxsIGluIE9uZSBTRU8gUGFjayAtLT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPnZhciBhamF4dXJsID0gJ2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtYWRtaW4vYWRtaW4tYWpheC5waHAnOzwvc2NyaXB0PjxsaW5rIHJlbD0nZG5zLXByZWZldGNoJyBocmVmPScvL2ZvbnRzLmdvb2dsZWFwaXMuY29tJyAvPgo8bGluayByZWw9J2Rucy1wcmVmZXRjaCcgaHJlZj0nLy91c2UuZm9udGF3ZXNvbWUuY29tJyAvPgo8bGluayByZWw9J2Rucy1wcmVmZXRjaCcgaHJlZj0nLy9zLncub3JnJyAvPgo8IS0tIEJ1c2luZXNzIERpcmVjdG9yeSBSU1MgZmVlZCAtLT4KPGxpbmsgcmVsPSJhbHRlcm5hdGUiIHR5cGU9ImFwcGxpY2F0aW9uL3Jzcyt4bWwiIHRpdGxlPSJZRUxMT1cgUEFHRVMgRmVlZCIgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9mZWVkLz9wb3N0X3R5cGU9d3BiZHBfbGlzdGluZyIgLz4KPCEtLSAvQnVzaW5lc3MgRGlyZWN0b3J5IFJTUyBmZWVkIC0tPgoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCQkJd2luZG93Ll93cGVtb2ppU2V0dGluZ3MgPSB7ImJhc2VVcmwiOiJodHRwczpcL1wvcy53Lm9yZ1wvaW1hZ2VzXC9jb3JlXC9lbW9qaVwvMi4yLjFcLzcyeDcyXC8iLCJleHQiOiIucG5nIiwic3ZnVXJsIjoiaHR0cHM6XC9cL3Mudy5vcmdcL2ltYWdlc1wvY29yZVwvZW1vamlcLzIuMi4xXC9zdmdcLyIsInN2Z0V4dCI6Ii5zdmciLCJzb3VyY2UiOnsiY29uY2F0ZW1vamkiOiJodHRwOlwvXC93d3cud2VyZWduYS5jb21cL3dwLWluY2x1ZGVzXC9qc1wvd3AtZW1vamktcmVsZWFzZS5taW4uanM/dmVyPTQuNy4yNSJ9fTsKCQkJIWZ1bmN0aW9uKHQsYSxlKXt2YXIgcixuLGksbz1hLmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpLGw9by5nZXRDb250ZXh0JiZvLmdldENvbnRleHQoIjJkIik7ZnVuY3Rpb24gYyh0KXt2YXIgZT1hLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO2Uuc3JjPXQsZS5kZWZlcj1lLnR5cGU9InRleHQvamF2YXNjcmlwdCIsYS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdLmFwcGVuZENoaWxkKGUpfWZvcihpPUFycmF5KCJmbGFnIiwiZW1vamk0IiksZS5zdXBwb3J0cz17ZXZlcnl0aGluZzohMCxldmVyeXRoaW5nRXhjZXB0RmxhZzohMH0sbj0wO248aS5sZW5ndGg7bisrKWUuc3VwcG9ydHNbaVtuXV09ZnVuY3Rpb24odCl7dmFyIGUsYT1TdHJpbmcuZnJvbUNoYXJDb2RlO2lmKCFsfHwhbC5maWxsVGV4dClyZXR1cm4hMTtzd2l0Y2gobC5jbGVhclJlY3QoMCwwLG8ud2lkdGgsby5oZWlnaHQpLGwudGV4dEJhc2VsaW5lPSJ0b3AiLGwuZm9udD0iNjAwIDMycHggQXJpYWwiLHQpe2Nhc2UiZmxhZyI6cmV0dXJuKGwuZmlsbFRleHQoYSg1NTM1Niw1NjgyNiw1NTM1Niw1NjgxOSksMCwwKSxvLnRvRGF0YVVSTCgpLmxlbmd0aDwzZTMpPyExOihsLmNsZWFyUmVjdCgwLDAsby53aWR0aCxvLmhlaWdodCksbC5maWxsVGV4dChhKDU1MzU2LDU3MzMxLDY1MDM5LDgyMDUsNTUzNTYsNTcwOTYpLDAsMCksZT1vLnRvRGF0YVVSTCgpLGwuY2xlYXJSZWN0KDAsMCxvLndpZHRoLG8uaGVpZ2h0KSxsLmZpbGxUZXh0KGEoNTUzNTYsNTczMzEsNTUzNTYsNTcwOTYpLDAsMCksZSE9PW8udG9EYXRhVVJMKCkpO2Nhc2UiZW1vamk0IjpyZXR1cm4gbC5maWxsVGV4dChhKDU1MzU3LDU2NDI1LDU1MzU2LDU3MzQxLDgyMDUsNTUzNTcsNTY1MDcpLDAsMCksZT1vLnRvRGF0YVVSTCgpLGwuY2xlYXJSZWN0KDAsMCxvLndpZHRoLG8uaGVpZ2h0KSxsLmZpbGxUZXh0KGEoNTUzNTcsNTY0MjUsNTUzNTYsNTczNDEsNTUzNTcsNTY1MDcpLDAsMCksZSE9PW8udG9EYXRhVVJMKCl9cmV0dXJuITF9KGlbbl0pLGUuc3VwcG9ydHMuZXZlcnl0aGluZz1lLnN1cHBvcnRzLmV2ZXJ5dGhpbmcmJmUuc3VwcG9ydHNbaVtuXV0sImZsYWciIT09aVtuXSYmKGUuc3VwcG9ydHMuZXZlcnl0aGluZ0V4Y2VwdEZsYWc9ZS5zdXBwb3J0cy5ldmVyeXRoaW5nRXhjZXB0RmxhZyYmZS5zdXBwb3J0c1tpW25dXSk7ZS5zdXBwb3J0cy5ldmVyeXRoaW5nRXhjZXB0RmxhZz1lLnN1cHBvcnRzLmV2ZXJ5dGhpbmdFeGNlcHRGbGFnJiYhZS5zdXBwb3J0cy5mbGFnLGUuRE9NUmVhZHk9ITEsZS5yZWFkeUNhbGxiYWNrPWZ1bmN0aW9uKCl7ZS5ET01SZWFkeT0hMH0sZS5zdXBwb3J0cy5ldmVyeXRoaW5nfHwocj1mdW5jdGlvbigpe2UucmVhZHlDYWxsYmFjaygpfSxhLmFkZEV2ZW50TGlzdGVuZXI/KGEuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsciwhMSksdC5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixyLCExKSk6KHQuYXR0YWNoRXZlbnQoIm9ubG9hZCIsciksYS5hdHRhY2hFdmVudCgib25yZWFkeXN0YXRlY2hhbmdlIixmdW5jdGlvbigpeyJjb21wbGV0ZSI9PT1hLnJlYWR5U3RhdGUmJmUucmVhZHlDYWxsYmFjaygpfSkpLChyPWUuc291cmNlfHx7fSkuY29uY2F0ZW1vamk/YyhyLmNvbmNhdGVtb2ppKTpyLndwZW1vamkmJnIudHdlbW9qaSYmKGMoci50d2Vtb2ppKSxjKHIud3BlbW9qaSkpKX0od2luZG93LGRvY3VtZW50LHdpbmRvdy5fd3BlbW9qaVNldHRpbmdzKTsKCQk8L3NjcmlwdD4KCQk8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgppbWcud3Atc21pbGV5LAppbWcuZW1vamkgewoJZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7Cglib3JkZXI6IG5vbmUgIWltcG9ydGFudDsKCWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsKCWhlaWdodDogMWVtICFpbXBvcnRhbnQ7Cgl3aWR0aDogMWVtICFpbXBvcnRhbnQ7CgltYXJnaW46IDAgLjA3ZW0gIWltcG9ydGFudDsKCXZlcnRpY2FsLWFsaWduOiAtMC4xZW0gIWltcG9ydGFudDsKCWJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDsKCXBhZGRpbmc6IDAgIWltcG9ydGFudDsKfQo8L3N0eWxlPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdhaTFlY19zdHlsZS1jc3MnICBocmVmPScvL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvYWxsLWluLW9uZS1ldmVudC1jYWxlbmRhci9jYWNoZS8zYmViMmIyY19haTFlY19wYXJzZWRfY3NzLmNzcz92ZXI9Mi42LjgnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSd3cC1jdXN0b21lci1yZXZpZXdzLTMtZnJvbnRlbmQtY3NzJyAgaHJlZj0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvd3AtY3VzdG9tZXItcmV2aWV3cy9jc3Mvd3AtY3VzdG9tZXItcmV2aWV3cy5jc3M/dmVyPTMuNy4wJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nd3AtcHJvcGVydHktZnJvbnRlbmQtY3NzJyAgaHJlZj0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvd3AtcHJvcGVydHkvc3RhdGljL3N0eWxlcy93cF9wcm9wZXJ0aWVzLmNzcz92ZXI9Mi40LjInIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdjb250YWN0LWZvcm0tNy1jc3MnICBocmVmPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9jb250YWN0LWZvcm0tNy9pbmNsdWRlcy9jc3Mvc3R5bGVzLmNzcz92ZXI9NC45LjInIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdmb250LWF3ZXNvbWUtY3NzJyAgaHJlZj0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvc21vb3RoLXNjcm9sbC11cC9jc3MvZm9udC1hd2Vzb21lLm1pbi5jc3M/dmVyPTQuNi4zJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nc2Nyb2xsdXAtY3NzLWNzcycgIGhyZWY9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL3Ntb290aC1zY3JvbGwtdXAvY3NzL3Njcm9sbHVwLmNzcz92ZXI9NC43LjI1JyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0ndGhlbWUtbXktbG9naW4tY3NzJyAgaHJlZj0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvdGhlbWUtbXktbG9naW4vYXNzZXRzL3N0eWxlcy90aGVtZS1teS1sb2dpbi5taW4uY3NzP3Zlcj03LjAuMTUnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdzZWxlY3QyLWNzcycgIGhyZWY9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL3dwLXByb3BlcnR5L3N0YXRpYy9zdHlsZXMvc2VsZWN0Mi5taW4uY3NzP3Zlcj00LjcuMjUnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSd3cC1qb2ItbWFuYWdlci1mcm9udGVuZC1jc3MnICBocmVmPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy93cC1qb2ItbWFuYWdlci9hc3NldHMvY3NzL2Zyb250ZW5kLmNzcz92ZXI9MS4zMi4yJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nZ29vZ2xlLWZvbnRzLWNzcycgIGhyZWY9Jy8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnMlM0E0MDAlMkM0MDBpdGFsaWMlMkMzMDBpdGFsaWMlMkMzMDAlMkM2MDAlMkM2MDBpdGFsaWMlN0NMYXRvJTNBNDAwJTJDMTAwJTJDMzAwJTJDNzAwJiMwMzg7dmVyPTQuNy4yNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J2ZhbmN5Ym94LWNzcy1jc3MnICBocmVmPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvdGhlbWVzL2FjY2Vzc3ByZXNzLWxpdGUvY3NzL25pdm8tbGlnaHRib3guY3NzP3Zlcj00LjcuMjUnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdieC1zbGlkZXItc3R5bGUtY3NzJyAgaHJlZj0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3RoZW1lcy9hY2Nlc3NwcmVzcy1saXRlL2Nzcy9qcXVlcnkuYnhzbGlkZXIuY3NzP3Zlcj00LjcuMjUnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSd3b28tY29tbWVyY2Utc3R5bGUtY3NzJyAgaHJlZj0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3RoZW1lcy9hY2Nlc3NwcmVzcy1saXRlL2Nzcy93b29jb21tZXJjZS5jc3M/dmVyPTQuNy4yNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J2FjY2Vzc3ByZXNzbGl0ZS1zdHlsZS1jc3MnICBocmVmPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvdGhlbWVzL2FjY2Vzc3ByZXNzLWxpdGUvc3R5bGUuY3NzP3Zlcj00LjcuMjUnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdyZXNwb25zaXZlLWNzcycgIGhyZWY9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC90aGVtZXMvYWNjZXNzcHJlc3MtbGl0ZS9jc3MvcmVzcG9uc2l2ZS5jc3M/dmVyPTQuNy4yNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3dwYmRwX2ZvbnRfYXdlc29tZS1jc3MnICBocmVmPSdodHRwczovL3VzZS5mb250YXdlc29tZS5jb20vcmVsZWFzZXMvdjUuNi4zL2Nzcy9hbGwuY3NzP3Zlcj00LjcuMjUnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSd3cGJkcC13aWRnZXRzLWNzcycgIGhyZWY9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2J1c2luZXNzLWRpcmVjdG9yeS1wbHVnaW4vYXNzZXRzL2Nzcy93aWRnZXRzLm1pbi5jc3M/dmVyPTUuNS4zJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nd3BiZHAtZG5kLXVwbG9hZC1jc3MnICBocmVmPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9idXNpbmVzcy1kaXJlY3RvcnktcGx1Z2luL2Fzc2V0cy9jc3MvZG5kLXVwbG9hZC5taW4uY3NzP3Zlcj01LjUuMycgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3dwYmRwLWpzLXNlbGVjdDItY3NzLWNzcycgIGhyZWY9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2J1c2luZXNzLWRpcmVjdG9yeS1wbHVnaW4vdmVuZG9ycy9zZWxlY3QyLTQuMC41L2Nzcy9zZWxlY3QyLm1pbi5jc3M/dmVyPTQuMC41JyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nd3BiZHAtYmFzZS1jc3MtY3NzJyAgaHJlZj0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvYnVzaW5lc3MtZGlyZWN0b3J5LXBsdWdpbi9hc3NldHMvY3NzL3dwYmRwLm1pbi5jc3M/dmVyPTUuNS4zJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nd3BwLWZlcHMtc3R5bGUtY3NzJyAgaHJlZj0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvd3AtcHJvcGVydHktZmVwcy8vc3RhdGljL3N0eWxlcy9zdHlsZS5jc3M/dmVyPTQuNy4yNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J2F3cGNwLWZyb250ZW5kLXN0eWxlLWNzcycgIGhyZWY9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2Fub3RoZXItd29yZHByZXNzLWNsYXNzaWZpZWRzLXBsdWdpbi9yZXNvdXJjZXMvY3NzL2F3cGNwc3R5bGUuY3NzP3Zlcj0zLjkuNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjwhLS1baWYgbHRlIElFIDZdPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdhd3BjcC1mcm9udGVuZC1zdHlsZS1pZS02LWNzcycgIGhyZWY9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2Fub3RoZXItd29yZHByZXNzLWNsYXNzaWZpZWRzLXBsdWdpbi9yZXNvdXJjZXMvY3NzL2F3cGNwc3R5bGUtaWUtNi5jc3M/dmVyPTMuOS41JyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPCFbZW5kaWZdLS0+CjwhLS1baWYgbHRlIElFIDddPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdhd3BjcC1mcm9udGVuZC1zdHlsZS1sdGUtaWUtNy1jc3MnICBocmVmPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9hbm90aGVyLXdvcmRwcmVzcy1jbGFzc2lmaWVkcy1wbHVnaW4vcmVzb3VyY2VzL2Nzcy9hd3BjcHN0eWxlLWx0ZS1pZS03LmNzcz92ZXI9My45LjUnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8IVtlbmRpZl0tLT4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1pbmNsdWRlcy9qcy9qcXVlcnkvanF1ZXJ5LmpzP3Zlcj0xLjEyLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS9qcXVlcnktbWlncmF0ZS5taW4uanM/dmVyPTEuNC4xJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1pbmNsdWRlcy9qcy9qcXVlcnkvdWkvY29yZS5taW4uanM/dmVyPTEuMTEuNCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL3dpZGdldC5taW4uanM/dmVyPTEuMTEuNCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL3RhYnMubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy93cC1jdXN0b21lci1yZXZpZXdzL2pzL3dwLWN1c3RvbWVyLXJldmlld3MuanM/dmVyPTMuNy4wJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgovKiA8IVtDREFUQVsgKi8KdmFyIHdwcF9sMTBuID0geyJjbG9uZV9wcm9wZXJ0eSI6IkNsb25lIFByb3BlcnR5IiwiZGVsZXRlIjoiRGVsZXRlIiwic2hvdyI6IlNob3ciLCJoaWRlIjoiSGlkZSIsImZlYXR1cmVkIjoiRmVhdHVyZWQiLCJhZGRfdG9fZmVhdHVyZWQiOiJBZGQgdG8gRmVhdHVyZWQiLCJ1bmRlZmluZWRfZXJyb3IiOiJVbmRlZmluZWQgRXJyb3IuIiwic2V0X3Byb3BlcnR5X3R5cGVfY29uZmlybWF0aW9uIjoiWW91IGFyZSBhYm91dCB0byBzZXQgQUxMIHlvdXIgUHJvcGVydGllcyB0byB0aGUgc2VsZWN0ZWQgUHJvcGVydHkgdHlwZS4gQXJlIHlvdSBzdXJlPyIsInByb2Nlc3NpbmciOiJQcm9jZXNzaW5nLi4uIiwiZ2VvX2F0dHJpYnV0ZV91c2FnZSI6IkF0dGVudGlvbiEgVGhpcyBhdHRyaWJ1dGUgKHNsdWcpIGlzIHVzZWQgYnkgR29vZ2xlIFZhbGlkYXRvciBhbmQgQWRkcmVzcyBEaXNwbGF5IGZ1bmN0aW9uYWxpdHkuIEl0IGlzIHNldCBhdXRvbWF0aWNhbGx5IGFuZCBjYW4gbm90IGJlIGVkaXRlZCBvbiBQcm9wZXJ0eSBBZGRpbmdcL1VwZGF0aW5nIHBhZ2UuIiwiZGVmYXVsdF9wcm9wZXJ0eV9pbWFnZSI6IkRlZmF1bHQgUHJvcGVydHkgSW1hZ2UiLCJyZW1vdmVfaW1hZ2UiOiJSZW1vdmUgSW1hZ2UiLCJlcnJvcl90eXBlc19vbmUiOiJTZXR0aW5ncyBjYW4ndCBiZSBzYXZlZC4gWW91IG5lZWQgdG8gZW50ZXIgYXQgbGVhc3Qgb25lIHByb3BlcnR5IHR5cGUuIiwidXBsb2FkaW5nIjoiVXBsb2FkaW5nIiwiZHJvcF9maWxlIjoiRHJvcCBmaWxlcyBoZXJlIHRvIHVwbG9hZCIsInVwbG9hZF9pbWFnZXMiOiJVcGxvYWQgSW1hZ2UiLCJjYW5jZWwiOiJDYW5jZWwiLCJmYWlsIjoiRmFpbGVkIiwiZHRhYmxlcyI6eyJmaXJzdCI6IkZpcnN0IiwicHJldmlvdXMiOiJQcmV2aW91cyIsIm5leHQiOiJOZXh0IiwibGFzdCI6Ikxhc3QiLCJwcm9jZXNzaW5nIjoiUHJvY2Vzc2luZy4uLiIsInNob3dfbWVudV9lbnRyaWVzIjoiU2hvdyBfTUVOVV8gZW50cmllcyIsIm5vX21fcmVjb3Jkc19mb3VuZCI6Ik5vIG1hdGNoaW5nIHJlY29yZHMgZm91bmQiLCJub19kYXRhX2F2YWlsYWJsZSI6Ik5vIGRhdGEgYXZhaWxhYmxlIGluIHRhYmxlIiwibG9hZGluZyI6IkxvYWRpbmcuLi4iLCJzaG93aW5nX2VudHJpZXMiOiJTaG93aW5nIF9TVEFSVF8gdG8gX0VORF8gb2YgX1RPVEFMXyBlbnRyaWVzIiwic2hvd2luZ19lbnRyaWVzX251bGwiOiJTaG93aW5nIG8gMGYgMC4wMDAwMDBlKzBudHJpZXMiLCJmaWx0ZXJlZF9mcm9tX3RvdGFsIjoiKGZpbHRlcmVkIGZyb20gX01BWF8gdG90YWwgZW50cmllcykiLCJzZWFyY2giOiJTZWFyY2g6IiwiZGlzcGxheSI6IkRpc3BsYXk6IiwicmVjb3JkcyI6InJlY29yZHMiLCJhbGwiOiJBbGwifSwiZmVwcyI6eyJ1bm5hbWVkX2Zvcm0iOiJVbm5hbWVkIEZvcm0iLCJmb3JtX2NvdWxkX25vdF9iZV9yZW1vdmVkXzEiOiJGb3JtIGNvdWxkIG5vdCBiZSByZW1vdmVkIGJlY2F1c2Ugb2Ygc29tZSBzZXJ2ZXIgZXJyb3IuIiwiZm9ybV9jb3VsZF9ub3RfYmVfcmVtb3ZlZF8yIjoiRm9ybSBjb3VsZCBub3QgYmUgcmVtb3ZlZCBiZWNhdXNlIGZvcm0gSUQgaXMgdW5kZWZpbmVkLiJ9LCJmYnRhYnMiOnsidW5uYW1lZF9jYW52YXMiOiJVbm5hbWVkIENhbnZhcyJ9LCJhdHRyX25vdF9zdXBwb3J0X2RlZmF1bHQiOiJEZWZhdWx0IFZhbHVlIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgZGF0YSBlbnRyeS4iLCJhcmVfeW91X3N1cmUiOiJBcmUgeW91IHN1cmU/IiwicmVwbGFjZV9hbGwiOiJSZXBsYWNlIGFsbCIsInJlcGxhY2VfZW1wdHkiOiJSZXBsYWNlIG9ubHkgZW1wdHkiLCJfZG9uZSI6IkRvbmUhIiwidmFsaWRhdGlvbl9lcnJvciI6IlZhbGlkYXRpb24gZXJyb3IuIENoZWNrIGZvcm0gZmllbGRzIiwidHlwZV9lbWFpbCI6IlBsZWFzZSB0eXBlIGluIHlvdXIgZS1tYWlsIGFkZHJlc3MuIiwiY2hlY2tpbmdfYWNjb3VudCI6IkNoZWNraW5nIGlmIGFjY291bnQgZXhpc3RzLiIsImNoZWNraW5nX2NyZWRlbnRpYWxzIjoiQ2hlY2tpbmcgeW91ciBjcmVkZW50aWFscy4iLCJjcmVkZW50aWFsc192ZXJpZmllZCI6IllvdXIgY3JlZGVudGlhbHMgaGF2ZSBiZWVuIHZlcmlmaWVkLiIsImNyZWRlbnRpYWxzX2luY29ycmVjdCI6IllvdXIgbG9naW4gY3JlZGVudGlhbHMgYXJlIG5vdCBjb3JyZWN0LiIsImFjY291bnRfZm91bmRfdHlwZV9wYXNzd29yZCI6IkFjY291bnQgZm91bmQsIHBsZWFzZSB0eXBlIGluIHlvdXIgcGFzc3dvcmQuIiwiYWNjb3VudF9jcmVhdGVkX2NoZWNrX2VtYWlsIjoiWW91ciBhY2NvdW50IGhhcyBiZWVuIGNyZWF0ZWQuIENoZWNrIHlvdXIgZS1tYWlsIHRvIGFjdGl2YXRlIGFjY291bnQuIn07CnZhciB3cHAgPSB7Imluc3RhbmNlIjp7InJlcXVlc3QiOltdLCJnZXQiOltdLCJwb3N0IjpbXSwiaWZyYW1lX2VuYWJsZWQiOmZhbHNlLCJhamF4X3VybCI6Imh0dHA6XC9cL3d3dy53ZXJlZ25hLmNvbVwvd3AtYWRtaW5cL2FkbWluLWFqYXgucGhwIiwiaG9tZV91cmwiOiJodHRwOlwvXC93d3cud2VyZWduYS5jb20iLCJ1c2VyX2xvZ2dlZF9pbiI6ImZhbHNlIiwiaXNfcGVybWFsaW5rIjp0cnVlLCJzZXR0aW5ncyI6eyJjb25maWd1cmF0aW9uIjp7ImF1dG9sb2FkX2NzcyI6InRydWUiLCJhdXRvbWF0aWNhbGx5X2luc2VydF9vdmVydmlldyI6ImZhbHNlIiwiYmFzZV9zbHVnIjoiZXRoaW9waWFuLWV0aGlvcGlhLXJlbnRhbCIsImN1cnJlbmN5X3N5bWJvbCI6IiQiLCJhZGRyZXNzX2F0dHJpYnV0ZSI6ImxvY2F0aW9uIiwiZ29vZ2xlX21hcHNfbG9jYWxpemF0aW9uIjoiZW4iLCJkaXNwbGF5X2FkZHJlc3NfZm9ybWF0IjoiW2NpdHldLCBbc3RhdGVdLCBbc3RyZWV0X251bWJlcl0gW3N0cmVldF9uYW1lXSwgW2NpdHldLCBbc3RhdGVdLCBbc3RhdGVfY29kZV0sIFtjb3VudHldLCBbY291bnRyeV0sIFt6aXBfY29kZV0iLCJwcm9wZXJ0eV9vdmVydmlldyI6eyJ0aHVtYm5haWxfc2l6ZSI6InRpbnlfdGh1bWIiLCJmYW5jeWJveF9wcmV2aWV3IjoidHJ1ZSIsImRpc3BsYXlfc2xpZGVzaG93IjoiZmFsc2UiLCJzaG93X2NoaWxkcmVuIjoidHJ1ZSIsImFkZF9zb3J0X2J5X3RpdGxlIjoiZmFsc2UiLCJzb3J0X3N0YXRzX2J5X2dyb3VwcyI6ImZhbHNlIiwic2hvd190cnVlX2FzX2ltYWdlIjoiZmFsc2UiLCJmb3JtYXRfcGhvbmVfbnVtYmVyIjoiZmFsc2UiLCJwYWdpbmF0aW9uX3R5cGUiOiJzbGlkZXIifSwic2luZ2xlX3Byb3BlcnR5X3ZpZXciOnsibWFwX2ltYWdlX3R5cGUiOiJ0aW55X3RodW1iIiwiZ21fem9vbV9sZXZlbCI6IjEzIn0sImFkbWluX3VpIjp7Im92ZXJ2aWV3X3RhYmxlX3RodW1ibmFpbF9zaXplIjoidGlueV90aHVtYiJ9LCJnb29nbGVfbWFwcyI6eyJpbmZvYm94X3NldHRpbmdzIjp7InNob3dfZGlyZWN0aW9uX2xpbmsiOiJ0cnVlIiwic2hvd19wcm9wZXJ0eV90aXRsZSI6InRydWUiLCJkb19ub3Rfc2hvd19jaGlsZF9wcm9wZXJ0aWVzIjoiZmFsc2UifSwic2hvd190cnVlX2FzX2ltYWdlIjoiZmFsc2UiLCJpbmZvYm94X2F0dHJpYnV0ZXMiOlsibG9jYXRpb24iLCJwcmljZSIsImJlZHJvb21zIiwiYmF0aHJvb21zIiwiZGVwb3NpdCIsImFyZWEiLCJwaG9uZV9udW1iZXIiXX0sImVuYWJsZV9jb21tZW50cyI6InRydWUiLCJleGNsdWRlX2Zyb21fcmVndWxhcl9zZWFyY2hfcmVzdWx0cyI6ImZhbHNlIiwiZG9fbm90X2F1dG9tYXRpY2FsbHlfcmVnZW5lcmF0ZV90aHVtYm5haWxzIjoiZmFsc2UiLCJhdXRvX2RlbGV0ZV9hdHRhY2htZW50cyI6InRydWUiLCJkb19ub3Rfb3ZlcnJpZGVfc2VhcmNoX3Jlc3VsdF9wYWdlIjoidHJ1ZSIsInBob25lX251bWJlciI6IiIsImJvdHRvbV9pbnNlcnRfcGFnZW5hdGlvbiI6ImZhbHNlIiwiZ21fem9vbV9sZXZlbCI6IiIsInRob3VzYW5kc19zZXAiOiIsIiwiY3VycmVuY3lfc3ltYm9sX3BsYWNlbWVudCI6ImJlZm9yZSIsInNob3dfYWdncmVnYXRlZF92YWx1ZV9hc19hdmVyYWdlIjoiZmFsc2UiLCJjb21wbGV0ZWx5X2hpZGVfaGlkZGVuX2F0dHJpYnV0ZXNfaW5fYWRtaW5fdWkiOiJmYWxzZSIsInNob3dfdWRfbG9nIjoiZmFsc2UiLCJhbGxvd19wYXJlbnRfZGVlcF9kZXB0aCI6ImZhbHNlIiwiZGlzYWJsZV9hdXRvbWF0aWNfZmVhdHVyZV91cGRhdGUiOiJmYWxzZSIsImRpc2FibGVfd29yZHByZXNzX3Bvc3RtZXRhX2NhY2hlIjoiZmFsc2UiLCJkZXZlbG9wZXJfbW9kZSI6ImZhbHNlIiwiZmVhdHVyZV9zZXR0aW5ncyI6eyJmZXBzIjp7ImZvcm1zIjp7IjkxMDQwODIiOnsidGl0bGUiOiJTYW1wbGUgRm9ybSIsInNsdWciOiJzYW1wbGVfZm9ybSIsIm5ld19wb3N0X3N0YXR1cyI6InBlbmRpbmciLCJwcm9wZXJ0eV90eXBlIjoiYnVpbGRpbmciLCJ0cmFzaF90aW1lIjoiMCIsInRodW1ibmFpbF9zaXplIjoidGh1bWJuYWlsIiwiaW1hZ2VzX2xpbWl0IjoiNiIsIm5ld19yb2xlIjoic3Vic2NyaWJlciIsInJlcXVpcmVkIjp7InBvc3RfdGl0bGUiOnsiYXR0cmlidXRlIjoicG9zdF90aXRsZSIsInRpdGxlIjoiUHJvcGVydHkgVGl0bGUiLCJkZXNjcmlwdGlvbiI6IiJ9fSwiZmllbGRzIjp7Ijc1NDE3NTAiOnsiYXR0cmlidXRlIjoibG9jYXRpb24iLCJ0aXRsZSI6IkFkZHJlc3MiLCJkZXNjcmlwdGlvbiI6IiJ9fX0sIjIwNTA5MyI6eyJ0aXRsZSI6IlN1Ym1pdCBSZW50YWwgUHJvcGVydGllcyIsInNsdWciOiJzdWJtaXRfcmVudGFsX3Byb3BlcnRpZXMiLCJuZXdfcG9zdF9zdGF0dXMiOiJwZW5kaW5nIiwicHJvcGVydHlfdHlwZSI6ImJ1aWxkaW5nIiwidHJhc2hfdGltZSI6IjAiLCJ0aHVtYm5haWxfc2l6ZSI6InRodW1ibmFpbCIsImltYWdlc19saW1pdCI6IjYiLCJuZXdfcm9sZSI6InN1YnNjcmliZXIiLCJyZXF1aXJlZCI6eyJwb3N0X3RpdGxlIjp7ImF0dHJpYnV0ZSI6InBvc3RfdGl0bGUiLCJ0aXRsZSI6IlByb3BlcnR5IFRpdGxlIiwiZGVzY3JpcHRpb24iOiIifX0sImZpZWxkcyI6eyI4ODQiOnsiYXR0cmlidXRlIjoicHJvcGVydHlfdHlwZSIsInRpdGxlIjoiUHJvcGVydHkgVHlwZSIsImRlc2NyaXB0aW9uIjoiIn0sIjg4Ijp7ImF0dHJpYnV0ZSI6InBvc3RfY29udGVudCIsInRpdGxlIjoiUHJvcGVydHkgQ29udGVudCIsImRlc2NyaXB0aW9uIjoiIn0sIjc1NDE3NTAiOnsiYXR0cmlidXRlIjoicHJpY2UiLCJ0aXRsZSI6IlByaWNlIiwiZGVzY3JpcHRpb24iOiIifSwiMjA5Ijp7ImF0dHJpYnV0ZSI6ImJlZHJvb21zIiwidGl0bGUiOiJCZWRyb29tcyIsImRlc2NyaXB0aW9uIjoiIn0sIjQ1NiI6eyJhdHRyaWJ1dGUiOiJiYXRocm9vbXMiLCJ0aXRsZSI6IkJhdGhyb29tcyIsImRlc2NyaXB0aW9uIjoiIn0sIjg1MCI6eyJhdHRyaWJ1dGUiOiJhcmVhIiwidGl0bGUiOiJBcmVhIiwiZGVzY3JpcHRpb24iOiIifSwiOTciOnsiYXR0cmlidXRlIjoicGhvbmVfbnVtYmVyIiwidGl0bGUiOiJQaG9uZSBOdW1iZXIiLCJkZXNjcmlwdGlvbiI6IiJ9LCIzMzEiOnsiYXR0cmlidXRlIjoibG9jYXRpb24iLCJ0aXRsZSI6IkFkZHJlc3MiLCJkZXNjcmlwdGlvbiI6IiJ9LCI3ODUiOnsiYXR0cmlidXRlIjoibGVhc2VfdGVybXMiLCJ0aXRsZSI6IkxlYXNlIFRlcm1zIiwiZGVzY3JpcHRpb24iOiIifSwiMjI3Ijp7ImF0dHJpYnV0ZSI6ImltYWdlX3VwbG9hZCIsInRpdGxlIjoiSW1hZ2UgVXBsb2FkIiwiZGVzY3JpcHRpb24iOiIifX19fX19LCJlbmFibGVfbGVnYWN5X2ZlYXR1cmVzIjoidHJ1ZSIsImFyZWFfZGltZW5zaW9ucyI6InNxLiBmdCJ9LCJkZWZhdWx0X2Nvb3JkcyI6eyJsYXRpdHVkZSI6IjU3Ljc5NzMzMzMiLCJsb25naXR1ZGUiOiIxMi4wNTAyMTA3In0sImdlb190eXBlX2F0dHJpYnV0ZXMiOlsiZm9ybWF0dGVkX2FkZHJlc3MiLCJzdHJlZXRfbnVtYmVyIiwicm91dGUiLCJkaXN0cmljdCIsImNpdHkiLCJjb3VudHkiLCJzdGF0ZSIsInN0YXRlX2NvZGUiLCJjb3VudHJ5IiwiY291bnRyeV9jb2RlIiwicG9zdGFsX2NvZGUiXSwiaW1hZ2VzIjp7Im1hcF9pY29uX3NoYWRvdyI6Imh0dHA6XC9cL3d3dy53ZXJlZ25hLmNvbVwvd3AtY29udGVudFwvcGx1Z2luc1wvd3AtcHJvcGVydHlcL2ltYWdlc1wvbWFwX2ljb25fc2hhZG93LnBuZyJ9LCJkZXNjcmlwdGlvbnMiOnsiZGVzY3JpcHRpb25zIjp7InByb3BlcnR5X3R5cGUiOiJUaGUgcHJvcGVydHkgdHlwZSB3aWxsIGRldGVybWluZSB0aGUgbGF5b3V0LiIsImN1c3RvbV9hdHRyaWJ1dGVfb3ZlcnZpZXciOiJDdXN0b21pemUgd2hhdCBhcHBlYXJzIGluIHNlYXJjaCByZXN1bHRzIGluIHRoZSBhdHRyaWJ1dGUgc2VjdGlvbi4gIEZvciBleGFtcGxlOiAxYmVkLCAyYmF0aHMsIGFyZWEgdmFyaWVzIHNsaWdodGx5LiIsInRhZ2xpbmUiOiJXaWxsIGFwcGVhciBvbiBvdmVydmlldyBwYWdlcyBhbmQgb24gdG9wIG9mIGV2ZXJ5IGxpc3RpbmcgcGFnZS4ifX0sInNlYXJjaF9jb252ZXJzaW9ucyI6eyJiZWRyb29tcyI6eyJTdHVkaW8iOiIwLjUifX0sImltYWdlX3NpemVzIjp7Im1hcF90aHVtYiI6eyJ3aWR0aCI6Ijc1IiwiaGVpZ2h0IjoiNzUifSwidGlueV90aHVtYiI6eyJ3aWR0aCI6IjEwMCIsImhlaWdodCI6IjEwMCJ9LCJzaWRlYmFyX3dpZGUiOnsid2lkdGgiOiIxOTUiLCJoZWlnaHQiOiIxMzAifSwic2xpZGVzaG93Ijp7IndpZHRoIjoiNjQwIiwiaGVpZ2h0IjoiMjM1In19LCJjdXN0b21fY29vcmRzIjp7ImxhdGl0dWRlIjoiIiwibG9uZ2l0dWRlIjoiIn0sInByb3BlcnR5X2dyb3VwcyI6eyJtYWluIjp7Im5hbWUiOiJNYWluIiwiY29sb3IiOiIjYmRkNmZmIn19LCJwcm9wZXJ0eV9zdGF0cyI6eyJsb2NhdGlvbiI6IkFkZHJlc3MiLCJwcmljZSI6IlByaWNlIiwiYmVkcm9vbXMiOiJCZWRyb29tcyIsImJhdGhyb29tcyI6IkJhdGhyb29tcyIsImRlcG9zaXQiOiJEZXBvc2l0IiwiYXJlYSI6IkFyZWEiLCJwaG9uZV9udW1iZXIiOiJQaG9uZSBOdW1iZXIifSwicHJvcGVydHlfc3RhdHNfZ3JvdXBzIjp7ImxvY2F0aW9uIjoiIiwicHJpY2UiOiIiLCJiZWRyb29tcyI6IiIsImJhdGhyb29tcyI6IiIsImRlcG9zaXQiOiIiLCJhcmVhIjoiIiwicGhvbmVfbnVtYmVyIjoiIn0sInNlYXJjaGFibGVfYXR0cmlidXRlcyI6WyJsb2NhdGlvbiIsInByaWNlIiwiYmVkcm9vbXMiLCJiYXRocm9vbXMiLCJhcmVhIl0sInNlYXJjaGFibGVfYXR0cl9maWVsZHMiOnsibG9jYXRpb24iOiIiLCJwcmljZSI6IiIsImJlZHJvb21zIjoiIiwiYmF0aHJvb21zIjoiIiwiZGVwb3NpdCI6IiIsImFyZWEiOiIiLCJwaG9uZV9udW1iZXIiOiIifSwicHJlZGVmaW5lZF9zZWFyY2hfdmFsdWVzIjp7ImxvY2F0aW9uIjoiIiwicHJpY2UiOiIiLCJiZWRyb29tcyI6IiIsImJhdGhyb29tcyI6IiIsImRlcG9zaXQiOiIiLCJhcmVhIjoiIiwicGhvbmVfbnVtYmVyIjoiIn0sImFkbWluX2F0dHJfZmllbGRzIjp7ImxvY2F0aW9uIjoiIiwicHJpY2UiOiIiLCJiZWRyb29tcyI6IiIsImJhdGhyb29tcyI6IiIsImRlcG9zaXQiOiIiLCJhcmVhIjoiIiwicGhvbmVfbnVtYmVyIjoiIn0sInByZWRlZmluZWRfdmFsdWVzIjp7ImxvY2F0aW9uIjoiIiwicHJpY2UiOiIiLCJiZWRyb29tcyI6IiIsImJhdGhyb29tcyI6IiIsImRlcG9zaXQiOiIiLCJhcmVhIjoiIiwicGhvbmVfbnVtYmVyIjoiIn0sInNvcnRhYmxlX2F0dHJpYnV0ZXMiOlsicHJpY2UiLCJiZWRyb29tcyIsImJhdGhyb29tcyIsImRlcG9zaXQiLCJhcmVhIl0sInByb3BlcnR5X21ldGEiOnsibGVhc2VfdGVybXMiOiJMZWFzZSBUZXJtcyIsInBldF9wb2xpY3kiOiJQZXQgUG9saWN5Iiwic2Nob29sIjoiU2Nob29sIiwidGFnbGluZSI6IlRhZ2xpbmUifSwicHJvcGVydHlfdHlwZXMiOnsiYnVpbGRpbmciOiJCdWlsZGluZyIsImZsb29ycGxhbiI6IkZsb29ycGxhbiIsInNpbmdsZV9mYW1pbHlfaG9tZSI6IlNpbmdsZSBGYW1pbHkgSG9tZSIsInJlc2lkZW50aWFsX3Byb3BlcnRpZXMiOiJSZXNpZGVudGlhbCBQcm9wZXJ0aWVzIiwiYXBhcnRtZW50IjoiQXBhcnRtZW50IiwiaW5kZXBlbmRlbnRfaG91c2VfdmlsbGEiOiJJbmRlcGVuZGVudCBIb3VzZVwvIFZpbGxhIiwiY29tbWVyY2lhbCI6IkNvbW1lcmNpYWwifSwic2VhcmNoYWJsZV9wcm9wZXJ0eV90eXBlcyI6WyJidWlsZGluZyIsImZsb29ycGxhbiIsInNpbmdsZV9mYW1pbHlfaG9tZSIsInJlc2lkZW50aWFsX3Byb3BlcnRpZXMiLCJhcGFydG1lbnQiLCJpbmRlcGVuZGVudF9ob3VzZV92aWxsYSIsImNvbW1lcmNpYWwiXSwibG9jYXRpb25fbWF0dGVycyI6WyJidWlsZGluZyIsInNpbmdsZV9mYW1pbHlfaG9tZSIsInJlc2lkZW50aWFsX3Byb3BlcnRpZXMiLCJpbmRlcGVuZGVudF9ob3VzZV92aWxsYSIsImNvbW1lcmNpYWwiXSwiaGlkZGVuX2F0dHJpYnV0ZXMiOnsiYnVpbGRpbmciOlsicGFyZW50Il0sImZsb29ycGxhbiI6WyJwYXJlbnQiXSwic2luZ2xlX2ZhbWlseV9ob21lIjpbInBhcmVudCJdLCJyZXNpZGVudGlhbF9wcm9wZXJ0aWVzIjpbInBhcmVudCJdLCJhcGFydG1lbnQiOlsicGFyZW50Il0sImluZGVwZW5kZW50X2hvdXNlX3ZpbGxhIjpbInBhcmVudCJdLCJjb21tZXJjaWFsIjpbImJlZHJvb21zIiwibGVhc2VfdGVybXMiLCJwZXRfcG9saWN5Iiwic2Nob29sIiwicGFyZW50Il19LCJwcm9wZXJ0eV9pbmhlcml0YW5jZSI6eyJmbG9vcnBsYW4iOlsibG9jYXRpb24iLCJjaXR5IiwiY2l0eSIsInN0cmVldF9udW1iZXIiLCJyb3V0ZSIsInN0YXRlIiwicG9zdGFsX2NvZGUiLCJkaXNwbGF5X2FkZHJlc3MiLCJhZGRyZXNzX2lzX2Zvcm1hdHRlZCJdfSwiYXZhaWxhYmxlX2ZlYXR1cmVzIjp7ImNsYXNzX2FkbWluX3Rvb2xzIjp7InRpdGxlIjoiQWRtaW4gVG9vbHMiLCJ0YWdsaW5lIjoiRm9yIGRldmVsb3BlcnMgYW5kIGRlc2lnbmVycyBuZWVkaW5nIHRvIHN0cmVhbWxpbmUgdGhlaXIgZGV2ZWxvcG1lbnQgaW52b2x2aW5nIFdQLVByb3BlcnR5LiIsImltYWdlIjoiaHR0cHM6XC9cLzAwZTMyZTEwZGJkOTlmMTBmZjljLTMyZTk2YmQ4MjZiY2M0YzllYzRhMDEyNzJjZDAxMjRiLnNzbC5jZjEucmFja2Nkbi5jb21cL1BGLXRodW1ic1wvd3BwX2FkbWluX3Rvb2xzLnBuZyIsImRlc2NyaXB0aW9uIjoiVGhpcyBwbHVnaW4gaXMgaW50ZW5kZWQgZm9yIGRldmVsb3BlcnMgYW5kIHRoZW1lIGRlc2lnbmVycy4gIFRoZSBwbHVnaW4gYWRkcyBhIG5ldyB0YWIgb24gdGhlIHNldHRpbmdzIHBhZ2UgY2FsbGVkICZxdW90O0RldmVsb3BlciZxdW90Oy4gIFRoZXJlIHlvdSBjYW4gYWRkIG5ldyBwcm9wZXJ0eSB0eXBlcywgYXR0cmlidXRlcywgZXRjLiJ9LCJjbGFzc19hZ2VudHMiOnsidGl0bGUiOiJSZWFsIEVzdGF0ZSBBZ2VudHMiLCJ0YWdsaW5lIjoiQ3JlYXRlIGFuZCBhc3NvY2lhdGUgcmVhbCBlc3RhdGUgYWdlbnRzIHdpdGggeW91ciBwcm9wZXJ0aWVzLiIsImltYWdlIjoiaHR0cHM6XC9cLzAwZTMyZTEwZGJkOTlmMTBmZjljLTMyZTk2YmQ4MjZiY2M0YzllYzRhMDEyNzJjZDAxMjRiLnNzbC5jZjEucmFja2Nkbi5jb21cL1BGLXRodW1ic1wvd3BwX2FnZW50cy5wbmciLCJkZXNjcmlwdGlvbiI6IlRoZSBXUC1Qcm9wZXJ0eSBSZWFsIEVzdGF0ZSBBZ2VudCBtb2R1bGUgYWxsb3dzIHRoZSB3ZWJzaXRlIGFkbWluaXN0cmF0b3IgdG8gY3JlYXRlIG5ldyBSZWFsIEVzdGF0ZSBhZ2VudCBhY2NvdW50cyBhbmQgYXNzb2NpYXRlIHRoZW0gd2l0aCBwcm9wZXJ0aWVzLiBNdWx0aXBsZSBhZ2VudHMgY2FuIGJlIGFzc2lnbmVkIHRvIGFueSBnaXZlbiBwcm9wZXJ0eSBhbmQgdGhlIGFnZW50IGluZm9ybWF0aW9uIGNhbiBiZSBkaXNwbGF5ZWQgaW4gYSB3aWRnZXQgcGxhY2VkIG9uIGEgcHJvcGVydHkgcGFnZS4gIEZ1cnRoZXJtb3JlLCBwcm9wZXJ0aWVzIGNhbiBiZSBxdWVyaWVkIGJ5IHRoZSBhZ2VudChzKSB0byBjcmVhdGUgYWdlbnQtc3BlY2lmaWMgcHJvcGVydHkgbGlzdGluZ3MgcGFnZXMuIn0sImNsYXNzX3dwcF9mYWNlYm9va190YWJzIjp7InRpdGxlIjoiRmFjZWJvb2sgVGFicyIsInRhZ2xpbmUiOiJGYWNlYm9vayBUYWJzIGZvciBXUC1Qcm9wZXJ0eSIsImltYWdlIjoiaHR0cHM6XC9cLzAwZTMyZTEwZGJkOTlmMTBmZjljLTMyZTk2YmQ4MjZiY2M0YzllYzRhMDEyNzJjZDAxMjRiLnNzbC5jZjEucmFja2Nkbi5jb21cL1BGLXRodW1ic1wvZmItdGFicy5wbmciLCJkZXNjcmlwdGlvbiI6IlRoZSBGZWF0dXJlIGFsbG93cyB5b3UgdG8gYWRkIGEgdGFiIHdpdGggcHJvcGVydHkgbGlzdGluZ3Mgb3IgYW55IG90aGVyIGNvbnRlbnQgZnJvbSB5b3VyIHdlYnNpdGUsIG9uIGEgRmFjZWJvb2sgUGFnZS4ifSwiY2xhc3Nfd3BwX2ZlcHMiOnsidGl0bGUiOiJGcm9udCBFbmQgUHJvcGVydHkgU3VibWlzc2lvbnMgKEZFUFMpIiwidGFnbGluZSI6IkFsbG93IHlvdXIgdmlzaXRvcnMgdG8gc3VibWl0IHByb3BlcnRpZXMuIiwiaW1hZ2UiOiJodHRwczpcL1wvMDBlMzJlMTBkYmQ5OWYxMGZmOWMtMzJlOTZiZDgyNmJjYzRjOWVjNGEwMTI3MmNkMDEyNGIuc3NsLmNmMS5yYWNrY2RuLmNvbVwvUEYtdGh1bWJzXC93cHBfZmVwcy5wbmciLCJkZXNjcmlwdGlvbiI6IkZyb250IEVuZCBQcm9wZXJ0eSBTdWJtaXNzaW9uIChGRVBTKSBsZXRzIHlvdSBjcmVhdGUgZm9ybXMgYW5kIGRpc3BsYXkgdGhlbSBvbiB0aGUgZnJvbnQtZW5kIG9mIHRoZSB3ZWJzaXRlLiAgVGhlIGZvcm1zIG1heSBiZSB1c2VkIGJ5IHZpc2l0b3JzIHRvIHN1Ym1pdCBwcm9wZXJ0aWVzLCB3aGljaCBhcmUgdGhlbiBoZWxkIGZvciBhcHByb3ZhbC4gIn0sImNsYXNzX3dwcF9wZGZfZmx5ZXIiOnsidGl0bGUiOiJQREYgRmx5ZXIiLCJ0YWdsaW5lIjoiSW5zdGFudGx5IGNyZWF0ZSBQREYgZmx5ZXJzIGZvciB5b3VyIHByb3BlcnRpZXMuIiwiaW1hZ2UiOiJodHRwczpcL1wvMDBlMzJlMTBkYmQ5OWYxMGZmOWMtMzJlOTZiZDgyNmJjYzRjOWVjNGEwMTI3MmNkMDEyNGIuc3NsLmNmMS5yYWNrY2RuLmNvbVwvUEYtdGh1bWJzXC9jbGFzc193cHBfcGRmX2ZseWVyLnBuZyIsImRlc2NyaXB0aW9uIjoiVGhlIFdQLVByb3BlcnR5IFBERiBGbHllciBwcmVtaXVtIGZlYXR1cmUgYWxsb3dzIHRoZSB3ZWJzaXRlIG93bmVyIHRvIHF1aWNrbHkgZ2VuZXJhdGUgUERGIGZseWVycywgb3IgYnJvY2h1cmVzLCByZWFkeSBmb3IgcHJpbnRpbmcgb3IgZG93bmxvYWQuICBUaGUgZmVhdHVyZSBjb21lcyB3aXRoIGEgc3RhbmRhcmQgUERGIGZvcm1hdCBhbmQgYSB1c2VyIGludGVyZmFjZSBhbGxvd3MgdGhlIGFkbWluaXN0cmF0b3IgdG8gc2VsZWN0IHdoaWNoIGluZm9ybWF0aW9uIHRvIGRpc3BsYXksIHdoYXQgY29sb3JzIHRvIHVzZSwgaW1hZ2Ugc2l6ZXMsIGFuZCBhIGxvZ28uICBGb3IgbW9yZSBhZHZhbmNlcyB1c2VycyBjdXN0b20gUERGIHRlbXBsYXRlIGxheW91dHMgY2FuIGJlIHVzZWQuICJ9LCJjbGFzc193cHBfcG93ZXJfdG9vbHMiOnsidGl0bGUiOiJQb3dlciBUb29scyB3aXRoIENhcGFiaWxpdHkgTWFuYWdlbWVudCIsInRhZ2xpbmUiOiJQb3dlciB0b29scyBhbmQgY2FwYWJpbGl0eSBtYW5hZ2VtZW50IGZvciBXUC1Qcm9wZXJ0eS4iLCJpbWFnZSI6Imh0dHBzOlwvXC8wMGUzMmUxMGRiZDk5ZjEwZmY5Yy0zMmU5NmJkODI2YmNjNGM5ZWM0YTAxMjcyY2QwMTI0Yi5zc2wuY2YxLnJhY2tjZG4uY29tXC9QRi10aHVtYnNcL3dwcF9yb2xlcy5wbmciLCJkZXNjcmlwdGlvbiI6IkV4dHJhIGZ1bmN0aW9uYWxpdHkgd2hpY2ggaW5jbHVkZXMgY2FwYWJpbGl0eSBtYW5hZ2VtZW50LCB3aGl0ZSBsYWJlbGluZyB0aGUgY29udHJvbCBwYW5lbCwgYW5kIGNoYW5nZXMgbWVudSB0aXRsZXMuIn0sImNsYXNzX3dwcF9wcm9wZXJ0eV9pbXBvcnQiOnsidGl0bGUiOiJYTUwgUHJvcGVydHkgSW1wb3J0ZXIiLCJ0YWdsaW5lIjoiTWFwIGFuZCBpbXBvcnQgWE1MLWJhc2VkIHByb3BlcnRpZXMgaW50byB5b3VyIFdQLVByb3BlcnR5IHBvd2VyZWQgc2l0ZS4iLCJpbWFnZSI6Imh0dHBzOlwvXC8wMGUzMmUxMGRiZDk5ZjEwZmY5Yy0zMmU5NmJkODI2YmNjNGM5ZWM0YTAxMjcyY2QwMTI0Yi5zc2wuY2YxLnJhY2tjZG4uY29tXC9QRi10aHVtYnNcL3dwcF9wcm9wZXJ0eV9pbXBvcnQucG5nIiwiZGVzY3JpcHRpb24iOiJUaGUgWE1MSSBJbXBvcnRlciBlbmFibGVzIHlvdSB0byBhdXRvbWF0aWNhbGx5IGltcG9ydCBwcm9wZXJ0eSBsaXN0aW5ncyBkaXJlY3RseSBpbnRvIHlvdXIgd2Vic2l0ZS4gIFRoaXMgaW5jbHVkZXMgTUxTLCBSRVRTLCBYTUwsIGFuZCBtYW55IG90aGVyIHNvdXJjZSBmb3JtYXRzLiBQcm9wZXJ0aWVzIGFyZSBjcmVhdGVkLCBtZXJnZWQsIHJlbW92ZWQsIG9yIHVwZGF0ZWQgYWNjb3JkaW5nIHRvIHJ1bGVzIHlvdSBzcGVjaWZ5LiBUaGlzIHBvd2VyZnVsIGltcG9ydGF0aW9uIHRvb2wgZG93bmxvYWRzIGFuZCBhdHRhY2hlcyBpbWFnZXMgYW5kIGNhbiBldmVuIGFzc29jaWF0ZSBwcm9wZXJ0aWVzIHdpdGggcmVhbCBlc3RhdGUgYWdlbnRzLCBvbiB0aGUgZmx5LiBPbmNlIGFuIGltcG9ydCBzY2hlZHVsZSBoYXMgYmVlbiBjcmVhdGVkLCB5b3UgY2FuIGxpdGVyYWxseSBpbXBvcnQgaHVuZHJlZHMsIHRob3VzYW5kcywgZXZlbiB0ZW5zIG9mIHRob3VzYW5kcyBvZiBwcm9wZXJ0aWVzIHdpdGggYSBzaW5nbGUgY2xpY2suIn0sImNsYXNzX3dwcF9zbGlkZXNob3ciOnsidGl0bGUiOiJTbGlkZXNob3ciLCJ0YWdsaW5lIjoiQSBzbGlkZXNob3cgZm9yIGV2ZXJ5IHByb3BlcnR5IHBhZ2UsIGhvbWUgcGFnZSwgb3IgYm90aC4iLCJpbWFnZSI6Imh0dHBzOlwvXC8wMGUzMmUxMGRiZDk5ZjEwZmY5Yy0zMmU5NmJkODI2YmNjNGM5ZWM0YTAxMjcyY2QwMTI0Yi5zc2wuY2YxLnJhY2tjZG4uY29tXC9QRi10aHVtYnNcL3dwcF9zbGlkZXNob3cucG5nIiwiZGVzY3JpcHRpb24iOiJUaGUgc2xpZGVzaG93IGZlYXR1cmUgYWxsb3dzIHlvdSB0byBpbnNlcnQgYSBzbGlkZXNob3cgaW50byBhbnkgcHJvcGVydHkgcGFnZSwgaG9tZSBwYWdlLCBvciB2aXJ0dWFsbHkgYW55d2hlcmUgaW4geW91ciBibG9nLiA8YnIgXC8+IDxiciBcLz5XZSBtYWRlIGl0IGV4dHJlbWVseSBzaW1wbGUgLSB0aGUgc2xpZGVzaG93IHBhZ2Ugc2VhcmNoZXMgdGhyb3VnaCB0aGUgTWVkaWEgTGlicmFyeSBsb29raW5nIGZvciBpbWFnZXMgdGhhdCBhcmUgYmlnIGVub3VnaCBmb3IgdGhlIHNsaWRlc2hvdyAtIGRpbWVuc2lvbnMgdG8gd2hpY2ggeW91IHdvdWxkIHNwZWNpZnkgaW4gdGhlIG1haW4gV1AtUHJvcGVydHkgY29udHJvbCBwYW5lbC4ifSwiY2xhc3Nfd3BwX3N1cGVybWFwIjp7InRpdGxlIjoiU3VwZXIgTWFwIiwidGFnbGluZSI6IkludGVyYWN0aXZlIG1hcCBzaG93Y2FzaW5nIGFsbCBvZiB5b3VyIHByb3BlcnRpZXMiLCJpbWFnZSI6Imh0dHBzOlwvXC8wMGUzMmUxMGRiZDk5ZjEwZmY5Yy0zMmU5NmJkODI2YmNjNGM5ZWM0YTAxMjcyY2QwMTI0Yi5zc2wuY2YxLnJhY2tjZG4uY29tXC9QRi10aHVtYnNcL3dwcF9zdXBlcm1hcC5wbmciLCJkZXNjcmlwdGlvbiI6IlN1cGVyIE1hcCBwbHVnaW4gbGV0cyB5b3UgcHV0IGEgbGFyZ2UgaW50ZXJhY3RpdmUgbWFwIHZpcnR1YWxseSBhbnl3aGVyZSBpbiB5b3VyIFdvcmRQcmVzcyBzZXR1cC4gIFRoZSBtYXAgbGV0cyB5b3VyIHZpc2l0b3JzIHF1aWNrbHkgdmlldyB0aGUgbG9jYXRpb24gb2YgYWxsIHlvdXIgcHJvcGVydGllcywgYW5kIGZpbHRlciB0aGVtIGRvd24gYnkgYXR0cmlidXRlcy4ifX0sImluc3RhbGxlZF9mZWF0dXJlcyI6eyJjbGFzc193cHBfZmVwcyI6eyJuYW1lIjoiRnJvbnQgRW5kIFByb3BlcnR5IFN1Ym1pc3Npb25zIChGRVBTKSIsInZlcnNpb24iOiIyLjYuMyIsImRlc2NyaXB0aW9uIjoiQWxsb3cgdXNlcnMgdG8gYWRkIHByb3BlcnRpZXMgZnJvbSB0aGUgZnJvbnQtZW5kLiIsImNsYXNzIjoiY2xhc3Nfd3BwX2ZlcHMiLCJtaW5pbXVtLmNvcmUiOiIxLjQyLjAiLCJuZWVkc19oaWdoZXJfd3BwX3ZlcnNpb24iOiJmYWxzZSIsImRpc2FibGVkIjoiZmFsc2UifX0sInRheG9ub21pZXMiOnsicHJvcGVydHlfZmVhdHVyZSI6eyJoaWVyYXJjaGljYWwiOmZhbHNlLCJsYWJlbCI6IkZlYXR1cmVzIiwibGFiZWxzIjp7Im5hbWUiOiJGZWF0dXJlcyIsInNpbmd1bGFyX25hbWUiOiJGZWF0dXJlIiwic2VhcmNoX2l0ZW1zIjoiU2VhcmNoIEZlYXR1cmVzIiwiYWxsX2l0ZW1zIjoiQWxsIEZlYXR1cmVzIiwicGFyZW50X2l0ZW0iOiJQYXJlbnQgRmVhdHVyZSIsInBhcmVudF9pdGVtX2NvbG9uIjoiUGFyZW50IEZlYXR1cmU6IiwiZWRpdF9pdGVtIjoiRWRpdCBGZWF0dXJlIiwidXBkYXRlX2l0ZW0iOiJVcGRhdGUgRmVhdHVyZSIsImFkZF9uZXdfaXRlbSI6IkFkZCBOZXcgRmVhdHVyZSIsIm5ld19pdGVtX25hbWUiOiJOZXcgRmVhdHVyZSBOYW1lIiwibWVudV9uYW1lIjoiRmVhdHVyZSJ9LCJxdWVyeV92YXIiOiJwcm9wZXJ0eV9mZWF0dXJlIiwicmV3cml0ZSI6eyJzbHVnIjoiZmVhdHVyZSJ9LCJkZWZhdWx0Ijp0cnVlLCJwdWJsaWMiOnRydWUsInNob3dfdWkiOnRydWUsInNob3dfaW5fbmF2X21lbnVzIjp0cnVlLCJzaG93X3RhZ2Nsb3VkIjp0cnVlLCJhZGRfbmF0aXZlX210Ym94Ijp0cnVlfSwiY29tbXVuaXR5X2ZlYXR1cmUiOnsiaGllcmFyY2hpY2FsIjpmYWxzZSwibGFiZWwiOiJDb21tdW5pdHkgRmVhdHVyZXMiLCJsYWJlbHMiOnsibmFtZSI6IkNvbW11bml0eSBGZWF0dXJlcyIsInNpbmd1bGFyX25hbWUiOiJDb21tdW5pdHkgRmVhdHVyZSIsInNlYXJjaF9pdGVtcyI6IlNlYXJjaCBDb21tdW5pdHkgRmVhdHVyZXMiLCJhbGxfaXRlbXMiOiJBbGwgQ29tbXVuaXR5IEZlYXR1cmVzIiwicGFyZW50X2l0ZW0iOiJQYXJlbnQgQ29tbXVuaXR5IEZlYXR1cmUiLCJwYXJlbnRfaXRlbV9jb2xvbiI6IlBhcmVudCBDb21tdW5pdHkgRmVhdHVyZToiLCJlZGl0X2l0ZW0iOiJFZGl0IENvbW11bml0eSBGZWF0dXJlIiwidXBkYXRlX2l0ZW0iOiJVcGRhdGUgQ29tbXVuaXR5IEZlYXR1cmUiLCJhZGRfbmV3X2l0ZW0iOiJBZGQgTmV3IENvbW11bml0eSBGZWF0dXJlIiwibmV3X2l0ZW1fbmFtZSI6Ik5ldyBDb21tdW5pdHkgRmVhdHVyZSBOYW1lIiwibWVudV9uYW1lIjoiQ29tbXVuaXR5IEZlYXR1cmUifSwicXVlcnlfdmFyIjoiY29tbXVuaXR5X2ZlYXR1cmUiLCJyZXdyaXRlIjp7InNsdWciOiJjb21tdW5pdHlfZmVhdHVyZSJ9LCJkZWZhdWx0Ijp0cnVlLCJwdWJsaWMiOnRydWUsInNob3dfdWkiOnRydWUsInNob3dfaW5fbmF2X21lbnVzIjp0cnVlLCJzaG93X3RhZ2Nsb3VkIjp0cnVlLCJhZGRfbmF0aXZlX210Ym94Ijp0cnVlfX0sImxhYmVscyI6eyJuYW1lIjoiUHJvcGVydGllcyIsImFsbF9pdGVtcyI6IkFsbCBQcm9wZXJ0aWVzIiwic2luZ3VsYXJfbmFtZSI6IlByb3BlcnR5IiwiYWRkX25ldyI6IkFkZCBQcm9wZXJ0eSIsImFkZF9uZXdfaXRlbSI6IkFkZCBOZXcgUHJvcGVydHkiLCJlZGl0X2l0ZW0iOiJFZGl0IFByb3BlcnR5IiwibmV3X2l0ZW0iOiJOZXcgUHJvcGVydHkiLCJ2aWV3X2l0ZW0iOiJWaWV3IFByb3BlcnR5Iiwic2VhcmNoX2l0ZW1zIjoiU2VhcmNoIFByb3BlcnRpZXMiLCJub3RfZm91bmQiOiJObyBwcm9wZXJ0aWVzIGZvdW5kIiwibm90X2ZvdW5kX2luX3RyYXNoIjoiTm8gcHJvcGVydGllcyBmb3VuZCBpbiBUcmFzaCIsInBhcmVudF9pdGVtX2NvbG9uIjoiIn0sIm5hbWUiOiJXUC1Qcm9wZXJ0eSIsInZlcnNpb24iOiIyLjQuMiIsImRvbWFpbiI6IndwcCIsInByb3Bfc3RkX2F0dCI6eyJwZGYiOnsicHJpY2UiOnsibGFiZWwiOiJQcmljZSIsIm5vdGljZSI6IiJ9LCJhZGRyZXNzIjp7ImxhYmVsIjoiQWRkcmVzcyIsIm5vdGljZSI6IlRoaXMgYXR0cmlidXRlIHdpbGwgYmUgdXNlZCBmb3IgYXV0b21hdGljIGdlb2xvY2F0aW9uLiJ9LCJiZWRyb29tcyI6eyJsYWJlbCI6IkJlZHJvb21zIiwibm90aWNlIjoiIn0sImJhdGhyb29tcyI6eyJsYWJlbCI6IkJhdGhyb29tcyIsIm5vdGljZSI6IiJ9LCJsaXZpbmdfc3BhY2Vfc2l6ZSI6eyJsYWJlbCI6IkxpdmluZyBTcGFjZSBzaXplIFNxIGZ0Iiwibm90aWNlIjoiIn0sImZlYXR1cmVzIjp7ImxhYmVsIjoiRmVhdHVyZXMiLCJub3RpY2UiOiIifSwiY29tbXVuaXR5X2ZlYXR1cmVzIjp7ImxhYmVsIjoiQ29tbXVuaXR5IEZlYXR1cmVzIiwibm90aWNlIjoiIn19LCJpbXBvcnRlciI6eyJ0b3RhbF9yb29tcyI6eyJsYWJlbCI6IlRvdGFsIFJvb21zIiwibm90aWNlIjoiIn0sInllYXJfYnVpbHQiOnsibGFiZWwiOiJZZWFyIEJ1aWx0Iiwibm90aWNlIjoiIn0sIm5vX29mX2Zsb29ycyI6eyJsYWJlbCI6Ik5vLiBvZiBGbG9vcnMiLCJub3RpY2UiOiIifSwibG90X3NpemVfYWNyZXMiOnsibGFiZWwiOiJMb3Qgc2l6ZSwgYWNyZXMiLCJub3RpY2UiOiIifSwibmVpZ2hib3Job29kIjp7ImxhYmVsIjoiTmVpZ2hib3Job29kICh0ZXJtKSIsIm5vdGljZSI6IiJ9LCJmZWVzIjp7ImxhYmVsIjoiRmVlcyIsIm5vdGljZSI6IiJ9LCJzdGF0dXMiOnsibGFiZWwiOiJTdGF0dXMiLCJub3RpY2UiOiIifX19LCJwcm9wX3N0ZF9hdHRfbWFwcGVkIjpbXSwicHJvcF9zdGRfYXR0X21hcHN0byI6W10sInByb3BlcnR5X2Fzc2lzdGFudCI6eyJkZWZhdWx0X2F0dHMiOnsidGFnbGluZSI6IlRhZ2xpbmUiLCJsb2NhdGlvbiI6IkFkZHJlc3MiLCJjaXR5IjoiQ2l0eSIsInByaWNlIjoiUHJpY2UiLCJ5ZWFyX2J1aWx0IjoiWWVhciBCdWlsdCIsImZlZXMiOiJGZWVzIn0sInJlc2lkZW50aWFsIjp7ImJlZHJvb21zIjoiQmVkcm9vbXMiLCJiYXRocm9vbXMiOiJCYXRocm9vbXMiLCJ0b3RhbF9yb29tcyI6IlRvdGFsIFJvb21zIiwibGl2aW5nX3NwYWNlIjoiTGl2aW5nIHNwYWNlIn0sImNvbW1lcmNpYWwiOnsiYnVzaW5lc3NfcHVycG9zZSI6IkJ1c2luZXNzIFB1cnBvc2UifSwibGFuZCI6eyJsb3Rfc2l6ZSI6IkxvdCBTaXplIn19LCJhdHRyaWJ1dGVzIjp7InR5cGVzIjp7ImlucHV0IjoiU2hvcnQgVGV4dCIsInRleHRhcmVhIjoiVGV4dGFyZWEiLCJjaGVja2JveCI6IkNoZWNrYm94IiwiZGF0ZXRpbWUiOiJEYXRlIGFuZCBUaW1lIiwiY3VycmVuY3kiOiJDdXJyZW5jeSIsIm51bWJlciI6Ik51bWJlciIsInd5c2l3eWciOiJUZXh0IEVkaXRvciIsImRyb3Bkb3duIjoiRHJvcGRvd24gU2VsZWN0aW9uIiwic2VsZWN0X2FkdmFuY2VkIjoiQWR2YW5jZWQgRHJvcGRvd24iLCJtdWx0aV9jaGVja2JveCI6Ik11bHRpLUNoZWNrYm94IiwicmFkaW8iOiJSYWRpbyIsInVybCI6IlVSTCIsIm9lbWJlZCI6Ik9lbWJlZCIsImRhdGUiOiJEYXRlIHBpY2tlciIsInRpbWUiOiJUaW1lIHBpY2tlciIsImNvbG9yIjoiQ29sb3IgcGlja2VyIiwiaW1hZ2VfYWR2YW5jZWQiOiJJbWFnZSB1cGxvYWQiLCJmaWxlX2FkdmFuY2VkIjoiRmlsZXMgdXBsb2FkIiwiZmlsZV9pbnB1dCI6IkZpbGUgVVJMIn0sInNlYXJjaGFibGUiOnsiaW5wdXQiOlsiaW5wdXQiXSwidGV4dGFyZWEiOlsiaW5wdXQiXSwid3lzaXd5ZyI6WyJpbnB1dCJdLCJkcm9wZG93biI6WyJkcm9wZG93biIsIm11bHRpY2hlY2tib3giXSwic2VsZWN0X2FkdmFuY2VkIjpbImRyb3Bkb3duIiwibXVsdGljaGVja2JveCJdLCJjaGVja2JveCI6WyJjaGVja2JveCJdLCJtdWx0aV9jaGVja2JveCI6WyJpbnB1dCIsImRyb3Bkb3duIiwibXVsdGljaGVja2JveCJdLCJyYWRpbyI6WyJkcm9wZG93biIsIm11bHRpY2hlY2tib3giXSwibnVtYmVyIjpbImlucHV0IiwiZHJvcGRvd24iLCJyYW5nZV9pbnB1dCIsInJhbmdlX2Ryb3Bkb3duIiwiYWR2YW5jZWRfcmFuZ2VfZHJvcGRvd24iXSwiY3VycmVuY3kiOlsiaW5wdXQiLCJkcm9wZG93biIsInJhbmdlX2lucHV0IiwicmFuZ2VfZHJvcGRvd24iLCJhZHZhbmNlZF9yYW5nZV9kcm9wZG93biJdLCJ1cmwiOlsiaW5wdXQiXSwiZGF0ZSI6WyJyYW5nZV9kYXRlIl19LCJkZWZhdWx0Ijp7ImlucHV0IjoidGV4dCIsIm51bWJlciI6InRleHQiLCJjdXJyZW5jeSI6InRleHQiLCJ1cmwiOiJ0ZXh0Iiwib2VtYmVkIjoidGV4dCIsInRleHRhcmVhIjoidGV4dGFyZWEiLCJ3eXNpd3lnIjoidGV4dGFyZWEifSwibXVsdGlwbGUiOlsiY2F0ZWdvcmljYWwtdGVybSIsIm11bHRpX2NoZWNrYm94IiwiaW1hZ2VfYWR2YW5jZWQiLCJmaWxlX2FkdmFuY2VkIiwiaW1hZ2VfdXBsb2FkIl19LCJudW1lcmljX2F0dHJpYnV0ZXMiOltdLCJjdXJyZW5jeV9hdHRyaWJ1dGVzIjpbXX19fTsKLyogXV0+ICovCjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy93cC1wcm9wZXJ0eS9zdGF0aWMvc2NyaXB0cy9sMTBuLmpzP3Zlcj0yLjQuMic+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL21vdXNlLm1pbi5qcz92ZXI9MS4xMS40Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1pbmNsdWRlcy9qcy9qcXVlcnkvdWkvc29ydGFibGUubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy93cC1wcm9wZXJ0eS9zdGF0aWMvc2NyaXB0cy93cHAuZ2xvYmFsLmpzP3Zlcj0yLjQuMic+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2J1c2luZXNzLWRpcmVjdG9yeS1wbHVnaW4vdmVuZG9ycy9qUXVlcnktRmlsZS1VcGxvYWQtOS41LjcvanMvanF1ZXJ5LmlmcmFtZS10cmFuc3BvcnQubWluLmpzP3Zlcj05LjUuNyc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2J1c2luZXNzLWRpcmVjdG9yeS1wbHVnaW4vdmVuZG9ycy9qUXVlcnktRmlsZS1VcGxvYWQtOS41LjcvanMvanF1ZXJ5LmZpbGV1cGxvYWQubWluLmpzP3Zlcj05LjUuNyc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2J1c2luZXNzLWRpcmVjdG9yeS1wbHVnaW4vYXNzZXRzL2pzL2RuZC11cGxvYWQubWluLmpzP3Zlcj01LjUuMyc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2J1c2luZXNzLWRpcmVjdG9yeS1wbHVnaW4vdmVuZG9ycy9qcXVlcnktYnJlYWtwb2ludHMubWluLmpzP3Zlcj0wLjAuMTEnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9idXNpbmVzcy1kaXJlY3RvcnktcGx1Z2luL3ZlbmRvcnMvc2VsZWN0Mi00LjAuNS9qcy9zZWxlY3QyLmZ1bGwubWluLmpzP3Zlcj00LjAuNSc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL2RhdGVwaWNrZXIubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+CmpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oalF1ZXJ5KXtqUXVlcnkuZGF0ZXBpY2tlci5zZXREZWZhdWx0cyh7ImNsb3NlVGV4dCI6IkNsb3NlIiwiY3VycmVudFRleHQiOiJUb2RheSIsIm1vbnRoTmFtZXMiOlsiSmFudWFyeSIsIkZlYnJ1YXJ5IiwiTWFyY2giLCJBcHJpbCIsIk1heSIsIkp1bmUiLCJKdWx5IiwiQXVndXN0IiwiU2VwdGVtYmVyIiwiT2N0b2JlciIsIk5vdmVtYmVyIiwiRGVjZW1iZXIiXSwibW9udGhOYW1lc1Nob3J0IjpbIkphbiIsIkZlYiIsIk1hciIsIkFwciIsIk1heSIsIkp1biIsIkp1bCIsIkF1ZyIsIlNlcCIsIk9jdCIsIk5vdiIsIkRlYyJdLCJuZXh0VGV4dCI6Ik5leHQiLCJwcmV2VGV4dCI6IlByZXZpb3VzIiwiZGF5TmFtZXMiOlsiU3VuZGF5IiwiTW9uZGF5IiwiVHVlc2RheSIsIldlZG5lc2RheSIsIlRodXJzZGF5IiwiRnJpZGF5IiwiU2F0dXJkYXkiXSwiZGF5TmFtZXNTaG9ydCI6WyJTdW4iLCJNb24iLCJUdWUiLCJXZWQiLCJUaHUiLCJGcmkiLCJTYXQiXSwiZGF5TmFtZXNNaW4iOlsiUyIsIk0iLCJUIiwiVyIsIlQiLCJGIiwiUyJdLCJkYXRlRm9ybWF0IjoiTU0gZCwgeXkiLCJmaXJzdERheSI6MSwiaXNSVEwiOmZhbHNlfSk7fSk7Cjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+Ci8qIDwhW0NEQVRBWyAqLwp2YXIgd3BiZHBfZ2xvYmFsID0geyJhamF4dXJsIjoiaHR0cDpcL1wvd3d3LndlcmVnbmEuY29tXC93cC1hZG1pblwvYWRtaW4tYWpheC5waHAifTsKLyogXV0+ICovCjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9idXNpbmVzcy1kaXJlY3RvcnktcGx1Z2luL2Fzc2V0cy9qcy93cGJkcC5taW4uanM/dmVyPTUuNS4zJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvd3AtcHJvcGVydHktZmVwcy8vc3RhdGljL3NjcmlwdHMvZG90LmpzP3Zlcj00LjcuMjUnPjwvc2NyaXB0Pgo8bGluayByZWw9J2h0dHBzOi8vYXBpLncub3JnLycgaHJlZj0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1qc29uLycgLz4KPGxpbmsgcmVsPSJFZGl0VVJJIiB0eXBlPSJhcHBsaWNhdGlvbi9yc2QreG1sIiB0aXRsZT0iUlNEIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL3htbHJwYy5waHA/cnNkIiAvPgo8bGluayByZWw9Indsd21hbmlmZXN0IiB0eXBlPSJhcHBsaWNhdGlvbi93bHdtYW5pZmVzdCt4bWwiIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtaW5jbHVkZXMvd2x3bWFuaWZlc3QueG1sIiAvPiAKPG1ldGEgbmFtZT0iZ2VuZXJhdG9yIiBjb250ZW50PSJXb3JkUHJlc3MgNC43LjI1IiAvPgo8bGluayByZWw9J3Nob3J0bGluaycgaHJlZj0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS8/cD0yNicgLz4KPGxpbmsgcmVsPSJhbHRlcm5hdGUiIHR5cGU9ImFwcGxpY2F0aW9uL2pzb24rb2VtYmVkIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWpzb24vb2VtYmVkLzEuMC9lbWJlZD91cmw9aHR0cCUzQSUyRiUyRnd3dy53ZXJlZ25hLmNvbSUyRmV0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMlMkYiIC8+CjxsaW5rIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJ0ZXh0L3htbCtvZW1iZWQiIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtanNvbi9vZW1iZWQvMS4wL2VtYmVkP3VybD1odHRwJTNBJTJGJTJGd3d3LndlcmVnbmEuY29tJTJGZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcyUyRiYjMDM4O2Zvcm1hdD14bWwiIC8+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2otc2hvcnRjb2Rlcy9jc3MvamF5LmNzcyIgLz4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2otc2hvcnRjb2Rlcy9qcy9qYXkuanMiPjwvc2NyaXB0PjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2otc2hvcnRjb2Rlcy9nYWxsZXJ5dmlldy9jc3MvanF1ZXJ5LmdhbGxlcnl2aWV3LTMuMC5jc3MiIC8+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9qLXNob3J0Y29kZXMvZ2FsbGVyeXZpZXcvanMvanF1ZXJ5LmVhc2luZy4xLjMuanMiPjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvai1zaG9ydGNvZGVzL2dhbGxlcnl2aWV3L2pzL2pxdWVyeS50aW1lcnMtMS4yLmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2otc2hvcnRjb2Rlcy9nYWxsZXJ5dmlldy9qcy9qcXVlcnkuZ2FsbGVyeXZpZXctMy4wLm1pbi5qcyI+PC9zY3JpcHQ+PGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvai1zaG9ydGNvZGVzL2Nzcy9qcXVlcnkvc21vb3RobmVzcy9qcXVlcnktdWktMS44LjkuY3VzdG9tLmNzcyIgLz48c3R5bGUgdHlwZT0idGV4dC9jc3MiPjwvc3R5bGU+PC9oZWFkPgoKPGJvZHkgY2xhc3M9InBhZ2UtdGVtcGxhdGUtZGVmYXVsdCBwYWdlIHBhZ2UtaWQtMjYgbm8tc2lkZWJhciBhY2Nlc3NwcmVzcy1saXRlIHdwYmRwLXdpdGgtYnV0dG9uLXN0eWxlcyBidXNpbmVzcy1kaXJlY3Rvcnkgd3BiZHAtdmlldy1tYWluIHdwYmRwLXdwLXRoZW1lLWFjY2Vzc3ByZXNzLWxpdGUgd3BiZHAtdGhlbWUtbm9fdGhlbWUiPgo8ZGl2IGlkPSJwYWdlIiBjbGFzcz0ic2l0ZSI+CgoJPGhlYWRlciBpZD0ibWFzdGhlYWQiIGNsYXNzPSJzaXRlLWhlYWRlciI+CiAgICA8ZGl2IGlkPSJ0b3AtaGVhZGVyIj4KCQk8ZGl2IGNsYXNzPSJhay1jb250YWluZXIiPgoJCQk8ZGl2IGNsYXNzPSJzaXRlLWJyYW5kaW5nIj4KCQkJCQoJCQkJCgkJCQkJCQkJPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS8iIHJlbD0iaG9tZSI+CgkJCQkJPGltZyBzcmM9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTQvMTEvbG9nbzEucG5nIiBhbHQ9IldlcmVnbmEiPgoJCQkJPC9hPgoJCQkJCQkJCQoJCQkJCgkJCTwvZGl2PjwhLS0gLnNpdGUtYnJhbmRpbmcgLS0+CiAgICAgICAgCgoJCQk8ZGl2IGNsYXNzPSJyaWdodC1oZWFkZXIgY2xlYXJmaXgiPgoJCQkJPGRpdiBjbGFzcz0iaGVhZGVyLXRleHQiPjxwPkNhbGwgdXMgOiAyMDIuNDUyLjEzMzI8L3A+CjwvZGl2PiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+CiAgICAgICAgICAgICAgICAJCTxkaXYgY2xhc3M9InNvY2lhbHMiPgoJCQoJCQoJCQoJCQoJCQoJCQoJCQoJCQoJCQoJCQoJCQoJCQoJCQoJCQoJCQkJPC9kaXY+CgkJCQkJPGRpdiBjbGFzcz0iYWstc2VhcmNoIj4KCQkJCQkJPGZvcm0gbWV0aG9kPSJnZXQiIGNsYXNzPSJzZWFyY2hmb3JtIiBhY3Rpb249Imh0dHA6Ly93d3cud2VyZWduYS5jb20vIiByb2xlPSJzZWFyY2giPgoJCTxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJzIiB2YWx1ZT0iIiBjbGFzcz0icyIgcGxhY2Vob2xkZXI9IlNlYXJjaC4uLiIgLz4KCQk8YnV0dG9uIHR5cGU9InN1Ym1pdCIgbmFtZT0ic3VibWl0IiBjbGFzcz0ic2VhcmNoc3VibWl0Ij48aSBjbGFzcz0iZmEgZmEtc2VhcmNoIj48L2k+PC9idXR0b24+Cgk8L2Zvcm0+CgkJCQk8L2Rpdj4KCQkJCQkJCTwvZGl2PjwhLS0gLnJpZ2h0LWhlYWRlciAtLT4KCQk8L2Rpdj48IS0tIC5hay1jb250YWluZXIgLS0+CiAgPC9kaXY+PCEtLSAjdG9wLWhlYWRlciAtLT4KCgkJCgkJPG5hdiBpZD0ic2l0ZS1uYXZpZ2F0aW9uIiBjbGFzcz0ibWFpbi1uYXZpZ2F0aW9uIG1lbnUtbGVmdCI+CgkJCTxkaXYgY2xhc3M9ImFrLWNvbnRhaW5lciI+CgkJCQk8aDEgY2xhc3M9Im1lbnUtdG9nZ2xlIj5NZW51PC9oMT4KCgkJCQk8ZGl2IGNsYXNzPSJtZW51LW1lbnUtMS1jb250YWluZXIiPjx1bCBpZD0ibWVudS1tZW51LTEiIGNsYXNzPSJtZW51Ij48bGkgaWQ9Im1lbnUtaXRlbS0zOCIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS1ob21lIG1lbnUtaXRlbS0zOCI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS8iPkhPTUU8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTM3IiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLXBvc3RfdHlwZSBtZW51LWl0ZW0tb2JqZWN0LXBhZ2UgbWVudS1pdGVtLWhhcy1jaGlsZHJlbiBtZW51LWl0ZW0tMTM3Ij48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWpvYnMvIj5KT0JTPC9hPgo8dWwgY2xhc3M9InN1Yi1tZW51Ij4KCTxsaSBpZD0ibWVudS1pdGVtLTI3OCIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0yNzgiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtam9icy8iPlZpZXcgQWxsIEpPQlM8L2E+PC9saT4KCTxsaSBpZD0ibWVudS1pdGVtLTEzOCIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xMzgiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vc3VibWl0LWpvYi8iPlNVQk1JVCBKT0I8L2E+PC9saT4KCTxsaSBpZD0ibWVudS1pdGVtLTEzOSIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xMzkiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vam9iLWRhc2hib2FyZC8iPkpPQiBEQVNIQk9BUkQ8L2E+PC9saT4KPC91bD4KPC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tNDM3MCIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1jdXN0b20gbWVudS1pdGVtLW9iamVjdC1jdXN0b20gbWVudS1pdGVtLWhhcy1jaGlsZHJlbiBtZW51LWl0ZW0tNDM3MCI+PGEgaHJlZj0iIyI+UkVOVEFMUzwvYT4KPHVsIGNsYXNzPSJzdWItbWVudSI+Cgk8bGkgaWQ9Im1lbnUtaXRlbS0yMDAiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMjAwIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhbi1ldGhpb3BpYS1yZW50YWwvIj5WaWV3IFJlbnRhbHM8L2E+PC9saT4KCTxsaSBpZD0ibWVudS1pdGVtLTQzNTQiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tNDM1NCI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYW4tZXRoaW9waWEtc3VibWl0LXJlbnRhbC1mb3JtLyI+UG9zdCBSZW50YWxzPC9hPjwvbGk+CjwvdWw+CjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTI5MiIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1jdXN0b20gbWVudS1pdGVtLW9iamVjdC1jdXN0b20gY3VycmVudC1tZW51LWl0ZW0gbWVudS1pdGVtLTI5MiI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLyI+WUVMTE9XIFBBR0VTPC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTE5MSIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xOTEiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vbG9jYWwtZXZlbnRzLyI+TE9DQUwtRVZFTlRTPC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTI4MiIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0yODIiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vbG9naW4vIj5Mb2cgSW4gLyBTaWduIFVwPC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTc2NzUiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tNzY3NSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9yZXZpZXcvIj5SRVZJRVc8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tNDIiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tNDIiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vY29udGFjdC8iPkNPTlRBQ1Q8L2E+PC9saT4KPC91bD48L2Rpdj4JCQk8L2Rpdj4KCQk8L25hdj48IS0tICNzaXRlLW5hdmlnYXRpb24gLS0+Cgk8L2hlYWRlcj48IS0tICNtYXN0aGVhZCAtLT4KCgk8c2VjdGlvbiBpZD0ic2xpZGVyLWJhbm5lciI+CgkJCTwvc2VjdGlvbj48IS0tICNzbGlkZXItYmFubmVyIC0tPgoJCTxkaXYgaWQ9ImNvbnRlbnQiIGNsYXNzPSJzaXRlLWNvbnRlbnQiPgoKPGRpdiBjbGFzcz0iYWstY29udGFpbmVyIj4KCgk8ZGl2IGlkPSJwcmltYXJ5IiBjbGFzcz0iY29udGVudC1hcmVhIj4KCQk8bWFpbiBpZD0ibWFpbiIgY2xhc3M9InNpdGUtbWFpbiIgcm9sZT0ibWFpbiI+CgoJCQkKCQkJCQo8YXJ0aWNsZSBpZD0icG9zdC0yNiIgY2xhc3M9InBvc3QtMjYgcGFnZSB0eXBlLXBhZ2Ugc3RhdHVzLXB1Ymxpc2ggaGVudHJ5Ij4KCTxoZWFkZXIgY2xhc3M9ImVudHJ5LWhlYWRlciI+CgkJPGgxIGNsYXNzPSJlbnRyeS10aXRsZSI+WUVMTE9XIFBBR0VTPC9oMT4KCTwvaGVhZGVyPjwhLS0gLmVudHJ5LWhlYWRlciAtLT4KCgk8ZGl2IGNsYXNzPSJlbnRyeS1jb250ZW50Ij4KCQk8ZGl2IGRhdGEtd3BjcjMtY29udGVudD0iLTEiPjxkaXYgY2xhc3M9J3dwY3IzX3Jlc3BvbmRfMSAnIGRhdGEtYWpheHVybD0nWyJodHRwOnx8d3d3Iiwid2VyZWduYSIsImNvbXx3cC1hZG1pbnxhZG1pbi1hamF4IiwicGhwP2FjdGlvbj13cGNyMy1hamF4Il0nIGRhdGEtb24tcG9zdGlkPScyNidkYXRhLXBvc3RpZD0nLTEnPjxkaXYgY2xhc3M9IndwY3IzX3Jldmlld3NfaG9sZGVyIj48ZGl2IGNsYXNzPSJ3cGNyM19yZXZpZXdfaXRlbSI+PGRpdiBjbGFzcz0id3BjcjNfaXRlbSB3cGNyM19idXNpbmVzcyIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvTG9jYWxCdXNpbmVzcyI+PG1ldGEgaXRlbXByb3A9Im5hbWUiIGNvbnRlbnQ9IldlcmVnbmEiIC8+PG1ldGEgaXRlbXByb3A9InVybCIgY29udGVudD0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbSIgLz48bWV0YSBpdGVtcHJvcD0iaW1hZ2UiIGNvbnRlbnQ9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL3dwLWN1c3RvbWVyLXJldmlld3MvY3NzLzF4MS5wbmciIC8+PGRpdiBjbGFzcz0id3BjcjNfZG90bGluZSI+PC9kaXY+PGRpdiBpZD0id3BjcjNfaWRfNzY3MSIgY2xhc3M9IndwY3IzX3JldmlldyIgaXRlbXByb3A9InJldmlldyIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvUmV2aWV3Ij48ZGl2IGNsYXNzPSJ3cGNyM19oaWRlIiBpdGVtcHJvcD0iYXV0aG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHBzOi8vc2NoZW1hLm9yZy9QZXJzb24iPjxkaXYgaXRlbXByb3A9Im5hbWUiPkJ1bWJhYTwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IndwY3IzX2hpZGUiIGl0ZW1wcm9wPSJyZXZpZXdSYXRpbmciIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cHM6Ly9zY2hlbWEub3JnL1JhdGluZyI+PG1ldGEgaXRlbXByb3A9ImJlc3RSYXRpbmciIGNvbnRlbnQ9IjUiIC8+PG1ldGEgaXRlbXByb3A9IndvcnN0UmF0aW5nIiBjb250ZW50PSIxIiAvPjxtZXRhIGl0ZW1wcm9wPSJyYXRpbmdWYWx1ZSIgY29udGVudD0iNSIgLz48L2Rpdj48ZGl2IGNsYXNzPSJ3cGNyM19yZXZpZXdfcmF0aW5nVmFsdWUiPjxkaXYgY2xhc3M9IndwY3IzX3JhdGluZ19zdHlsZTEiPjxkaXYgY2xhc3M9IndwY3IzX3JhdGluZ19zdHlsZTFfYmFzZSAiPjxkaXYgY2xhc3M9IndwY3IzX3JhdGluZ19zdHlsZTFfYXZlcmFnZSIgc3R5bGU9IndpZHRoOjEwMCU7Ij48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJ3cGNyM19yZXZpZXdfZGF0ZVB1Ymxpc2hlZCIgaXRlbXByb3A9ImRhdGVQdWJsaXNoZWQiPk1heSAyNywgMjAxODwvZGl2PjxkaXYgY2xhc3M9IndwY3IzX3Jldmlld19hdXRob3IiPiZuYnNwO2J5Jm5ic3A7PHNwYW4gY2xhc3M9IndwY3IzX2NhcHMiPkJ1bWJhYTwvc3Bhbj4mbmJzcDtvbiZuYnNwOzxzcGFuIGNsYXNzPSJ3cGNyM19pdGVtX25hbWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vIj5XZXJlZ25hPC9hPjwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPSJ3cGNyM19jbGVhciI+PC9kaXY+PGRpdiBjbGFzcz0id3BjcjNfcmV2aWV3X3RpdGxlIHdwY3IzX2NhcHMiPkV4Y2VsbGVudCBXZWIgUG9ydGFsPC9kaXY+PGRpdiBjbGFzcz0id3BjcjNfY2xlYXIiPjwvZGl2PjxibG9ja3F1b3RlIGNsYXNzPSJ3cGNyM19jb250ZW50IiBpdGVtcHJvcD0icmV2aWV3Qm9keSI+PHA+VGhpcyBwb3J0YWwgZ290IHJlYWxseSBleGNlbGxlbnQgaW5mb3JtYXRpb24gcmVnYXJkaW5nIEpvYnMgRXZlbnRzIFJlbnRhbHMgYW5kIFllbGxvd3BhZ2VzIHdpdGggbG90cyBhbmQgbG90cyBvZiBkYXRhIC4uLiBJIGxvdmUgdGhpcyBXZXJlZ25hIFNpdGUgd2hpY2ggaGVscHMgbWUgZmluZCBqb2JzIGFuZCBhbHNvIHJlbnRhbCBmb3IgbXkgc3RheWluZyBhdCBFdGhpb3BpYS4uLjxiciAvPlRoYW5rcyBXZXJlZ25hPC9wPjwvYmxvY2txdW90ZT48YmxvY2txdW90ZSBjbGFzcz0id3BjcjNfY29udGVudCB3cGNyM19hZG1pbl9yZXNwb25zZSI+PHA+VGhhbmtzIE1yLiBCdW1iYWEgZm9yIHlvdXIgdmFsdWFibGUgcmV2aWV3PC9wPjwvYmxvY2txdW90ZT48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KPHA+PGNvZGU+PGNvZGU+PGNvZGU+PHR0PjxkaXYgaWQ9IndwYmRwLXBhZ2UtbWFpbl9wYWdlIiBjbGFzcz0id3BiZHAtcGFnZSB3cGJkcC1wYWdlLW1haW5fcGFnZSAiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9IndwYmRwLW1haW4tYm94IiBjbGFzcz0id3BiZHAtbWFpbi1ib3giIGRhdGEtYnJlYWtwb2ludHM9J3sidGlueSI6IFswLDM2MF0sICJzbWFsbCI6IFszNjAsNTYwXSwgIm1lZGl1bSI6IFs1NjAsNzEwXSwgImxhcmdlIjogWzcxMCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLW1haW4tYm94Ij4KCjxkaXYgY2xhc3M9Im1haW4tZmllbGRzIGJveC1yb3cgY29scy0yIGNmIj4KICAgIDxmb3JtIGFjdGlvbj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLz93cGJkcF92aWV3PXNlYXJjaCIgbWV0aG9kPSJnZXQiPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IndwYmRwX3ZpZXciIHZhbHVlPSJzZWFyY2giIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJveC1jb2wgc2VhcmNoLWZpZWxkcyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJveC1yb3cgY29scy0xIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJveC1jb2wgbWFpbi1pbnB1dCI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJ3cGJkcC1tYWluLWJveC1rZXl3b3JkLWZpZWxkIiBjbGFzcz0ia2V5d29yZHMtZmllbGQiIG5hbWU9Imt3IiBwbGFjZWhvbGRlcj0iRmluZCBsaXN0aW5ncyBmb3IgJmx0O2tleXdvcmRzJmd0OyIgLz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iYm94LWNvbCBzdWJtaXQtYnRuIj4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IkZpbmQgTGlzdGluZ3MiIC8+PGJyIC8+CiAgICAgICAgICAgIDxhIGNsYXNzPSJhZHZhbmNlZC1zZWFyY2gtbGluayIgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLz93cGJkcF92aWV3PXNlYXJjaCI+QWR2YW5jZWQgU2VhcmNoPC9hPgogICAgICAgIDwvZGl2PgogICAgPC9mb3JtPgo8L2Rpdj4KCjxkaXYgY2xhc3M9ImJveC1yb3cgc2VwYXJhdG9yIj48L2Rpdj4KCjxkaXYgY2xhc3M9ImJveC1yb3ciPjxkaXYgY2xhc3M9IndwYmRwLW1haW4tbGlua3MtY29udGFpbmVyIiBkYXRhLWJyZWFrcG9pbnRzPSd7InRpbnkiOiBbMCwzNjBdLCAic21hbGwiOiBbMzYwLDU2MF0sICJtZWRpdW0iOiBbNTYwLDcxMF0sICJsYXJnZSI6IFs3MTAsOTk5OTk5XX0nIGRhdGEtYnJlYWtwb2ludHMtY2xhc3MtcHJlZml4PSJ3cGJkcC1tYWluLWxpbmtzIj48ZGl2IGNsYXNzPSJ3cGJkcC1tYWluLWxpbmtzIHdwYmRwLW1haW4tbGlua3MtMy1idXR0b25zIj48aW5wdXQgaWQ9IndwYmRwLWJhci1zaG93LWRpcmVjdG9yeS1idXR0b24iIHR5cGU9ImJ1dHRvbiIgdmFsdWU9IkRpcmVjdG9yeSIgb25jbGljaz0id2luZG93LmxvY2F0aW9uLmhyZWYgPSAnaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLyciIGNsYXNzPSJidXR0b24gd3BiZHAtYnV0dG9uIiAvPjxpbnB1dCBpZD0id3BiZHAtYmFyLXZpZXctbGlzdGluZ3MtYnV0dG9uIiB0eXBlPSJidXR0b24iIHZhbHVlPSJWaWV3IEFsbCBMaXN0aW5ncyIgb25jbGljaz0id2luZG93LmxvY2F0aW9uLmhyZWYgPSAnaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLz93cGJkcF92aWV3PWFsbF9saXN0aW5ncyciIGNsYXNzPSJidXR0b24gd3BiZHAtYnV0dG9uIiAvPjxpbnB1dCBpZD0id3BiZHAtYmFyLXN1Ym1pdC1saXN0aW5nLWJ1dHRvbiIgdHlwZT0iYnV0dG9uIiB2YWx1ZT0iQ3JlYXRlIEEgTGlzdGluZyIgb25jbGljaz0id2luZG93LmxvY2F0aW9uLmhyZWYgPSAnaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLz93cGJkcF92aWV3PXN1Ym1pdF9saXN0aW5nJyIgY2xhc3M9ImJ1dHRvbiB3cGJkcC1idXR0b24iIC8+PC9kaXY+PC9kaXY+PC9kaXY+Cgo8L2Rpdj4KICAgIAogICAgCiAgICAgICAgICAgIDxkaXYgaWQ9IndwYmRwLWNhdGVnb3JpZXMiPgogICAgPHVsIGNsYXNzPSJ3cGJkcC1jYXRlZ29yaWVzIGNmICIgZGF0YS1icmVha3BvaW50cz0ieyZxdW90O3RpbnkmcXVvdDs6IFswLDM2MF0sICZxdW90O3NtYWxsJnF1b3Q7OiBbMzYwLDU2MF0sICZxdW90O21lZGl1bSZxdW90OzogWzU2MCw3MTBdLCAmcXVvdDtsYXJnZSZxdW90OzogWzcxMCw5OTk5OTldfSIgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWNhdGVnb3JpZXMiPjxsaSBjbGFzcz0iY2F0LWl0ZW0gY2F0LWl0ZW0tNTkgICI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX2NhdGVnb3J5L2J1aWxkaW5nLWNvbnN0cnVjdGlvbi1tYXRlcmlhbHMvIiB0aXRsZT0iIiBjbGFzcz0iY2F0ZWdvcnktbGFiZWwiPkJ1aWxkaW5nIC8gQ29uc3RydWN0aW9uIE1hdGVyaWFsczwvYT4gKDEpCTwvbGk+PGxpIGNsYXNzPSJjYXQtaXRlbSBjYXQtaXRlbS02MyAgIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfY2F0ZWdvcnkvYnVpbGRpbmctY29uc3RydWN0aW9uLW1ldGVyaWFscy8iIHRpdGxlPSIiIGNsYXNzPSJjYXRlZ29yeS1sYWJlbCI+QnVpbGRpbmcgLyBDb25zdHJ1Y3Rpb24gTWV0ZXJpYWxzPC9hPiAoODA3KQk8L2xpPjxsaSBjbGFzcz0iY2F0LWl0ZW0gY2F0LWl0ZW0tMTQgICI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX2NhdGVnb3J5L2ZpcmUtcHJvdGVjdGlvbi8iIHRpdGxlPSIiIGNsYXNzPSJjYXRlZ29yeS1sYWJlbCI+RmlyZSBQcm90ZWN0aW9uPC9hPiAoMSkJPC9saT48bGkgY2xhc3M9ImNhdC1pdGVtIGNhdC1pdGVtLTU4ICAiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9nZW5lcmFsLXRyYWRpbmcvIiB0aXRsZT0iIiBjbGFzcz0iY2F0ZWdvcnktbGFiZWwiPkdlbmVyYWwgVHJhZGluZzwvYT4gKDcpCTwvbGk+PGxpIGNsYXNzPSJjYXQtaXRlbSBjYXQtaXRlbS02OSAgIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfY2F0ZWdvcnkvZ292ZXJubWVudC1hZ2VuY2llcy8iIHRpdGxlPSIiIGNsYXNzPSJjYXRlZ29yeS1sYWJlbCI+R292ZXJubWVudCBBZ2VuY2llczwvYT4gKDkwNikJPC9saT48bGkgY2xhc3M9ImNhdC1pdGVtIGNhdC1pdGVtLTY1ICAiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9ob3RlbHMvIiB0aXRsZT0iIiBjbGFzcz0iY2F0ZWdvcnktbGFiZWwiPkhvdGVsczwvYT4gKDU0OSkJPC9saT48bGkgY2xhc3M9ImNhdC1pdGVtIGNhdC1pdGVtLTgyICAiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9yZXN0YXVyYW50LyIgdGl0bGU9IiIgY2xhc3M9ImNhdGVnb3J5LWxhYmVsIj5SZXN0YXVyYW50PC9hPiAoMTUxKQk8L2xpPjxsaSBjbGFzcz0iY2F0LWl0ZW0gY2F0LWl0ZW0tMTMgICI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX2NhdGVnb3J5L3NjaG9vbHMvIiB0aXRsZT0iIiBjbGFzcz0iY2F0ZWdvcnktbGFiZWwiPlNjaG9vbHM8L2E+ICgyKQk8L2xpPjxsaSBjbGFzcz0iY2F0LWl0ZW0gY2F0LWl0ZW0tNjYgICI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX2NhdGVnb3J5L3NwYXJlLXBhcnRzLyIgdGl0bGU9IiIgY2xhc3M9ImNhdGVnb3J5LWxhYmVsIj5TcGFyZSBQYXJ0czwvYT4gKDQ2MSkJPC9saT48L3VsPjwvZGl2PgoKICAgIAo8ZGl2IGlkPSJ3cGJkcC1saXN0aW5ncy1saXN0IiBjbGFzcz0ibGlzdGluZ3Mgd3BiZHAtbGlzdGluZ3MtbGlzdCBsaXN0Ij4KICAgICAgICAgICAgPGRpdiBpZD0id3BiZHAtbGlzdGluZy0zODkxIiBjbGFzcz0id3BiZHAtbGlzdGluZy0zODkxIHdwYmRwLWxpc3RpbmcgZXhjZXJwdCB3cGJkcC1leGNlcnB0IHdwYmRwLWxpc3RpbmctZXhjZXJwdCB3cGJkcC1saXN0aW5nLXBsYW4taWQtMSB3cGJkcC1saXN0aW5nLXBsYW4tZnJlZV9saXN0aW5nIHdwYmRwLWxpc3RpbmctY2F0ZWdvcnktaWQtNjkgZXZlbiIgZGF0YS1icmVha3BvaW50cz0neyJtZWRpdW0iOiBbNTYwLDc4MF0sICJsYXJnZSI6IFs3ODAsOTk5OTk5XX0nIGRhdGEtYnJlYWtwb2ludHMtY2xhc3MtcHJlZml4PSJ3cGJkcC1saXN0aW5nLWV4Y2VycHQiPgogICAgICAgICAgICAgICAgCjxkaXYgY2xhc3M9Imxpc3RpbmctZGV0YWlscyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19uYW1lIHdwYmRwLWZpZWxkLXRpdGxlIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRpdGxlICAiID48bGFiZWw+QnVzaW5lc3MgTmFtZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8zODkxL3NvdXRoLW5hdGlvbnMtbmF0aW9uYWxpdGllcy1wZW9wbGVzLXJlZ2lvbmFsLXN0YXRlLWV0aGljcy1hbmQtYW50aS1jb3JydXB0aW9uLWNvbW1pc3Npb24vIiB0YXJnZXQ9Il9zZWxmIiA+JiM4MjIwO1NPVVRIIE5BVElPTlMsIE5BVElPTkFMSVRJRVMgJiMwMzg7IFBFT1BMRVMmIzgyMTc7IFJFR0lPTkFMIFNUQVRFIEVUSElDUyBBTkQgQU5USS1DT1JSVVBUSU9OIENPTU1JU1NJT04mIzgyMjE7PC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZ2VucmUgd3BiZHAtZmllbGQtY2F0ZWdvcnkgd3BiZHAtZmllbGQtdHlwZS1zZWxlY3Qgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY2F0ZWdvcnkgICIgPjxsYWJlbD5CdXNpbmVzcyBHZW5yZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9nb3Zlcm5tZW50LWFnZW5jaWVzLyIgcmVsPSJ0YWciPkdvdmVybm1lbnQgQWdlbmNpZXM8L2E+PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1zaG9ydF9idXNpbmVzc19kZXNjcmlwdGlvbiB3cGJkcC1maWVsZC1leGNlcnB0IHdwYmRwLWZpZWxkLXR5cGUtdGV4dGFyZWEgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tZXhjZXJwdCAgIiA+PGxhYmVsPlNob3J0IEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+SEFXQVNTQSwgRVRISU9QSUE8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWxvbmdfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtY29udGVudCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNvbnRlbnQgICIgPjxsYWJlbD5Mb25nIEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PHA+SEFXQVNTQSwgRVRISU9QSUE8L3A+Cjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfcGhvbmVfbnVtYmVyIHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIFBob25lIE51bWJlcjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPgogMDQ2IDIyMCA3MDY5PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19mYXggd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgRmF4OjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+LDwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfdGFncyB3cGJkcC1maWVsZC10YWdzIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRhZ3MgICIgPjxsYWJlbD5CdXNpbmVzcyBUYWdzOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9nb3Zlcm5tZW50LyIgcmVsPSJ0YWciPkdvdmVybm1lbnQ8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQtYWdlbmNpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBBZ2VuY2llczwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1ib2RpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBCb2RpZXM8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQtZGVwYXJ0bWVudHMvIiByZWw9InRhZyI+R292ZXJubWVudCBEZXBhcnRtZW50czwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1vZmZpY2VzLyIgcmVsPSJ0YWciPkdvdmVybm1lbnQgb2ZmaWNlczwvYT48L3NwYW4+PC9kaXY+ICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwtZmllbGRzIGNmIj48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWFjdGlvbnMgY2YiPgogICAgPGEgY2xhc3M9IndwYmRwLWJ1dHRvbiBidXR0b24gdmlldy1saXN0aW5nIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMzg5MS9zb3V0aC1uYXRpb25zLW5hdGlvbmFsaXRpZXMtcGVvcGxlcy1yZWdpb25hbC1zdGF0ZS1ldGhpY3MtYW5kLWFudGktY29ycnVwdGlvbi1jb21taXNzaW9uLyIgID5WaWV3PC9hPjwvZGl2Pgo8L2Rpdj4KPGRpdiBpZD0id3BiZHAtbGlzdGluZy0zODkwIiBjbGFzcz0id3BiZHAtbGlzdGluZy0zODkwIHdwYmRwLWxpc3RpbmcgZXhjZXJwdCB3cGJkcC1leGNlcnB0IHdwYmRwLWxpc3RpbmctZXhjZXJwdCB3cGJkcC1saXN0aW5nLXBsYW4taWQtMSB3cGJkcC1saXN0aW5nLXBsYW4tZnJlZV9saXN0aW5nIHdwYmRwLWxpc3RpbmctY2F0ZWdvcnktaWQtNjkgb2RkIiBkYXRhLWJyZWFrcG9pbnRzPSd7Im1lZGl1bSI6IFs1NjAsNzgwXSwgImxhcmdlIjogWzc4MCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWxpc3RpbmctZXhjZXJwdCI+CiAgICAgICAgICAgICAgICAKPGRpdiBjbGFzcz0ibGlzdGluZy1kZXRhaWxzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX25hbWUgd3BiZHAtZmllbGQtdGl0bGUgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGl0bGUgICIgPjxsYWJlbD5CdXNpbmVzcyBOYW1lOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzM4OTAvc291dGhlcm4tbmF0aW9ucy1uYXRpb25hbGl0aWVzLXBlb3BsZXMtcmVnaW9uYWwtY291bmNpbC1vZi1uYXRpb25hbGl0aWVzLyIgdGFyZ2V0PSJfc2VsZiIgPiYjODIyMDtTT1VUSEVSTiBOQVRJT05TLCBOQVRJT05BTElUSUVTICYjMDM4OyBQRU9QTEVTIFJFR0lPTkFMIENPVU5DSUwgT0YgTkFUSU9OQUxJVElFUyYjODIyMTs8L2E+PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19nZW5yZSB3cGJkcC1maWVsZC1jYXRlZ29yeSB3cGJkcC1maWVsZC10eXBlLXNlbGVjdCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jYXRlZ29yeSAgIiA+PGxhYmVsPkJ1c2luZXNzIEdlbnJlOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX2NhdGVnb3J5L2dvdmVybm1lbnQtYWdlbmNpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBBZ2VuY2llczwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5IQVdBU1NBLCBFVEhJT1BJQTwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtbG9uZ19idXNpbmVzc19kZXNjcmlwdGlvbiB3cGJkcC1maWVsZC1jb250ZW50IHdwYmRwLWZpZWxkLXR5cGUtdGV4dGFyZWEgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY29udGVudCAgIiA+PGxhYmVsPkxvbmcgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48cD5IQVdBU1NBLCBFVEhJT1BJQTwvcD4KPC9zcGFuPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19waG9uZV9udW1iZXIgd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgUGhvbmUgTnVtYmVyOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+CiAwNDYgMjIwIDg2NTI8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2ZheCB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBGYXg6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4sPC9zcGFuPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc190YWdzIHdwYmRwLWZpZWxkLXRhZ3Mgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGFncyAgIiA+PGxhYmVsPkJ1c2luZXNzIFRhZ3M6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQvIiByZWw9InRhZyI+R292ZXJubWVudDwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1hZ2VuY2llcy8iIHJlbD0idGFnIj5Hb3Zlcm5tZW50IEFnZW5jaWVzPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9nb3Zlcm5tZW50LWJvZGllcy8iIHJlbD0idGFnIj5Hb3Zlcm5tZW50IEJvZGllczwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1kZXBhcnRtZW50cy8iIHJlbD0idGFnIj5Hb3Zlcm5tZW50IERlcGFydG1lbnRzPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9nb3Zlcm5tZW50LW9mZmljZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBvZmZpY2VzPC9hPjwvc3Bhbj48L2Rpdj4gICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNvY2lhbC1maWVsZHMgY2YiPjwvZGl2PgogICAgPC9kaXY+CiAgICAKICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctYWN0aW9ucyBjZiI+CiAgICA8YSBjbGFzcz0id3BiZHAtYnV0dG9uIGJ1dHRvbiB2aWV3LWxpc3RpbmciIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8zODkwL3NvdXRoZXJuLW5hdGlvbnMtbmF0aW9uYWxpdGllcy1wZW9wbGVzLXJlZ2lvbmFsLWNvdW5jaWwtb2YtbmF0aW9uYWxpdGllcy8iICA+VmlldzwvYT48L2Rpdj4KPC9kaXY+CjxkaXYgaWQ9IndwYmRwLWxpc3RpbmctMzMyNSIgY2xhc3M9IndwYmRwLWxpc3RpbmctMzMyNSB3cGJkcC1saXN0aW5nIGV4Y2VycHQgd3BiZHAtZXhjZXJwdCB3cGJkcC1saXN0aW5nLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1wbGFuLWlkLTEgd3BiZHAtbGlzdGluZy1wbGFuLWZyZWVfbGlzdGluZyB3cGJkcC1saXN0aW5nLWNhdGVnb3J5LWlkLTY5IGV2ZW4iIGRhdGEtYnJlYWtwb2ludHM9J3sibWVkaXVtIjogWzU2MCw3ODBdLCAibGFyZ2UiOiBbNzgwLDk5OTk5OV19JyBkYXRhLWJyZWFrcG9pbnRzLWNsYXNzLXByZWZpeD0id3BiZHAtbGlzdGluZy1leGNlcnB0Ij4KICAgICAgICAgICAgICAgIAo8ZGl2IGNsYXNzPSJsaXN0aW5nLWRldGFpbHMiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfbmFtZSB3cGJkcC1maWVsZC10aXRsZSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi10aXRsZSAgIiA+PGxhYmVsPkJ1c2luZXNzIE5hbWU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMzMyNS90aGUtZXRoaW9waWFuLWZvb2QtbWVkaWNpbmVzLWFuZC1oZWFsdGgtY2FyZS1hZG1pbmlzdHJhdGlvbi1hbmQtY29udHJvbC1hdXRob3JpdHktZWZtaGFjYS02LyIgdGFyZ2V0PSJfc2VsZiIgPiYjODIyMDtUaGUgRXRoaW9waWFuIEZvb2QsIE1lZGljaW5lcyBhbmQgSGVhbHRoIENhcmUgQWRtaW5pc3RyYXRpb24gYW5kIENvbnRyb2wgQXV0aG9yaXR5IChFRk1IQUNBKSYjODIyMTs8L2E+PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19nZW5yZSB3cGJkcC1maWVsZC1jYXRlZ29yeSB3cGJkcC1maWVsZC10eXBlLXNlbGVjdCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jYXRlZ29yeSAgIiA+PGxhYmVsPkJ1c2luZXNzIEdlbnJlOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX2NhdGVnb3J5L2dvdmVybm1lbnQtYWdlbmNpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBBZ2VuY2llczwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5BRERJUyBBQkFCQSwgRVRISU9QSUEsUC5PLkJveCA1NjgxPC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1sb25nX2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWNvbnRlbnQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jb250ZW50ICAiID48bGFiZWw+TG9uZyBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxwPkFERElTIEFCQUJBLCBFVEhJT1BJQSxQLk8uQm94IDU2ODE8L3A+Cjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfcGhvbmVfbnVtYmVyIHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIFBob25lIE51bWJlcjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPgogMDExIDU1MiA0MTIyPC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19mYXggd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgRmF4OjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+LDwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfdGFncyB3cGJkcC1maWVsZC10YWdzIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRhZ3MgICIgPjxsYWJlbD5CdXNpbmVzcyBUYWdzOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9nb3Zlcm5tZW50LyIgcmVsPSJ0YWciPkdvdmVybm1lbnQ8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQtYWdlbmNpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBBZ2VuY2llczwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1ib2RpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBCb2RpZXM8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQtZGVwYXJ0bWVudHMvIiByZWw9InRhZyI+R292ZXJubWVudCBEZXBhcnRtZW50czwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1vZmZpY2VzLyIgcmVsPSJ0YWciPkdvdmVybm1lbnQgb2ZmaWNlczwvYT48L3NwYW4+PC9kaXY+ICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwtZmllbGRzIGNmIj48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWFjdGlvbnMgY2YiPgogICAgPGEgY2xhc3M9IndwYmRwLWJ1dHRvbiBidXR0b24gdmlldy1saXN0aW5nIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMzMyNS90aGUtZXRoaW9waWFuLWZvb2QtbWVkaWNpbmVzLWFuZC1oZWFsdGgtY2FyZS1hZG1pbmlzdHJhdGlvbi1hbmQtY29udHJvbC1hdXRob3JpdHktZWZtaGFjYS02LyIgID5WaWV3PC9hPjwvZGl2Pgo8L2Rpdj4KPGRpdiBpZD0id3BiZHAtbGlzdGluZy0zMzM4IiBjbGFzcz0id3BiZHAtbGlzdGluZy0zMzM4IHdwYmRwLWxpc3RpbmcgZXhjZXJwdCB3cGJkcC1leGNlcnB0IHdwYmRwLWxpc3RpbmctZXhjZXJwdCB3cGJkcC1saXN0aW5nLXBsYW4taWQtMSB3cGJkcC1saXN0aW5nLXBsYW4tZnJlZV9saXN0aW5nIHdwYmRwLWxpc3RpbmctY2F0ZWdvcnktaWQtNjkgb2RkIiBkYXRhLWJyZWFrcG9pbnRzPSd7Im1lZGl1bSI6IFs1NjAsNzgwXSwgImxhcmdlIjogWzc4MCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWxpc3RpbmctZXhjZXJwdCI+CiAgICAgICAgICAgICAgICAKPGRpdiBjbGFzcz0ibGlzdGluZy1kZXRhaWxzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX25hbWUgd3BiZHAtZmllbGQtdGl0bGUgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGl0bGUgICIgPjxsYWJlbD5CdXNpbmVzcyBOYW1lOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzMzMzgvdGhlLXJlZ2lvbmFsLWdvdmVybm1lbnQtb2Ytb3JvbWlhLXdhdGVyLW1pbmVyYWwtYW5kLWVuZXJneS1idXJlYXUtNi8iIHRhcmdldD0iX3NlbGYiID4mIzgyMjA7VGhlIFJlZ2lvbmFsIEdvdmVybm1lbnQgb2YgT3JvbWlhIFdhdGVyLCBNaW5lcmFsLCBhbmQgRW5lcmd5IEJ1cmVhdSYjODIyMTs8L2E+PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19nZW5yZSB3cGJkcC1maWVsZC1jYXRlZ29yeSB3cGJkcC1maWVsZC10eXBlLXNlbGVjdCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jYXRlZ29yeSAgIiA+PGxhYmVsPkJ1c2luZXNzIEdlbnJlOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX2NhdGVnb3J5L2dvdmVybm1lbnQtYWdlbmNpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBBZ2VuY2llczwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5BRERJUyBBQkFCQSwgRVRISU9QSUEsUC5PLkJveCA4NjMwPC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1sb25nX2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWNvbnRlbnQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jb250ZW50ICAiID48bGFiZWw+TG9uZyBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxwPkFERElTIEFCQUJBLCBFVEhJT1BJQSxQLk8uQm94IDg2MzA8L3A+Cjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfcGhvbmVfbnVtYmVyIHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIFBob25lIE51bWJlcjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPgogIjAxMSA1NTEgNjkzOCwgMDExIDU1NCA5MzMzIjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZmF4IHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIEZheDo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPiw8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3RhZ3Mgd3BiZHAtZmllbGQtdGFncyB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi10YWdzICAiID48bGFiZWw+QnVzaW5lc3MgVGFnczo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC8iIHJlbD0idGFnIj5Hb3Zlcm5tZW50PC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9nb3Zlcm5tZW50LWFnZW5jaWVzLyIgcmVsPSJ0YWciPkdvdmVybm1lbnQgQWdlbmNpZXM8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQtYm9kaWVzLyIgcmVsPSJ0YWciPkdvdmVybm1lbnQgQm9kaWVzPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9nb3Zlcm5tZW50LWRlcGFydG1lbnRzLyIgcmVsPSJ0YWciPkdvdmVybm1lbnQgRGVwYXJ0bWVudHM8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQtb2ZmaWNlcy8iIHJlbD0idGFnIj5Hb3Zlcm5tZW50IG9mZmljZXM8L2E+PC9zcGFuPjwvZGl2PiAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic29jaWFsLWZpZWxkcyBjZiI+PC9kaXY+CiAgICA8L2Rpdj4KICAgIAogICAgPGRpdiBjbGFzcz0ibGlzdGluZy1hY3Rpb25zIGNmIj4KICAgIDxhIGNsYXNzPSJ3cGJkcC1idXR0b24gYnV0dG9uIHZpZXctbGlzdGluZyIgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzMzMzgvdGhlLXJlZ2lvbmFsLWdvdmVybm1lbnQtb2Ytb3JvbWlhLXdhdGVyLW1pbmVyYWwtYW5kLWVuZXJneS1idXJlYXUtNi8iICA+VmlldzwvYT48L2Rpdj4KPC9kaXY+CjxkaXYgaWQ9IndwYmRwLWxpc3RpbmctNzgwIiBjbGFzcz0id3BiZHAtbGlzdGluZy03ODAgd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02MyBldmVuIiBkYXRhLWJyZWFrcG9pbnRzPSd7Im1lZGl1bSI6IFs1NjAsNzgwXSwgImxhcmdlIjogWzc4MCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWxpc3RpbmctZXhjZXJwdCI+CiAgICAgICAgICAgICAgICAKPGRpdiBjbGFzcz0ibGlzdGluZy1kZXRhaWxzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX25hbWUgd3BiZHAtZmllbGQtdGl0bGUgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGl0bGUgICIgPjxsYWJlbD5CdXNpbmVzcyBOYW1lOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzc4MC8yLXNldmVuLWNhci1kZWNvci1idWlsZGluZy1tYXRlcmlhbHMvIiB0YXJnZXQ9Il9zZWxmIiA+Mi1TRVZFTiBDQVIgREVDT1IgJiMwMzg7IEJVSUxESU5HIE1BVEVSSUFMUzwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2dlbnJlIHdwYmRwLWZpZWxkLWNhdGVnb3J5IHdwYmRwLWZpZWxkLXR5cGUtc2VsZWN0IHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNhdGVnb3J5ICAiID48bGFiZWw+QnVzaW5lc3MgR2VucmU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfY2F0ZWdvcnkvYnVpbGRpbmctY29uc3RydWN0aW9uLW1ldGVyaWFscy8iIHJlbD0idGFnIj5CdWlsZGluZyAvIENvbnN0cnVjdGlvbiBNZXRlcmlhbHM8L2E+PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1zaG9ydF9idXNpbmVzc19kZXNjcmlwdGlvbiB3cGJkcC1maWVsZC1leGNlcnB0IHdwYmRwLWZpZWxkLXR5cGUtdGV4dGFyZWEgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tZXhjZXJwdCAgIiA+PGxhYmVsPlNob3J0IEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+QURESVMgQUJBQkEsIEVUSElPUElBPC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1sb25nX2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWNvbnRlbnQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jb250ZW50ICAiID48bGFiZWw+TG9uZyBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxwPkFERElTIEFCQUJBLCBFVEhJT1BJQTwvcD4KPC9zcGFuPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19waG9uZV9udW1iZXIgd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgUGhvbmUgTnVtYmVyOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+IDAxMSAxNTUgMjA4ODwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZmF4IHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIEZheDo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPiw8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3RhZ3Mgd3BiZHAtZmllbGQtdGFncyB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi10YWdzICAiID48bGFiZWw+QnVzaW5lc3MgVGFnczo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvYnVpbGRpbmctbWF0ZXJpYWxzY29uc3RydWN0aW9uLW1ldGVyaWFscy8iIHJlbD0idGFnIj5CdWlsZGluZyBNYXRlcmlhbHMsQ29uc3RydWN0aW9uIE1ldGVyaWFsczwvYT48L3NwYW4+PC9kaXY+ICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwtZmllbGRzIGNmIj48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWFjdGlvbnMgY2YiPgogICAgPGEgY2xhc3M9IndwYmRwLWJ1dHRvbiBidXR0b24gdmlldy1saXN0aW5nIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvNzgwLzItc2V2ZW4tY2FyLWRlY29yLWJ1aWxkaW5nLW1hdGVyaWFscy8iICA+VmlldzwvYT48L2Rpdj4KPC9kaXY+CjxkaXYgaWQ9IndwYmRwLWxpc3RpbmctMjE5OCIgY2xhc3M9IndwYmRwLWxpc3RpbmctMjE5OCB3cGJkcC1saXN0aW5nIGV4Y2VycHQgd3BiZHAtZXhjZXJwdCB3cGJkcC1saXN0aW5nLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1wbGFuLWlkLTEgd3BiZHAtbGlzdGluZy1wbGFuLWZyZWVfbGlzdGluZyB3cGJkcC1saXN0aW5nLWNhdGVnb3J5LWlkLTgyIG9kZCIgZGF0YS1icmVha3BvaW50cz0neyJtZWRpdW0iOiBbNTYwLDc4MF0sICJsYXJnZSI6IFs3ODAsOTk5OTk5XX0nIGRhdGEtYnJlYWtwb2ludHMtY2xhc3MtcHJlZml4PSJ3cGJkcC1saXN0aW5nLWV4Y2VycHQiPgogICAgICAgICAgICAgICAgCjxkaXYgY2xhc3M9Imxpc3RpbmctZGV0YWlscyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19uYW1lIHdwYmRwLWZpZWxkLXRpdGxlIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRpdGxlICAiID48bGFiZWw+QnVzaW5lc3MgTmFtZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8yMTk4LzIwMDAtaGFiZXNoYS1jdWx0dXJhbC1yZXN0YXVyYW50LyIgdGFyZ2V0PSJfc2VsZiIgPjIwMDAgSGFiZXNoYSBDdWx0dXJhbCBSZXN0YXVyYW50PC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZ2VucmUgd3BiZHAtZmllbGQtY2F0ZWdvcnkgd3BiZHAtZmllbGQtdHlwZS1zZWxlY3Qgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY2F0ZWdvcnkgICIgPjxsYWJlbD5CdXNpbmVzcyBHZW5yZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9yZXN0YXVyYW50LyIgcmVsPSJ0YWciPlJlc3RhdXJhbnQ8L2E+PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1zaG9ydF9idXNpbmVzc19kZXNjcmlwdGlvbiB3cGJkcC1maWVsZC1leGNlcnB0IHdwYmRwLWZpZWxkLXR5cGUtdGV4dGFyZWEgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tZXhjZXJwdCAgIiA+PGxhYmVsPlNob3J0IEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+QWRkaXMgQWJhYmEsIEV0aGlvcGlhPC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1sb25nX2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWNvbnRlbnQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jb250ZW50ICAiID48bGFiZWw+TG9uZyBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxwPkFkZGlzIEFiYWJhLCBFdGhpb3BpYTwvcD4KPC9zcGFuPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19waG9uZV9udW1iZXIgd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgUGhvbmUgTnVtYmVyOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+ICsyNTEtMTE2LTE4MjI1MyAvIDU4PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19mYXggd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgRmF4OjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+LDwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfdGFncyB3cGJkcC1maWVsZC10YWdzIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRhZ3MgICIgPjxsYWJlbD5CdXNpbmVzcyBUYWdzOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9jb2ZmZXMtc2hvcC8iIHJlbD0idGFnIj5Db2ZmZXMgU2hvcDwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvbG91bmdlLyIgcmVsPSJ0YWciPkxvdW5nZTwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvcmVzdHVyYW50cy8iIHJlbD0idGFnIj5SZXN0dXJhbnRzPC9hPjwvc3Bhbj48L2Rpdj4gICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNvY2lhbC1maWVsZHMgY2YiPjwvZGl2PgogICAgPC9kaXY+CiAgICAKICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctYWN0aW9ucyBjZiI+CiAgICA8YSBjbGFzcz0id3BiZHAtYnV0dG9uIGJ1dHRvbiB2aWV3LWxpc3RpbmciIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8yMTk4LzIwMDAtaGFiZXNoYS1jdWx0dXJhbC1yZXN0YXVyYW50LyIgID5WaWV3PC9hPjwvZGl2Pgo8L2Rpdj4KPGRpdiBpZD0id3BiZHAtbGlzdGluZy0yMjc1IiBjbGFzcz0id3BiZHAtbGlzdGluZy0yMjc1IHdwYmRwLWxpc3RpbmcgZXhjZXJwdCB3cGJkcC1leGNlcnB0IHdwYmRwLWxpc3RpbmctZXhjZXJwdCB3cGJkcC1saXN0aW5nLXBsYW4taWQtMSB3cGJkcC1saXN0aW5nLXBsYW4tZnJlZV9saXN0aW5nIHdwYmRwLWxpc3RpbmctY2F0ZWdvcnktaWQtODIgZXZlbiIgZGF0YS1icmVha3BvaW50cz0neyJtZWRpdW0iOiBbNTYwLDc4MF0sICJsYXJnZSI6IFs3ODAsOTk5OTk5XX0nIGRhdGEtYnJlYWtwb2ludHMtY2xhc3MtcHJlZml4PSJ3cGJkcC1saXN0aW5nLWV4Y2VycHQiPgogICAgICAgICAgICAgICAgCjxkaXYgY2xhc3M9Imxpc3RpbmctZGV0YWlscyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19uYW1lIHdwYmRwLWZpZWxkLXRpdGxlIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRpdGxlICAiID48bGFiZWw+QnVzaW5lc3MgTmFtZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8yMjc1LzIwMDAtaGFiZXNoYS1jdWx0dXJhbC1yZXN0YXVyYW50LTIvIiB0YXJnZXQ9Il9zZWxmIiA+MjAwMCBIYWJlc2hhIEN1bHR1cmFsIFJlc3RhdXJhbnQ8L2E+PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19nZW5yZSB3cGJkcC1maWVsZC1jYXRlZ29yeSB3cGJkcC1maWVsZC10eXBlLXNlbGVjdCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jYXRlZ29yeSAgIiA+PGxhYmVsPkJ1c2luZXNzIEdlbnJlOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX2NhdGVnb3J5L3Jlc3RhdXJhbnQvIiByZWw9InRhZyI+UmVzdGF1cmFudDwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5BZGRpcyBBYmFiYSwgRXRoaW9waWE8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWxvbmdfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtY29udGVudCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNvbnRlbnQgICIgPjxsYWJlbD5Mb25nIEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PHA+QWRkaXMgQWJhYmEsIEV0aGlvcGlhPC9wPgo8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3Bob25lX251bWJlciB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBQaG9uZSBOdW1iZXI6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4gKzI1MS0xMTYtMTgyMjUzIC8gNTg8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2ZheCB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBGYXg6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4sPC9zcGFuPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc190YWdzIHdwYmRwLWZpZWxkLXRhZ3Mgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGFncyAgIiA+PGxhYmVsPkJ1c2luZXNzIFRhZ3M6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2NvZmZlcy1zaG9wLyIgcmVsPSJ0YWciPkNvZmZlcyBTaG9wPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9sb3VuZ2UvIiByZWw9InRhZyI+TG91bmdlPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9yZXN0dXJhbnRzLyIgcmVsPSJ0YWciPlJlc3R1cmFudHM8L2E+PC9zcGFuPjwvZGl2PiAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic29jaWFsLWZpZWxkcyBjZiI+PC9kaXY+CiAgICA8L2Rpdj4KICAgIAogICAgPGRpdiBjbGFzcz0ibGlzdGluZy1hY3Rpb25zIGNmIj4KICAgIDxhIGNsYXNzPSJ3cGJkcC1idXR0b24gYnV0dG9uIHZpZXctbGlzdGluZyIgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzIyNzUvMjAwMC1oYWJlc2hhLWN1bHR1cmFsLXJlc3RhdXJhbnQtMi8iICA+VmlldzwvYT48L2Rpdj4KPC9kaXY+CjxkaXYgaWQ9IndwYmRwLWxpc3RpbmctNzgxIiBjbGFzcz0id3BiZHAtbGlzdGluZy03ODEgd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02MyBvZGQiIGRhdGEtYnJlYWtwb2ludHM9J3sibWVkaXVtIjogWzU2MCw3ODBdLCAibGFyZ2UiOiBbNzgwLDk5OTk5OV19JyBkYXRhLWJyZWFrcG9pbnRzLWNsYXNzLXByZWZpeD0id3BiZHAtbGlzdGluZy1leGNlcnB0Ij4KICAgICAgICAgICAgICAgIAo8ZGl2IGNsYXNzPSJsaXN0aW5nLWRldGFpbHMiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfbmFtZSB3cGJkcC1maWVsZC10aXRsZSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi10aXRsZSAgIiA+PGxhYmVsPkJ1c2luZXNzIE5hbWU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvNzgxLzIyLWJ1aWxkaW5nLW1hdGVyaWFscy1zaG9wLyIgdGFyZ2V0PSJfc2VsZiIgPjIyIEJVSUxESU5HIE1BVEVSSUFMUyBTSE9QPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZ2VucmUgd3BiZHAtZmllbGQtY2F0ZWdvcnkgd3BiZHAtZmllbGQtdHlwZS1zZWxlY3Qgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY2F0ZWdvcnkgICIgPjxsYWJlbD5CdXNpbmVzcyBHZW5yZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9idWlsZGluZy1jb25zdHJ1Y3Rpb24tbWV0ZXJpYWxzLyIgcmVsPSJ0YWciPkJ1aWxkaW5nIC8gQ29uc3RydWN0aW9uIE1ldGVyaWFsczwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5BRERJUyBBQkFCQSwgRVRISU9QSUE8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWxvbmdfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtY29udGVudCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNvbnRlbnQgICIgPjxsYWJlbD5Mb25nIEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PHA+QURESVMgQUJBQkEsIEVUSElPUElBPC9wPgo8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3Bob25lX251bWJlciB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBQaG9uZSBOdW1iZXI6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4gMDExIDY2MSA0OTI2PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19mYXggd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgRmF4OjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+LDwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfdGFncyB3cGJkcC1maWVsZC10YWdzIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRhZ3MgICIgPjxsYWJlbD5CdXNpbmVzcyBUYWdzOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9idWlsZGluZy1tYXRlcmlhbHNjb25zdHJ1Y3Rpb24tbWV0ZXJpYWxzLyIgcmVsPSJ0YWciPkJ1aWxkaW5nIE1hdGVyaWFscyxDb25zdHJ1Y3Rpb24gTWV0ZXJpYWxzPC9hPjwvc3Bhbj48L2Rpdj4gICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNvY2lhbC1maWVsZHMgY2YiPjwvZGl2PgogICAgPC9kaXY+CiAgICAKICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctYWN0aW9ucyBjZiI+CiAgICA8YSBjbGFzcz0id3BiZHAtYnV0dG9uIGJ1dHRvbiB2aWV3LWxpc3RpbmciIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy83ODEvMjItYnVpbGRpbmctbWF0ZXJpYWxzLXNob3AvIiAgPlZpZXc8L2E+PC9kaXY+CjwvZGl2Pgo8ZGl2IGlkPSJ3cGJkcC1saXN0aW5nLTE1MTkiIGNsYXNzPSJ3cGJkcC1saXN0aW5nLTE1MTkgd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02NSBldmVuIiBkYXRhLWJyZWFrcG9pbnRzPSd7Im1lZGl1bSI6IFs1NjAsNzgwXSwgImxhcmdlIjogWzc4MCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWxpc3RpbmctZXhjZXJwdCI+CiAgICAgICAgICAgICAgICAKPGRpdiBjbGFzcz0ibGlzdGluZy1kZXRhaWxzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX25hbWUgd3BiZHAtZmllbGQtdGl0bGUgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGl0bGUgICIgPjxsYWJlbD5CdXNpbmVzcyBOYW1lOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzE1MTkvMmEtM2ItYmV0ZS1hYnJlaGFtLWhvdGVsLyIgdGFyZ2V0PSJfc2VsZiIgPjJBIDNCIEJFVEUgQUJSRUhBTSBIT1RFTDwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2dlbnJlIHdwYmRwLWZpZWxkLWNhdGVnb3J5IHdwYmRwLWZpZWxkLXR5cGUtc2VsZWN0IHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNhdGVnb3J5ICAiID48bGFiZWw+QnVzaW5lc3MgR2VucmU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfY2F0ZWdvcnkvaG90ZWxzLyIgcmVsPSJ0YWciPkhvdGVsczwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5BRERJUyBBQkFCQSwgRVRISU9QSUE8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWxvbmdfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtY29udGVudCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNvbnRlbnQgICIgPjxsYWJlbD5Mb25nIEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PHA+QURESVMgQUJBQkEsIEVUSElPUElBPC9wPgo8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3Bob25lX251bWJlciB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBQaG9uZSBOdW1iZXI6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4KIDAxMSA2NjIgMjI0NTwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZmF4IHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIEZheDo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPiAwMTEgNjYzIDYwNDg8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3RhZ3Mgd3BiZHAtZmllbGQtdGFncyB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi10YWdzICAiID48bGFiZWw+QnVzaW5lc3MgVGFnczo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvaG90ZWwvIiByZWw9InRhZyI+SG90ZWw8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2hvdGVscy8iIHJlbD0idGFnIj5Ib3RlbHM8L2E+PC9zcGFuPjwvZGl2PiAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic29jaWFsLWZpZWxkcyBjZiI+PC9kaXY+CiAgICA8L2Rpdj4KICAgIAogICAgPGRpdiBjbGFzcz0ibGlzdGluZy1hY3Rpb25zIGNmIj4KICAgIDxhIGNsYXNzPSJ3cGJkcC1idXR0b24gYnV0dG9uIHZpZXctbGlzdGluZyIgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzE1MTkvMmEtM2ItYmV0ZS1hYnJlaGFtLWhvdGVsLyIgID5WaWV3PC9hPjwvZGl2Pgo8L2Rpdj4KPGRpdiBpZD0id3BiZHAtbGlzdGluZy0xNTEzIiBjbGFzcz0id3BiZHAtbGlzdGluZy0xNTEzIHdwYmRwLWxpc3RpbmcgZXhjZXJwdCB3cGJkcC1leGNlcnB0IHdwYmRwLWxpc3RpbmctZXhjZXJwdCB3cGJkcC1saXN0aW5nLXBsYW4taWQtMSB3cGJkcC1saXN0aW5nLXBsYW4tZnJlZV9saXN0aW5nIHdwYmRwLWxpc3RpbmctY2F0ZWdvcnktaWQtNjUgb2RkIiBkYXRhLWJyZWFrcG9pbnRzPSd7Im1lZGl1bSI6IFs1NjAsNzgwXSwgImxhcmdlIjogWzc4MCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWxpc3RpbmctZXhjZXJwdCI+CiAgICAgICAgICAgICAgICAKPGRpdiBjbGFzcz0ibGlzdGluZy1kZXRhaWxzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX25hbWUgd3BiZHAtZmllbGQtdGl0bGUgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGl0bGUgICIgPjxsYWJlbD5CdXNpbmVzcyBOYW1lOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzE1MTMvNDN0aC1ob3RlbC8iIHRhcmdldD0iX3NlbGYiID40M1RIIEhPVEVMPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZ2VucmUgd3BiZHAtZmllbGQtY2F0ZWdvcnkgd3BiZHAtZmllbGQtdHlwZS1zZWxlY3Qgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY2F0ZWdvcnkgICIgPjxsYWJlbD5CdXNpbmVzcyBHZW5yZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9ob3RlbHMvIiByZWw9InRhZyI+SG90ZWxzPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtc2hvcnRfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtZXhjZXJwdCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWV4Y2VycHQgICIgPjxsYWJlbD5TaG9ydCBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPkdBTUJFTExBLCBFVEhJT1BJQTwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtbG9uZ19idXNpbmVzc19kZXNjcmlwdGlvbiB3cGJkcC1maWVsZC1jb250ZW50IHdwYmRwLWZpZWxkLXR5cGUtdGV4dGFyZWEgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY29udGVudCAgIiA+PGxhYmVsPkxvbmcgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48cD5HQU1CRUxMQSwgRVRISU9QSUE8L3A+Cjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfcGhvbmVfbnVtYmVyIHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIFBob25lIE51bWJlcjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPiAwOTEgMjQ2IDUwOTk8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2ZheCB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBGYXg6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4sPC9zcGFuPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc190YWdzIHdwYmRwLWZpZWxkLXRhZ3Mgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGFncyAgIiA+PGxhYmVsPkJ1c2luZXNzIFRhZ3M6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2hvdGVsLyIgcmVsPSJ0YWciPkhvdGVsPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9ob3RlbHMvIiByZWw9InRhZyI+SG90ZWxzPC9hPjwvc3Bhbj48L2Rpdj4gICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNvY2lhbC1maWVsZHMgY2YiPjwvZGl2PgogICAgPC9kaXY+CiAgICAKICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctYWN0aW9ucyBjZiI+CiAgICA8YSBjbGFzcz0id3BiZHAtYnV0dG9uIGJ1dHRvbiB2aWV3LWxpc3RpbmciIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8xNTEzLzQzdGgtaG90ZWwvIiAgPlZpZXc8L2E+PC9kaXY+CjwvZGl2Pgo8ZGl2IGlkPSJ3cGJkcC1saXN0aW5nLTE1MTQiIGNsYXNzPSJ3cGJkcC1saXN0aW5nLTE1MTQgd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02NSBldmVuIiBkYXRhLWJyZWFrcG9pbnRzPSd7Im1lZGl1bSI6IFs1NjAsNzgwXSwgImxhcmdlIjogWzc4MCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWxpc3RpbmctZXhjZXJwdCI+CiAgICAgICAgICAgICAgICAKPGRpdiBjbGFzcz0ibGlzdGluZy1kZXRhaWxzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX25hbWUgd3BiZHAtZmllbGQtdGl0bGUgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGl0bGUgICIgPjxsYWJlbD5CdXNpbmVzcyBOYW1lOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzE1MTQvNy1kYXlzLTEyLWhvdXJzLWNhZmUtcmVzdGF1cmFudC8iIHRhcmdldD0iX3NlbGYiID43IERBWVMgMTIgSE9VUlMgQ0FGRSAmIzAzODsgUkVTVEFVUkFOVDwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2dlbnJlIHdwYmRwLWZpZWxkLWNhdGVnb3J5IHdwYmRwLWZpZWxkLXR5cGUtc2VsZWN0IHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNhdGVnb3J5ICAiID48bGFiZWw+QnVzaW5lc3MgR2VucmU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfY2F0ZWdvcnkvaG90ZWxzLyIgcmVsPSJ0YWciPkhvdGVsczwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5BRERJUyBBQkFCQSwgRVRISU9QSUE8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWxvbmdfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtY29udGVudCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNvbnRlbnQgICIgPjxsYWJlbD5Mb25nIEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PHA+QURESVMgQUJBQkEsIEVUSElPUElBPC9wPgo8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3Bob25lX251bWJlciB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBQaG9uZSBOdW1iZXI6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4gMDExIDQ0MCAxNjA0PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19mYXggd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgRmF4OjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+LDwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfdGFncyB3cGJkcC1maWVsZC10YWdzIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRhZ3MgICIgPjxsYWJlbD5CdXNpbmVzcyBUYWdzOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9ob3RlbC8iIHJlbD0idGFnIj5Ib3RlbDwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvaG90ZWxzLyIgcmVsPSJ0YWciPkhvdGVsczwvYT48L3NwYW4+PC9kaXY+ICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwtZmllbGRzIGNmIj48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWFjdGlvbnMgY2YiPgogICAgPGEgY2xhc3M9IndwYmRwLWJ1dHRvbiBidXR0b24gdmlldy1saXN0aW5nIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMTUxNC83LWRheXMtMTItaG91cnMtY2FmZS1yZXN0YXVyYW50LyIgID5WaWV3PC9hPjwvZGl2Pgo8L2Rpdj4KPGRpdiBpZD0id3BiZHAtbGlzdGluZy0xNTE1IiBjbGFzcz0id3BiZHAtbGlzdGluZy0xNTE1IHdwYmRwLWxpc3RpbmcgZXhjZXJwdCB3cGJkcC1leGNlcnB0IHdwYmRwLWxpc3RpbmctZXhjZXJwdCB3cGJkcC1saXN0aW5nLXBsYW4taWQtMSB3cGJkcC1saXN0aW5nLXBsYW4tZnJlZV9saXN0aW5nIHdwYmRwLWxpc3RpbmctY2F0ZWdvcnktaWQtNjUgb2RkIiBkYXRhLWJyZWFrcG9pbnRzPSd7Im1lZGl1bSI6IFs1NjAsNzgwXSwgImxhcmdlIjogWzc4MCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWxpc3RpbmctZXhjZXJwdCI+CiAgICAgICAgICAgICAgICAKPGRpdiBjbGFzcz0ibGlzdGluZy1kZXRhaWxzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX25hbWUgd3BiZHAtZmllbGQtdGl0bGUgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGl0bGUgICIgPjxsYWJlbD5CdXNpbmVzcyBOYW1lOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzE1MTUvNy1lLWhvdGVsLyIgdGFyZ2V0PSJfc2VsZiIgPjcgRSBIT1RFTDwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2dlbnJlIHdwYmRwLWZpZWxkLWNhdGVnb3J5IHdwYmRwLWZpZWxkLXR5cGUtc2VsZWN0IHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNhdGVnb3J5ICAiID48bGFiZWw+QnVzaW5lc3MgR2VucmU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfY2F0ZWdvcnkvaG90ZWxzLyIgcmVsPSJ0YWciPkhvdGVsczwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5BRERJUyBBQkFCQSwgRVRISU9QSUE8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWxvbmdfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtY29udGVudCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNvbnRlbnQgICIgPjxsYWJlbD5Mb25nIEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PHA+QURESVMgQUJBQkEsIEVUSElPUElBPC9wPgo8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3Bob25lX251bWJlciB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBQaG9uZSBOdW1iZXI6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4gMDExIDQzMyA5ODg4PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19mYXggd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgRmF4OjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+LDwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfdGFncyB3cGJkcC1maWVsZC10YWdzIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRhZ3MgICIgPjxsYWJlbD5CdXNpbmVzcyBUYWdzOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9ob3RlbC8iIHJlbD0idGFnIj5Ib3RlbDwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvaG90ZWxzLyIgcmVsPSJ0YWciPkhvdGVsczwvYT48L3NwYW4+PC9kaXY+ICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwtZmllbGRzIGNmIj48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWFjdGlvbnMgY2YiPgogICAgPGEgY2xhc3M9IndwYmRwLWJ1dHRvbiBidXR0b24gdmlldy1saXN0aW5nIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMTUxNS83LWUtaG90ZWwvIiAgPlZpZXc8L2E+PC9kaXY+CjwvZGl2Pgo8ZGl2IGlkPSJ3cGJkcC1saXN0aW5nLTE1MTYiIGNsYXNzPSJ3cGJkcC1saXN0aW5nLTE1MTYgd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02NSBldmVuIiBkYXRhLWJyZWFrcG9pbnRzPSd7Im1lZGl1bSI6IFs1NjAsNzgwXSwgImxhcmdlIjogWzc4MCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWxpc3RpbmctZXhjZXJwdCI+CiAgICAgICAgICAgICAgICAKPGRpdiBjbGFzcz0ibGlzdGluZy1kZXRhaWxzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX25hbWUgd3BiZHAtZmllbGQtdGl0bGUgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGl0bGUgICIgPjxsYWJlbD5CdXNpbmVzcyBOYW1lOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzE1MTYvNy11cC1ob3RlbC8iIHRhcmdldD0iX3NlbGYiID43IFVQIEhPVEVMPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZ2VucmUgd3BiZHAtZmllbGQtY2F0ZWdvcnkgd3BiZHAtZmllbGQtdHlwZS1zZWxlY3Qgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY2F0ZWdvcnkgICIgPjxsYWJlbD5CdXNpbmVzcyBHZW5yZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9ob3RlbHMvIiByZWw9InRhZyI+SG90ZWxzPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtc2hvcnRfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtZXhjZXJwdCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWV4Y2VycHQgICIgPjxsYWJlbD5TaG9ydCBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPkFERElTIEFCQUJBLCBFVEhJT1BJQTwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtbG9uZ19idXNpbmVzc19kZXNjcmlwdGlvbiB3cGJkcC1maWVsZC1jb250ZW50IHdwYmRwLWZpZWxkLXR5cGUtdGV4dGFyZWEgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY29udGVudCAgIiA+PGxhYmVsPkxvbmcgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48cD5BRERJUyBBQkFCQSwgRVRISU9QSUE8L3A+Cjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfcGhvbmVfbnVtYmVyIHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIFBob25lIE51bWJlcjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPiAwMTEgNjE4IDA1NDE8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2ZheCB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBGYXg6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4sPC9zcGFuPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc190YWdzIHdwYmRwLWZpZWxkLXRhZ3Mgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGFncyAgIiA+PGxhYmVsPkJ1c2luZXNzIFRhZ3M6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2hvdGVsLyIgcmVsPSJ0YWciPkhvdGVsPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9ob3RlbHMvIiByZWw9InRhZyI+SG90ZWxzPC9hPjwvc3Bhbj48L2Rpdj4gICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNvY2lhbC1maWVsZHMgY2YiPjwvZGl2PgogICAgPC9kaXY+CiAgICAKICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctYWN0aW9ucyBjZiI+CiAgICA8YSBjbGFzcz0id3BiZHAtYnV0dG9uIGJ1dHRvbiB2aWV3LWxpc3RpbmciIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8xNTE2LzctdXAtaG90ZWwvIiAgPlZpZXc8L2E+PC9kaXY+CjwvZGl2Pgo8ZGl2IGlkPSJ3cGJkcC1saXN0aW5nLTEyMjciIGNsYXNzPSJ3cGJkcC1saXN0aW5nLTEyMjcgd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02NSBvZGQiIGRhdGEtYnJlYWtwb2ludHM9J3sibWVkaXVtIjogWzU2MCw3ODBdLCAibGFyZ2UiOiBbNzgwLDk5OTk5OV19JyBkYXRhLWJyZWFrcG9pbnRzLWNsYXNzLXByZWZpeD0id3BiZHAtbGlzdGluZy1leGNlcnB0Ij4KICAgICAgICAgICAgICAgIAo8ZGl2IGNsYXNzPSJsaXN0aW5nLWRldGFpbHMiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfbmFtZSB3cGJkcC1maWVsZC10aXRsZSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi10aXRsZSAgIiA+PGxhYmVsPkJ1c2luZXNzIE5hbWU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMTIyNy9hLW0tcmVzb3J0LWhvdGVsLyIgdGFyZ2V0PSJfc2VsZiIgPkEgJiMwMzg7IE0gUmVzb3J0IEhvdGVsPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZ2VucmUgd3BiZHAtZmllbGQtY2F0ZWdvcnkgd3BiZHAtZmllbGQtdHlwZS1zZWxlY3Qgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY2F0ZWdvcnkgICIgPjxsYWJlbD5CdXNpbmVzcyBHZW5yZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9ob3RlbHMvIiByZWw9InRhZyI+SG90ZWxzPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtc2hvcnRfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtZXhjZXJwdCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWV4Y2VycHQgICIgPjxsYWJlbD5TaG9ydCBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPkhBV0FTU0EsIEVUSElPUElBPC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1sb25nX2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWNvbnRlbnQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jb250ZW50ICAiID48bGFiZWw+TG9uZyBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxwPkhBV0FTU0EsIEVUSElPUElBPC9wPgo8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3Bob25lX251bWJlciB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBQaG9uZSBOdW1iZXI6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4gMDQ2IDIyMSA1MjA4PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19mYXggd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgRmF4OjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+LDwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfdGFncyB3cGJkcC1maWVsZC10YWdzIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRhZ3MgICIgPjxsYWJlbD5CdXNpbmVzcyBUYWdzOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9ob3RlbC8iIHJlbD0idGFnIj5Ib3RlbDwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvaG90ZWxzLyIgcmVsPSJ0YWciPkhvdGVsczwvYT48L3NwYW4+PC9kaXY+ICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwtZmllbGRzIGNmIj48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWFjdGlvbnMgY2YiPgogICAgPGEgY2xhc3M9IndwYmRwLWJ1dHRvbiBidXR0b24gdmlldy1saXN0aW5nIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMTIyNy9hLW0tcmVzb3J0LWhvdGVsLyIgID5WaWV3PC9hPjwvZGl2Pgo8L2Rpdj4KPGRpdiBpZD0id3BiZHAtbGlzdGluZy0xODQ4IiBjbGFzcz0id3BiZHAtbGlzdGluZy0xODQ4IHdwYmRwLWxpc3RpbmcgZXhjZXJwdCB3cGJkcC1leGNlcnB0IHdwYmRwLWxpc3RpbmctZXhjZXJwdCB3cGJkcC1saXN0aW5nLXBsYW4taWQtMSB3cGJkcC1saXN0aW5nLXBsYW4tZnJlZV9saXN0aW5nIHdwYmRwLWxpc3RpbmctY2F0ZWdvcnktaWQtNjYgZXZlbiIgZGF0YS1icmVha3BvaW50cz0neyJtZWRpdW0iOiBbNTYwLDc4MF0sICJsYXJnZSI6IFs3ODAsOTk5OTk5XX0nIGRhdGEtYnJlYWtwb2ludHMtY2xhc3MtcHJlZml4PSJ3cGJkcC1saXN0aW5nLWV4Y2VycHQiPgogICAgICAgICAgICAgICAgCjxkaXYgY2xhc3M9Imxpc3RpbmctZGV0YWlscyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19uYW1lIHdwYmRwLWZpZWxkLXRpdGxlIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRpdGxlICAiID48bGFiZWw+QnVzaW5lc3MgTmFtZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8xODQ4L2EtbWV1Y2NpLXBsYy8iIHRhcmdldD0iX3NlbGYiID5BLiBNRVVDQ0kgUExDPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZ2VucmUgd3BiZHAtZmllbGQtY2F0ZWdvcnkgd3BiZHAtZmllbGQtdHlwZS1zZWxlY3Qgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY2F0ZWdvcnkgICIgPjxsYWJlbD5CdXNpbmVzcyBHZW5yZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9zcGFyZS1wYXJ0cy8iIHJlbD0idGFnIj5TcGFyZSBQYXJ0czwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5BRERJUyBBQkFCQSwgRVRISU9QSUE8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWxvbmdfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtY29udGVudCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNvbnRlbnQgICIgPjxsYWJlbD5Mb25nIEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PHA+QURESVMgQUJBQkEsIEVUSElPUElBPC9wPgo8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3Bob25lX251bWJlciB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBQaG9uZSBOdW1iZXI6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4gMDExIDExMSAxODkyPC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19mYXggd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgRmF4OjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+IDAxMSAxNTUgMzI2MDwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfdGFncyB3cGJkcC1maWVsZC10YWdzIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRhZ3MgICIgPjxsYWJlbD5CdXNpbmVzcyBUYWdzOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9hdXRvLXNwYXJlLXBhcnRzLyIgcmVsPSJ0YWciPkF1dG8gU3BhcmUgUGFydHM8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2Nhci1hdXRvLXNwYXJlLXBhcnRzLyIgcmVsPSJ0YWciPkNhciBBdXRvIFNwYXJlIFBhcnRzPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9zcGFyZS1wYXJ0cy8iIHJlbD0idGFnIj5TcGFyZSBQYXJ0czwvYT48L3NwYW4+PC9kaXY+ICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwtZmllbGRzIGNmIj48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWFjdGlvbnMgY2YiPgogICAgPGEgY2xhc3M9IndwYmRwLWJ1dHRvbiBidXR0b24gdmlldy1saXN0aW5nIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMTg0OC9hLW1ldWNjaS1wbGMvIiAgPlZpZXc8L2E+PC9kaXY+CjwvZGl2Pgo8ZGl2IGlkPSJ3cGJkcC1saXN0aW5nLTM2NTgiIGNsYXNzPSJ3cGJkcC1saXN0aW5nLTM2NTggd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02OSBvZGQiIGRhdGEtYnJlYWtwb2ludHM9J3sibWVkaXVtIjogWzU2MCw3ODBdLCAibGFyZ2UiOiBbNzgwLDk5OTk5OV19JyBkYXRhLWJyZWFrcG9pbnRzLWNsYXNzLXByZWZpeD0id3BiZHAtbGlzdGluZy1leGNlcnB0Ij4KICAgICAgICAgICAgICAgIAo8ZGl2IGNsYXNzPSJsaXN0aW5nLWRldGFpbHMiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfbmFtZSB3cGJkcC1maWVsZC10aXRsZSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi10aXRsZSAgIiA+PGxhYmVsPkJ1c2luZXNzIE5hbWU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMzY1OC9hLWEtdHZldC1hZ2VuY3kvIiB0YXJnZXQ9Il9zZWxmIiA+QS5BIC1UVkVUIEFHRU5DWTwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2dlbnJlIHdwYmRwLWZpZWxkLWNhdGVnb3J5IHdwYmRwLWZpZWxkLXR5cGUtc2VsZWN0IHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNhdGVnb3J5ICAiID48bGFiZWw+QnVzaW5lc3MgR2VucmU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfY2F0ZWdvcnkvZ292ZXJubWVudC1hZ2VuY2llcy8iIHJlbD0idGFnIj5Hb3Zlcm5tZW50IEFnZW5jaWVzPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtc2hvcnRfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtZXhjZXJwdCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWV4Y2VycHQgICIgPjxsYWJlbD5TaG9ydCBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPkFERElTIEFCQUJBLCBFVEhJT1BJQTwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtbG9uZ19idXNpbmVzc19kZXNjcmlwdGlvbiB3cGJkcC1maWVsZC1jb250ZW50IHdwYmRwLWZpZWxkLXR5cGUtdGV4dGFyZWEgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY29udGVudCAgIiA+PGxhYmVsPkxvbmcgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48cD5BRERJUyBBQkFCQSwgRVRISU9QSUE8L3A+Cjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfcGhvbmVfbnVtYmVyIHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIFBob25lIE51bWJlcjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPgogMDExIDE1NiA0MTk1PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19mYXggd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgRmF4OjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+LDwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfdGFncyB3cGJkcC1maWVsZC10YWdzIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRhZ3MgICIgPjxsYWJlbD5CdXNpbmVzcyBUYWdzOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9nb3Zlcm5tZW50LyIgcmVsPSJ0YWciPkdvdmVybm1lbnQ8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQtYWdlbmNpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBBZ2VuY2llczwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1ib2RpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBCb2RpZXM8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQtZGVwYXJ0bWVudHMvIiByZWw9InRhZyI+R292ZXJubWVudCBEZXBhcnRtZW50czwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1vZmZpY2VzLyIgcmVsPSJ0YWciPkdvdmVybm1lbnQgb2ZmaWNlczwvYT48L3NwYW4+PC9kaXY+ICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwtZmllbGRzIGNmIj48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWFjdGlvbnMgY2YiPgogICAgPGEgY2xhc3M9IndwYmRwLWJ1dHRvbiBidXR0b24gdmlldy1saXN0aW5nIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMzY1OC9hLWEtdHZldC1hZ2VuY3kvIiAgPlZpZXc8L2E+PC9kaXY+CjwvZGl2Pgo8ZGl2IGlkPSJ3cGJkcC1saXN0aW5nLTM5MDAiIGNsYXNzPSJ3cGJkcC1saXN0aW5nLTM5MDAgd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02OSBldmVuIiBkYXRhLWJyZWFrcG9pbnRzPSd7Im1lZGl1bSI6IFs1NjAsNzgwXSwgImxhcmdlIjogWzc4MCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWxpc3RpbmctZXhjZXJwdCI+CiAgICAgICAgICAgICAgICAKPGRpdiBjbGFzcz0ibGlzdGluZy1kZXRhaWxzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX25hbWUgd3BiZHAtZmllbGQtdGl0bGUgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGl0bGUgICIgPjxsYWJlbD5CdXNpbmVzcyBOYW1lOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzM5MDAvYS1hLXdhdGVyLXNld2VyYWdlLWF1dGhvcml0eS8iIHRhcmdldD0iX3NlbGYiID5BLkEgV0FURVIgJiMwMzg7IFNFV0VSQUdFIEFVVEhPUklUWTwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2dlbnJlIHdwYmRwLWZpZWxkLWNhdGVnb3J5IHdwYmRwLWZpZWxkLXR5cGUtc2VsZWN0IHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNhdGVnb3J5ICAiID48bGFiZWw+QnVzaW5lc3MgR2VucmU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfY2F0ZWdvcnkvZ292ZXJubWVudC1hZ2VuY2llcy8iIHJlbD0idGFnIj5Hb3Zlcm5tZW50IEFnZW5jaWVzPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtc2hvcnRfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtZXhjZXJwdCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWV4Y2VycHQgICIgPjxsYWJlbD5TaG9ydCBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPkFERElTIEFCQUJBLCBFVEhJT1BJQTwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtbG9uZ19idXNpbmVzc19kZXNjcmlwdGlvbiB3cGJkcC1maWVsZC1jb250ZW50IHdwYmRwLWZpZWxkLXR5cGUtdGV4dGFyZWEgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY29udGVudCAgIiA+PGxhYmVsPkxvbmcgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48cD5BRERJUyBBQkFCQSwgRVRISU9QSUE8L3A+Cjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfcGhvbmVfbnVtYmVyIHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIFBob25lIE51bWJlcjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPiAwOTEgMzA3IDg1NTU8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2ZheCB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBGYXg6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4sPC9zcGFuPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc190YWdzIHdwYmRwLWZpZWxkLXRhZ3Mgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGFncyAgIiA+PGxhYmVsPkJ1c2luZXNzIFRhZ3M6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQvIiByZWw9InRhZyI+R292ZXJubWVudDwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1hZ2VuY2llcy8iIHJlbD0idGFnIj5Hb3Zlcm5tZW50IEFnZW5jaWVzPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9nb3Zlcm5tZW50LWJvZGllcy8iIHJlbD0idGFnIj5Hb3Zlcm5tZW50IEJvZGllczwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1kZXBhcnRtZW50cy8iIHJlbD0idGFnIj5Hb3Zlcm5tZW50IERlcGFydG1lbnRzPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9nb3Zlcm5tZW50LW9mZmljZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBvZmZpY2VzPC9hPjwvc3Bhbj48L2Rpdj4gICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNvY2lhbC1maWVsZHMgY2YiPjwvZGl2PgogICAgPC9kaXY+CiAgICAKICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctYWN0aW9ucyBjZiI+CiAgICA8YSBjbGFzcz0id3BiZHAtYnV0dG9uIGJ1dHRvbiB2aWV3LWxpc3RpbmciIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy8zOTAwL2EtYS13YXRlci1zZXdlcmFnZS1hdXRob3JpdHkvIiAgPlZpZXc8L2E+PC9kaXY+CjwvZGl2Pgo8ZGl2IGlkPSJ3cGJkcC1saXN0aW5nLTM5MDEiIGNsYXNzPSJ3cGJkcC1saXN0aW5nLTM5MDEgd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02OSBvZGQiIGRhdGEtYnJlYWtwb2ludHM9J3sibWVkaXVtIjogWzU2MCw3ODBdLCAibGFyZ2UiOiBbNzgwLDk5OTk5OV19JyBkYXRhLWJyZWFrcG9pbnRzLWNsYXNzLXByZWZpeD0id3BiZHAtbGlzdGluZy1leGNlcnB0Ij4KICAgICAgICAgICAgICAgIAo8ZGl2IGNsYXNzPSJsaXN0aW5nLWRldGFpbHMiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfbmFtZSB3cGJkcC1maWVsZC10aXRsZSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi10aXRsZSAgIiA+PGxhYmVsPkJ1c2luZXNzIE5hbWU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMzkwMS9hLWEteW91dGgtc3BvcnQtY29tbWlzc2lvbi8iIHRhcmdldD0iX3NlbGYiID5BLkEgWU9VVEggJiMwMzg7IFNQT1JUIENPTU1JU1NJT048L2E+PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19nZW5yZSB3cGJkcC1maWVsZC1jYXRlZ29yeSB3cGJkcC1maWVsZC10eXBlLXNlbGVjdCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jYXRlZ29yeSAgIiA+PGxhYmVsPkJ1c2luZXNzIEdlbnJlOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX2NhdGVnb3J5L2dvdmVybm1lbnQtYWdlbmNpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBBZ2VuY2llczwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5BRERJUyBBQkFCQSwgRVRISU9QSUE8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWxvbmdfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtY29udGVudCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNvbnRlbnQgICIgPjxsYWJlbD5Mb25nIEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PHA+QURESVMgQUJBQkEsIEVUSElPUElBPC9wPgo8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3Bob25lX251bWJlciB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBQaG9uZSBOdW1iZXI6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4gMDExIDE1NiAwMjkzPC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19mYXggd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgRmF4OjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+LDwvc3Bhbj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfdGFncyB3cGJkcC1maWVsZC10YWdzIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLXRhZ3MgICIgPjxsYWJlbD5CdXNpbmVzcyBUYWdzOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzL3dwYmRwX3RhZy9nb3Zlcm5tZW50LyIgcmVsPSJ0YWciPkdvdmVybm1lbnQ8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQtYWdlbmNpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBBZ2VuY2llczwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1ib2RpZXMvIiByZWw9InRhZyI+R292ZXJubWVudCBCb2RpZXM8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2dvdmVybm1lbnQtZGVwYXJ0bWVudHMvIiByZWw9InRhZyI+R292ZXJubWVudCBEZXBhcnRtZW50czwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvZ292ZXJubWVudC1vZmZpY2VzLyIgcmVsPSJ0YWciPkdvdmVybm1lbnQgb2ZmaWNlczwvYT48L3NwYW4+PC9kaXY+ICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwtZmllbGRzIGNmIj48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWFjdGlvbnMgY2YiPgogICAgPGEgY2xhc3M9IndwYmRwLWJ1dHRvbiBidXR0b24gdmlldy1saXN0aW5nIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvMzkwMS9hLWEteW91dGgtc3BvcnQtY29tbWlzc2lvbi8iICA+VmlldzwvYT48L2Rpdj4KPC9kaXY+CjxkaXYgaWQ9IndwYmRwLWxpc3RpbmctNzczIiBjbGFzcz0id3BiZHAtbGlzdGluZy03NzMgd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02MyBldmVuIiBkYXRhLWJyZWFrcG9pbnRzPSd7Im1lZGl1bSI6IFs1NjAsNzgwXSwgImxhcmdlIjogWzc4MCw5OTk5OTldfScgZGF0YS1icmVha3BvaW50cy1jbGFzcy1wcmVmaXg9IndwYmRwLWxpc3RpbmctZXhjZXJwdCI+CiAgICAgICAgICAgICAgICAKPGRpdiBjbGFzcz0ibGlzdGluZy1kZXRhaWxzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX25hbWUgd3BiZHAtZmllbGQtdGl0bGUgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGl0bGUgICIgPjxsYWJlbD5CdXNpbmVzcyBOYW1lOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PGEgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzc3My9hLWktYS1wLWwtYy8iIHRhcmdldD0iX3NlbGYiID5BLkkuQSBQLkwuQzwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2dlbnJlIHdwYmRwLWZpZWxkLWNhdGVnb3J5IHdwYmRwLWZpZWxkLXR5cGUtc2VsZWN0IHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNhdGVnb3J5ICAiID48bGFiZWw+QnVzaW5lc3MgR2VucmU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfY2F0ZWdvcnkvYnVpbGRpbmctY29uc3RydWN0aW9uLW1ldGVyaWFscy8iIHJlbD0idGFnIj5CdWlsZGluZyAvIENvbnN0cnVjdGlvbiBNZXRlcmlhbHM8L2E+PC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1zaG9ydF9idXNpbmVzc19kZXNjcmlwdGlvbiB3cGJkcC1maWVsZC1leGNlcnB0IHdwYmRwLWZpZWxkLXR5cGUtdGV4dGFyZWEgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tZXhjZXJwdCAgIiA+PGxhYmVsPlNob3J0IEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+QURESVMgQUJBQkEsIEVUSElPUElBPC9zcGFuPjwvZGl2PiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1sb25nX2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWNvbnRlbnQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1jb250ZW50ICAiID48bGFiZWw+TG9uZyBCdXNpbmVzcyBEZXNjcmlwdGlvbjo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxwPkFERElTIEFCQUJBLCBFVEhJT1BJQTwvcD4KPC9zcGFuPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc19waG9uZV9udW1iZXIgd3BiZHAtZmllbGQtbWV0YSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1tZXRhICAiID48bGFiZWw+QnVzaW5lc3MgUGhvbmUgTnVtYmVyOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+CiAwMTEgMjc1IDUwNTY8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX2ZheCB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBGYXg6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4gMDExIDI3NSA1MDk5PC9zcGFuPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndwYmRwLWZpZWxkLWRpc3BsYXkgd3BiZHAtZmllbGQgd3BiZHAtZmllbGQtdmFsdWUgZmllbGQtZGlzcGxheSBmaWVsZC12YWx1ZSB3cGJkcC1maWVsZC1idXNpbmVzc190YWdzIHdwYmRwLWZpZWxkLXRhZ3Mgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tdGFncyAgIiA+PGxhYmVsPkJ1c2luZXNzIFRhZ3M6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvd3BiZHBfdGFnL2J1aWxkaW5nLW1hdGVyaWFsc2NvbnN0cnVjdGlvbi1tZXRlcmlhbHMvIiByZWw9InRhZyI+QnVpbGRpbmcgTWF0ZXJpYWxzLENvbnN0cnVjdGlvbiBNZXRlcmlhbHM8L2E+PC9zcGFuPjwvZGl2PiAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic29jaWFsLWZpZWxkcyBjZiI+PC9kaXY+CiAgICA8L2Rpdj4KICAgIAogICAgPGRpdiBjbGFzcz0ibGlzdGluZy1hY3Rpb25zIGNmIj4KICAgIDxhIGNsYXNzPSJ3cGJkcC1idXR0b24gYnV0dG9uIHZpZXctbGlzdGluZyIgaHJlZj0iaHR0cDovL3d3dy53ZXJlZ25hLmNvbS9ldGhpb3BpYS1ldGhpb3BpYW4teWVsbG93LXBhZ2VzLzc3My9hLWktYS1wLWwtYy8iICA+VmlldzwvYT48L2Rpdj4KPC9kaXY+CjxkaXYgaWQ9IndwYmRwLWxpc3RpbmctNzc5IiBjbGFzcz0id3BiZHAtbGlzdGluZy03Nzkgd3BiZHAtbGlzdGluZyBleGNlcnB0IHdwYmRwLWV4Y2VycHQgd3BiZHAtbGlzdGluZy1leGNlcnB0IHdwYmRwLWxpc3RpbmctcGxhbi1pZC0xIHdwYmRwLWxpc3RpbmctcGxhbi1mcmVlX2xpc3Rpbmcgd3BiZHAtbGlzdGluZy1jYXRlZ29yeS1pZC02MyBvZGQiIGRhdGEtYnJlYWtwb2ludHM9J3sibWVkaXVtIjogWzU2MCw3ODBdLCAibGFyZ2UiOiBbNzgwLDk5OTk5OV19JyBkYXRhLWJyZWFrcG9pbnRzLWNsYXNzLXByZWZpeD0id3BiZHAtbGlzdGluZy1leGNlcnB0Ij4KICAgICAgICAgICAgICAgIAo8ZGl2IGNsYXNzPSJsaXN0aW5nLWRldGFpbHMiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfbmFtZSB3cGJkcC1maWVsZC10aXRsZSB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi10aXRsZSAgIiA+PGxhYmVsPkJ1c2luZXNzIE5hbWU6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj48YSBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvNzc5L2Etay1lLyIgdGFyZ2V0PSJfc2VsZiIgPkEuSy5FPC9hPjwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZ2VucmUgd3BiZHAtZmllbGQtY2F0ZWdvcnkgd3BiZHAtZmllbGQtdHlwZS1zZWxlY3Qgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tY2F0ZWdvcnkgICIgPjxsYWJlbD5CdXNpbmVzcyBHZW5yZTo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF9jYXRlZ29yeS9idWlsZGluZy1jb25zdHJ1Y3Rpb24tbWV0ZXJpYWxzLyIgcmVsPSJ0YWciPkJ1aWxkaW5nIC8gQ29uc3RydWN0aW9uIE1ldGVyaWFsczwvYT48L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLXNob3J0X2J1c2luZXNzX2Rlc2NyaXB0aW9uIHdwYmRwLWZpZWxkLWV4Y2VycHQgd3BiZHAtZmllbGQtdHlwZS10ZXh0YXJlYSB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi1leGNlcnB0ICAiID48bGFiZWw+U2hvcnQgQnVzaW5lc3MgRGVzY3JpcHRpb246PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj5BRERJUyBBQkFCQSwgRVRISU9QSUE8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWxvbmdfYnVzaW5lc3NfZGVzY3JpcHRpb24gd3BiZHAtZmllbGQtY29udGVudCB3cGJkcC1maWVsZC10eXBlLXRleHRhcmVhIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLWNvbnRlbnQgICIgPjxsYWJlbD5Mb25nIEJ1c2luZXNzIERlc2NyaXB0aW9uOjwvbGFiZWw+IDxzcGFuIGNsYXNzPSJ2YWx1ZSI+PHA+QURESVMgQUJBQkEsIEVUSElPUElBPC9wPgo8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3Bob25lX251bWJlciB3cGJkcC1maWVsZC1tZXRhIHdwYmRwLWZpZWxkLXR5cGUtdGV4dGZpZWxkIHdwYmRwLWZpZWxkLWFzc29jaWF0aW9uLW1ldGEgICIgPjxsYWJlbD5CdXNpbmVzcyBQaG9uZSBOdW1iZXI6PC9sYWJlbD4gPHNwYW4gY2xhc3M9InZhbHVlIj4KIDAxMSAyNzcgOTMxMzwvc3Bhbj48L2Rpdj4gICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3cGJkcC1maWVsZC1kaXNwbGF5IHdwYmRwLWZpZWxkIHdwYmRwLWZpZWxkLXZhbHVlIGZpZWxkLWRpc3BsYXkgZmllbGQtdmFsdWUgd3BiZHAtZmllbGQtYnVzaW5lc3NfZmF4IHdwYmRwLWZpZWxkLW1ldGEgd3BiZHAtZmllbGQtdHlwZS10ZXh0ZmllbGQgd3BiZHAtZmllbGQtYXNzb2NpYXRpb24tbWV0YSAgIiA+PGxhYmVsPkJ1c2luZXNzIEZheDo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPiAwMTEgMjc3IDkzMTM8L3NwYW4+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtZmllbGQtZGlzcGxheSB3cGJkcC1maWVsZCB3cGJkcC1maWVsZC12YWx1ZSBmaWVsZC1kaXNwbGF5IGZpZWxkLXZhbHVlIHdwYmRwLWZpZWxkLWJ1c2luZXNzX3RhZ3Mgd3BiZHAtZmllbGQtdGFncyB3cGJkcC1maWVsZC10eXBlLXRleHRmaWVsZCB3cGJkcC1maWVsZC1hc3NvY2lhdGlvbi10YWdzICAiID48bGFiZWw+QnVzaW5lc3MgVGFnczo8L2xhYmVsPiA8c3BhbiBjbGFzcz0idmFsdWUiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy93cGJkcF90YWcvYnVpbGRpbmctbWF0ZXJpYWxzY29uc3RydWN0aW9uLW1ldGVyaWFscy8iIHJlbD0idGFnIj5CdWlsZGluZyBNYXRlcmlhbHMsQ29uc3RydWN0aW9uIE1ldGVyaWFsczwvYT48L3NwYW4+PC9kaXY+ICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWwtZmllbGRzIGNmIj48L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWFjdGlvbnMgY2YiPgogICAgPGEgY2xhc3M9IndwYmRwLWJ1dHRvbiBidXR0b24gdmlldy1saXN0aW5nIiBocmVmPSJodHRwOi8vd3d3LndlcmVnbmEuY29tL2V0aGlvcGlhLWV0aGlvcGlhbi15ZWxsb3ctcGFnZXMvNzc5L2Etay1lLyIgID5WaWV3PC9hPjwvZGl2Pgo8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0id3BiZHAtcGFnaW5hdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByZXYiPjwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5leHQiPjxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20vZXRoaW9waWEtZXRoaW9waWFuLXllbGxvdy1wYWdlcy9wYWdlLzIvIiA+TmV4dCAmcmFxdW87PC9hPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CjwvdHQ+PC9jb2RlPjwvY29kZT4gPC9jb2RlPjwvcD4KCQkJPC9kaXY+PCEtLSAuZW50cnktY29udGVudCAtLT4KCTwvYXJ0aWNsZT48IS0tICNwb3N0LSMjIC0tPgoKCQkJCQoJCQkKCQk8L21haW4+PCEtLSAjbWFpbiAtLT4KCTwvZGl2PjwhLS0gI3ByaW1hcnkgLS0+CgoKCjwvZGl2PgoNCgk8L2Rpdj48IS0tICNjb250ZW50IC0tPg0KDQoJPGZvb3RlciBpZD0iY29sb3Bob24iIGNsYXNzPSJzaXRlLWZvb3RlciIgcm9sZT0iY29udGVudGluZm8iPg0KCQ0KCQkNCgkJPGRpdiBpZD0iYm90dG9tLWZvb3RlciI+DQoJCTxkaXYgY2xhc3M9ImFrLWNvbnRhaW5lciI+DQoJCQk8aDEgY2xhc3M9InNpdGUtaW5mbyI+DQoJCQkJPGEgaHJlZj0iaHR0cDovL3dlcmVnbmEuY29tLyI+wqk8L2E+DQoJCQkJPHNwYW4gY2xhc3M9InNlcCI+IHwgPC9zcGFuPg0KCQkJCTxhIGhyZWY9Imh0dHA6Ly93ZXJlZ25hLmNvbS8iIHRpdGxlPSJXZXJlZ25hIEV0aGlvcGlhbiIgdGFyZ2V0PSJfYmxhbmsiPldlcmVnbmEgRXRoaW9waWFuPC9hPg0KCQkJPC9oMT48IS0tIC5zaXRlLWluZm8gLS0+DQoNCgkJCTxkaXYgY2xhc3M9ImNvcHlyaWdodCI+DQoJCQkJQ29weXJpZ2h0ICZjb3B5OyAyMDI0IA0KCQkJCTxhIGhyZWY9Imh0dHA6Ly93d3cud2VyZWduYS5jb20iPg0KCQkJCVdlcmVnbmEJCQkJPC9hPg0KCQkJPC9kaXY+DQoJCTwvZGl2Pg0KCQk8L2Rpdj4NCgk8L2Zvb3Rlcj48IS0tICNjb2xvcGhvbiAtLT4NCjwvZGl2PjwhLS0gI3BhZ2UgLS0+DQoNCjxzY3JpcHQ+IHZhciAkbm9jbmZsY3QgPSBqUXVlcnkubm9Db25mbGljdCgpOwoJCQkkbm9jbmZsY3QoZnVuY3Rpb24gKCkgewoJCQkgICAgJG5vY25mbGN0LnNjcm9sbFVwKHsKCQkJCXNjcm9sbE5hbWU6ICdzY3JvbGxVcCcsIC8vIEVsZW1lbnQgSUQKCQkJCXNjcm9sbENsYXNzOiAnc2Nyb2xsVXAgc2Nyb2xsdXAtbGluayBzY3JvbGx1cC1yaWdodCcsIC8vIEVsZW1lbnQgQ2xhc3MKCQkJCXNjcm9sbERpc3RhbmNlOiAzMDAsIC8vIERpc3RhbmNlIGZyb20gdG9wL2JvdHRvbSBiZWZvcmUgc2hvd2luZyBlbGVtZW50IChweCkKCQkJCXNjcm9sbEZyb206ICd0b3AnLCAvLyB0b3Agb3IgYm90dG9tCgkJCQlzY3JvbGxTcGVlZDogMzAwLCAvLyBTcGVlZCBiYWNrIHRvIHRvcCAobXMgKQoJCQkJZWFzaW5nVHlwZTogJ2xpbmVhcicsIC8vIFNjcm9sbCB0byB0b3AgZWFzaW5nIChzZWUgaHR0cDovL2Vhc2luZ3MubmV0LykKCQkJCWFuaW1hdGlvbjogJ2ZhZGUnLCAvLyBGYWRlLCBzbGlkZSwgbm9uZQoJCQkJYW5pbWF0aW9uSW5TcGVlZDogMjAwLCAvLyBBbmltYXRpb24gaW4gc3BlZWQgKG1zICkKCQkJCWFuaW1hdGlvbk91dFNwZWVkOiAyMDAsIC8vIEFuaW1hdGlvbiBvdXQgc3BlZWQgKG1zICkKCQkJCXNjcm9sbFRleHQ6ICc8aWQgY2xhc3M9ImZhIGZhLWFycm93LWNpcmNsZS11cCBmYS0yeCI+PC9pZD4nLCAvLyBUZXh0IGZvciBlbGVtZW50LCBjYW4gY29udGFpbiBIVE1MCgkJCQlzY3JvbGxUaXRsZTogZmFsc2UsIC8vIFNldCBhIGN1c3RvbSBsaW5rIHRpdGxlIGlmIHJlcXVpcmVkLiBEZWZhdWx0cyB0byBzY3JvbGxUZXh0CgkJCQlzY3JvbGxJbWc6IGZhbHNlLCAvLyBTZXQgdHJ1ZSB0byB1c2UgaW1hZ2UKCQkJCWFjdGl2ZU92ZXJsYXk6IGZhbHNlLCAvLyBTZXQgQ1NTIGNvbG9yIHRvIGRpc3BsYXkgc2Nyb2xsVXAgYWN0aXZlIHBvaW50CgkJCQl6SW5kZXg6IDIxNDc0ODM2NDcgLy8gWi1JbmRleCBmb3IgdGhlIG92ZXJsYXkKCQkJICAgIH0pOwoJCQl9KTs8L3NjcmlwdD48bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdzZ2YtZ29vZ2xlLWZvbnRzLTEtY3NzJyAgaHJlZj0naHR0cDovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9QUJlZVplZSU3Q0FiZWwlN0NBYnJpbCtGYXRmYWNlJTdDQWNsb25pY2ElN0NBY21lJTdDQWN0b3IlN0NBZGFtaW5hJTdDQWR2ZW50K1BybyU3Q0FndWFmaW5hK1NjcmlwdCU3Q0Frcm9uaW0lN0NBbGFkaW4lN0NBbGRyaWNoJTdDQWxlZiU3Q0FsZWdyZXlhJTdDQWxlZ3JleWErU0MlN0NBbGVncmV5YStTYW5zJTdDQWxlZ3JleWErU2FucytTQyU3Q0FsZXgrQnJ1c2glN0NBbGZhK1NsYWIrT25lJTdDQWxpY2UlN0NBbGlrZSU3Q0FsaWtlK0FuZ3VsYXIlN0NBbGxhbiU3Q0FsbGVydGElN0NBbGxlcnRhK1N0ZW5jaWwlN0NBbGx1cmElN0NBbG1lbmRyYSU3Q0FsbWVuZHJhK0Rpc3BsYXklN0NBbG1lbmRyYStTQyU3Q0FtYXJhbnRlJTdDQW1hcmFudGglN0NBbWF0aWMrU0MlN0NBbWV0aHlzdGElN0NBbmFoZWltJTdDQW5kYWRhJTdDQW5kaWthJTdDQW5na29yJTdDQW5uaWUrVXNlK1lvdXIrVGVsZXNjb3BlJTdDQW5vbnltb3VzK1BybyU3Q0FudGljJTdDQW50aWMrRGlkb25lJTdDQW50aWMrU2xhYiU3Q0FudG9uJTdDQXJhcGV5JTdDQXJidXR1cyU3Q0FyYnV0dXMrU2xhYiU3Q0FyY2hpdGVjdHMrRGF1Z2h0ZXIlN0NBcmNoaXZvK0JsYWNrJTdDQXJjaGl2bytOYXJyb3clN0NBcmltbyU3Q0FyaXpvbmlhJTdDQXJtYXRhJTdDQXJ0aWZpa2ElN0NBcnZvJTdDQXNhcCU3Q0Fzc2V0JTdDQXN0bG9jaCU3Q0FzdWwlN0NBdG9taWMrQWdlJTdDQXVicmV5JTdDQXVkaW93aWRlJTdDQXV0b3VyK09uZSU3Q0F2ZXJhZ2UlN0NBdmVyYWdlK1NhbnMlN0NBdmVyaWErR3J1ZXNhK0xpYnJlJTdDQXZlcmlhK0xpYnJlJTdDQXZlcmlhK1NhbnMrTGlicmUlN0NBdmVyaWErU2VyaWYrTGlicmUlN0NCYWQrU2NyaXB0JTdDQmFsdGhhemFyJTdDQmFuZ2VycyU3Q0Jhc2ljJTdDQmF0dGFtYmFuZyU3Q0JhdW1hbnMlN0NCYXlvbiU3Q0JlbGdyYW5vJTdDQmVsbGV6YSU3Q0JlbmNoTmluZSU3Q0JlbnRoYW0lN0NCZXJrc2hpcmUrU3dhc2glN0NCZXZhbiU3Q0JpZ2Vsb3crUnVsZXMlN0NCaWdzaG90K09uZSU3Q0JpbGJvJTdDQmlsYm8rU3dhc2grQ2FwcyU3Q0JpdHRlciU3Q0JsYWNrK09wcytPbmUlN0NCb2tvciU3Q0JvbmJvbiU3Q0Jvb2dhbG9vJTdDQm93bGJ5K09uZSU3Q0Jvd2xieStPbmUrU0MlN0NCcmF3bGVyJTdDQnJlZStTZXJpZiU3Q0J1YmJsZWd1bStTYW5zJTdDQnViYmxlcitPbmUlN0NCdWRhJTdDQnVlbmFyZCU3Q0J1dGNoZXJtYW4lN0NCdXR0ZXJmbHkrS2lkcyYjMDM4O3Zlcj00LjcuMjUnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdzZ2YtZ29vZ2xlLWZvbnRzLTItY3NzJyAgaHJlZj0naHR0cDovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Q2FiaW4lN0NDYWJpbitDb25kZW5zZWQlN0NDYWJpbitTa2V0Y2glN0NDYWVzYXIrRHJlc3NpbmclN0NDYWdsaW9zdHJvJTdDQ2FsbGlncmFmZml0dGklN0NDYW1ibyU3Q0NhbmRhbCU3Q0NhbnRhcmVsbCU3Q0NhbnRhdGErT25lJTdDQ2FudG9yYStPbmUlN0NDYXByaW9sYSU3Q0NhcmRvJTdDQ2FybWUlN0NDYXJyb2lzK0dvdGhpYyU3Q0NhcnJvaXMrR290aGljK1NDJTdDQ2FydGVyK09uZSU3Q0NhdWRleCU3Q0NlZGFydmlsbGUrQ3Vyc2l2ZSU3Q0NldmljaGUrT25lJTdDQ2hhbmdhK09uZSU3Q0NoYW5nbyU3Q0NoYXUrUGhpbG9tZW5lK09uZSU3Q0NoZWxhK09uZSU3Q0NoZWxzZWErTWFya2V0JTdDQ2hlbmxhJTdDQ2hlcnJ5K0NyZWFtK1NvZGElN0NDaGVycnkrU3dhc2glN0NDaGV3eSU3Q0NoaWNsZSU3Q0NoaXZvJTdDQ2luemVsJTdDQ2luemVsK0RlY29yYXRpdmUlN0NDbGlja2VyK1NjcmlwdCU3Q0NvZGElN0NDb2RhK0NhcHRpb24lN0NDb2R5c3RhciU3Q0NvbWJvJTdDQ29tZm9ydGFhJTdDQ29taW5nK1Nvb24lN0NDb25jZXJ0K09uZSU3Q0NvbmRpbWVudCU3Q0NvbnRlbnQlN0NDb250cmFpbCtPbmUlN0NDb252ZXJnZW5jZSU3Q0Nvb2tpZSU3Q0NvcHNlJTdDQ29yYmVuJTdDQ291cmdldHRlJTdDQ291c2luZSU3Q0NvdXN0YXJkJTdDQ292ZXJlZCtCeStZb3VyK0dyYWNlJTdDQ3JhZnR5K0dpcmxzJTdDQ3JlZXBzdGVyJTdDQ3JldGUrUm91bmQlN0NDcmltc29uK1RleHQlN0NDcm9pc3NhbnQrT25lJTdDQ3J1c2hlZCU3Q0N1cHJ1bSU3Q0N1dGl2ZSU3Q0N1dGl2ZStNb25vJTdDRGFtaW9uJTdDRGFuY2luZytTY3JpcHQlN0NEYW5ncmVrJTdDRGF3bmluZytvZithK05ldytEYXklN0NEYXlzK09uZSU3Q0RlbGl1cyU3Q0RlbGl1cytTd2FzaCtDYXBzJTdDRGVsaXVzK1VuaWNhc2UlN0NEZWxsYStSZXNwaXJhJTdDRGVuaytPbmUlN0NEZXZvbnNoaXJlJTdDRGh1cmphdGklN0NEaWRhY3QrR290aGljJTdDRGlwbG9tYXRhJTdDRGlwbG9tYXRhK1NDJTdDRG9taW5lJTdDRG9uZWdhbCtPbmUlN0NEb3BwaW8rT25lJTdDRG9yc2ElN0NEb3NpcyU3Q0RyK1N1Z2l5YW1hJTdDRHJvaWQrU2FucyU3Q0Ryb2lkK1NhbnMrTW9ubyU3Q0Ryb2lkK1NlcmlmJTdDRHVydStTYW5zJTdDRHluYWxpZ2h0JTdDRUIrR2FyYW1vbmQlN0NFYWdsZStMYWtlJTdDRWF0ZXIlN0NFY29ub21pY2ElN0NFaytNdWt0YSU3Q0VsZWN0cm9saXplJTdDRWxzaWUlN0NFbHNpZStTd2FzaCtDYXBzJTdDRW1ibGVtYStPbmUlN0NFbWlseXMrQ2FuZHklN0NFbmdhZ2VtZW50JTdDRW5nbGViZXJ0JTdDRW5yaXF1ZXRhJiMwMzg7dmVyPTQuNy4yNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3NnZi1nb29nbGUtZm9udHMtMy1jc3MnICBocmVmPSdodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1FcmljYStPbmUlN0NFc3RlYmFuJTdDRXVwaG9yaWErU2NyaXB0JTdDRXdlcnQlN0NFeG8lN0NFeG8rMiU3Q0V4cGxldHVzK1NhbnMlN0NGYW53b29kK1RleHQlN0NGYXNjaW5hdGUlN0NGYXNjaW5hdGUrSW5saW5lJTdDRmFzdGVyK09uZSU3Q0Zhc3RoYW5kJTdDRmF1bmErT25lJTdDRmVkZXJhbnQlN0NGZWRlcm8lN0NGZWxpcGElN0NGZW5peCU3Q0ZpbmdlcitQYWludCU3Q0ZpcmErTW9ubyU3Q0ZpcmErU2FucyU3Q0ZqYWxsYStPbmUlN0NGam9yZCtPbmUlN0NGbGFtZW5jbyU3Q0ZsYXZvcnMlN0NGb25kYW1lbnRvJTdDRm9udGRpbmVyK1N3YW5reSU3Q0ZvcnVtJTdDRnJhbmNvaXMrT25lJTdDRnJlY2tsZStGYWNlJTdDRnJlZGVyaWNrYSt0aGUrR3JlYXQlN0NGcmVkb2thK09uZSU3Q0ZyZWVoYW5kJTdDRnJlc2NhJTdDRnJpam9sZSU3Q0ZydWt0dXIlN0NGdWdheitPbmUlN0NHRlMrRGlkb3QlN0NHRlMrTmVvaGVsbGVuaWMlN0NHYWJyaWVsYSU3Q0dhZmF0YSU3Q0dhbGRlYW5vJTdDR2FsaW5kbyU3Q0dlbnRpdW0rQmFzaWMlN0NHZW50aXVtK0Jvb2srQmFzaWMlN0NHZW8lN0NHZW9zdGFyJTdDR2Vvc3RhcitGaWxsJTdDR2VybWFuaWErT25lJTdDR2lkdWd1JTdDR2lsZGErRGlzcGxheSU3Q0dpdmUrWW91K0dsb3J5JTdDR2xhc3MrQW50aXF1YSU3Q0dsZWdvbyU3Q0dsb3JpYStIYWxsZWx1amFoJTdDR29ibGluK09uZSU3Q0dvY2hpK0hhbmQlN0NHb3JkaXRhcyU3Q0dvdWR5K0Jvb2tsZXR0ZXIrMTkxMSU3Q0dyYWR1YXRlJTdDR3JhbmQrSG90ZWwlN0NHcmF2aXRhcytPbmUlN0NHcmVhdCtWaWJlcyU3Q0dyaWZmeSU3Q0dydXBwbyU3Q0d1ZGVhJTdDSGFiaWJpJTdDSGFsYW50JTdDSGFtbWVyc21pdGgrT25lJTdDSGFuYWxlaSU3Q0hhbmFsZWkrRmlsbCU3Q0hhbmRsZWUlN0NIYW51bWFuJTdDSGFwcHkrTW9ua2V5JTdDSGVhZGxhbmQrT25lJTdDSGVubnkrUGVubnklN0NIZXJyK1ZvbitNdWVsbGVyaG9mZiU3Q0hpbmQlN0NIb2x0d29vZCtPbmUrU0MlN0NIb21lbWFkZStBcHBsZSU3Q0hvbWVuYWplJTdDSU0rRmVsbCtEVytQaWNhJTdDSU0rRmVsbCtEVytQaWNhK1NDJTdDSU0rRmVsbCtEb3VibGUrUGljYSU3Q0lNK0ZlbGwrRG91YmxlK1BpY2ErU0MlN0NJTStGZWxsK0VuZ2xpc2glN0NJTStGZWxsK0VuZ2xpc2grU0MlN0NJTStGZWxsK0ZyZW5jaCtDYW5vbiU3Q0lNK0ZlbGwrRnJlbmNoK0Nhbm9uK1NDJTdDSU0rRmVsbCtHcmVhdCtQcmltZXIlN0NJTStGZWxsK0dyZWF0K1ByaW1lcitTQyU3Q0ljZWJlcmclN0NJY2VsYW5kJTdDSW1wcmltYSU3Q0luY29uc29sYXRhJTdDSW5kZXIlN0NJbmRpZStGbG93ZXIlN0NJbmlrYSU3Q0lyaXNoK0dyb3ZlciU3Q0lzdG9rK1dlYiU3Q0l0YWxpYW5hJiMwMzg7dmVyPTQuNy4yNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3NnZi1nb29nbGUtZm9udHMtNC1jc3MnICBocmVmPSdodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1JdGFsaWFubm8lN0NKYWNxdWVzK0ZyYW5jb2lzJTdDSmFjcXVlcytGcmFuY29pcytTaGFkb3clN0NKaW0rTmlnaHRzaGFkZSU3Q0pvY2tleStPbmUlN0NKb2xseStMb2RnZXIlN0NKb3NlZmluK1NhbnMlN0NKb3NlZmluK1NsYWIlN0NKb3RpK09uZSU3Q0p1ZHNvbiU3Q0p1bGVlJTdDSnVsaXVzK1NhbnMrT25lJTdDSnVuZ2UlN0NKdXJhJTdDSnVzdCtBbm90aGVyK0hhbmQlN0NKdXN0K01lK0FnYWluK0Rvd24rSGVyZSU3Q0thbGFtJTdDS2FtZXJvbiU3Q0thbnR1bXJ1eSU3Q0thcmxhJTdDS2FybWElN0NLYXVzaGFuK1NjcmlwdCU3Q0thdm9vbiU3Q0tkYW0rVGhtb3IlN0NLZWFuaWErT25lJTdDS2VsbHkrU2xhYiU3Q0tlbmlhJTdDS2hhbmQlN0NLaG1lciU3Q0tpdGUrT25lJTdDS25ld2F2ZSU3Q0tvdHRhK09uZSU3Q0tvdWxlbiU3Q0tyYW5reSU3Q0tyZW9uJTdDS3Jpc3RpJTdDS3JvbmErT25lJTdDTGErQmVsbGUrQXVyb3JlJTdDTGFpbGElN0NMYW5jZWxvdCU3Q0xhdG8lN0NMZWFndWUrU2NyaXB0JTdDTGVja2VybGkrT25lJTdDTGVkZ2VyJTdDTGVrdG9uJTdDTGVtb24lN0NMaWJyZStCYXNrZXJ2aWxsZSU3Q0xpZmUrU2F2ZXJzJTdDTGlsaXRhK09uZSU3Q0xpbHkrU2NyaXB0K09uZSU3Q0xpbWVsaWdodCU3Q0xpbmRlbitIaWxsJTdDTG9ic3RlciU3Q0xvYnN0ZXIrVHdvJTdDTG9uZHJpbmErT3V0bGluZSU3Q0xvbmRyaW5hK1NoYWRvdyU3Q0xvbmRyaW5hK1NrZXRjaCU3Q0xvbmRyaW5hK1NvbGlkJTdDTG9yYSU3Q0xvdmUrWWErTGlrZStBK1Npc3RlciU3Q0xvdmVkK2J5K3RoZStLaW5nJTdDTG92ZXJzK1F1YXJyZWwlN0NMdWNraWVzdCtHdXklN0NMdXNpdGFuYSU3Q0x1c3RyaWElN0NNYWNvbmRvJTdDTWFjb25kbytTd2FzaCtDYXBzJTdDTWFncmElN0NNYWlkZW4rT3JhbmdlJTdDTWFrbyU3Q01hbGxhbm5hJTdDTWFuZGFsaSU3Q01hcmNlbGx1cyU3Q01hcmNlbGx1cytTQyU3Q01hcmNrK1NjcmlwdCU3Q01hcmdhcmluZSU3Q01hcmtvK09uZSU3Q01hcm1lbGFkJTdDTWFydmVsJTdDTWF0ZSU3Q01hdGUrU0MlN0NNYXZlbitQcm8lN0NNY0xhcmVuJTdDTWVkZG9uJTdDTWVkaWV2YWxTaGFycCU3Q01lZHVsYStPbmUlN0NNZWdyaW0lN0NNZWllK1NjcmlwdCU3Q01lcmllbmRhJTdDTWVyaWVuZGErT25lJTdDTWVycml3ZWF0aGVyJTdDTWVycml3ZWF0aGVyK1NhbnMlN0NNZXRhbCU3Q01ldGFsK01hbmlhJTdDTWV0YW1vcnBob3VzJTdDTWV0cm9waG9iaWMlN0NNaWNocm9tYSU3Q01pbG9uZ2ElN0NNaWx0b25pYW4lN0NNaWx0b25pYW4rVGF0dG9vJiMwMzg7dmVyPTQuNy4yNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3NnZi1nb29nbGUtZm9udHMtNS1jc3MnICBocmVmPSdodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1NaW5pdmVyJTdDTWlzcytGYWphcmRvc2UlN0NNb2Rlcm4rQW50aXF1YSU3Q01vbGVuZ28lN0NNb2xsZSU3Q01vbmRhJTdDTW9ub2ZldHQlN0NNb25vdG9uJTdDTW9uc2lldXIrTGErRG91bGFpc2UlN0NNb250YWdhJTdDTW9udGV6JTdDTW9udHNlcnJhdCU3Q01vbnRzZXJyYXQrQWx0ZXJuYXRlcyU3Q01vbnRzZXJyYXQrU3VicmF5YWRhJTdDTW91bCU3Q01vdWxwYWxpJTdDTW91bnRhaW5zK29mK0NocmlzdG1hcyU3Q01vdXNlK01lbW9pcnMlN0NNcitCZWRmb3J0JTdDTXIrRGFmb2UlN0NNcitEZStIYXZpbGFuZCU3Q01ycytTYWludCtEZWxhZmllbGQlN0NNcnMrU2hlcHBhcmRzJTdDTXVsaSU3Q015c3RlcnkrUXVlc3QlN0NOVFIlN0NOZXVjaGElN0NOZXV0b24lN0NOZXcrUm9ja2VyJTdDTmV3cytDeWNsZSU3Q05pY29ubmUlN0NOaXhpZStPbmUlN0NOb2JpbGUlN0NOb2tvcmElN0NOb3JpY2FuJTdDTm9zaWZlciU3Q05vdGhpbmcrWW91K0NvdWxkK0RvJTdDTm90aWNpYStUZXh0JTdDTm90bytTYW5zJTdDTm90bytTZXJpZiU3Q05vdmErQ3V0JTdDTm92YStGbGF0JTdDTm92YStNb25vJTdDTm92YStPdmFsJTdDTm92YStSb3VuZCU3Q05vdmErU2NyaXB0JTdDTm92YStTbGltJTdDTm92YStTcXVhcmUlN0NOdW1hbnMlN0NOdW5pdG8lN0NPZG9yK01lYW4rQ2hleSU3Q09mZnNpZGUlN0NPbGQrU3RhbmRhcmQrVFQlN0NPbGRlbmJ1cmclN0NPbGVvK1NjcmlwdCU3Q09sZW8rU2NyaXB0K1N3YXNoK0NhcHMlN0NPcGVuK1NhbnMlN0NPcGVuK1NhbnMrQ29uZGVuc2VkJTdDT3JhbmllbmJhdW0lN0NPcmJpdHJvbiU3Q09yZWdhbm8lN0NPcmllbnRhJTdDT3JpZ2luYWwrU3VyZmVyJTdDT3N3YWxkJTdDT3Zlcit0aGUrUmFpbmJvdyU3Q092ZXJsb2NrJTdDT3ZlcmxvY2srU0MlN0NPdm8lN0NPeHlnZW4lN0NPeHlnZW4rTW9ubyU3Q1BUK01vbm8lN0NQVCtTYW5zJTdDUFQrU2FucytDYXB0aW9uJTdDUFQrU2FucytOYXJyb3clN0NQVCtTZXJpZiU3Q1BUK1NlcmlmK0NhcHRpb24lN0NQYWNpZmljbyU3Q1BhcHJpa2ElN0NQYXJpc2llbm5lJTdDUGFzc2VybytPbmUlN0NQYXNzaW9uK09uZSU3Q1BhdGh3YXkrR290aGljK09uZSU3Q1BhdHJpY2srSGFuZCU3Q1BhdHJpY2srSGFuZCtTQyU3Q1BhdHVhK09uZSU3Q1BheXRvbmUrT25lJTdDUGVyYWx0YSU3Q1Blcm1hbmVudCtNYXJrZXIlN0NQZXRpdCtGb3JtYWwrU2NyaXB0JTdDUGV0cm9uYSU3Q1BoaWxvc29waGVyJTdDUGllZHJhJTdDUGlueW9uK1NjcmlwdCU3Q1BpcmF0YStPbmUlN0NQbGFzdGVyJTdDUGxheSU3Q1BsYXliYWxsJTdDUGxheWZhaXIrRGlzcGxheSU3Q1BsYXlmYWlyK0Rpc3BsYXkrU0MlN0NQb2Rrb3ZhJiMwMzg7dmVyPTQuNy4yNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3NnZi1nb29nbGUtZm9udHMtNi1jc3MnICBocmVmPSdodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Qb2lyZXQrT25lJTdDUG9sbGVyK09uZSU3Q1BvbHklN0NQb21waWVyZSU3Q1BvbnRhbm8rU2FucyU3Q1BvcnQrTGxpZ2F0K1NhbnMlN0NQb3J0K0xsaWdhdCtTbGFiJTdDUHJhdGElN0NQcmVhaHZpaGVhciU3Q1ByZXNzK1N0YXJ0KzJQJTdDUHJpbmNlc3MrU29maWElN0NQcm9jaW9ubyU3Q1Byb3N0bytPbmUlN0NQdXJpdGFuJTdDUHVycGxlK1B1cnNlJTdDUXVhbmRvJTdDUXVhbnRpY28lN0NRdWF0dHJvY2VudG8lN0NRdWF0dHJvY2VudG8rU2FucyU3Q1F1ZXN0cmlhbCU3Q1F1aWNrc2FuZCU3Q1F1aW50ZXNzZW50aWFsJTdDUXdpZ2xleSU3Q1JhY2luZytTYW5zK09uZSU3Q1JhZGxleSU3Q1JhamRoYW5pJTdDUmFsZXdheSU3Q1JhbGV3YXkrRG90cyU3Q1JhbWFiaGFkcmElN0NSYW1ibGElN0NSYW1tZXR0bytPbmUlN0NSYW5jaGVycyU3Q1JhbmNobyU3Q1JhdGlvbmFsZSU3Q1JlZHJlc3NlZCU3Q1JlZW5pZStCZWFuaWUlN0NSZXZhbGlhJTdDUmliZXllJTdDUmliZXllK01hcnJvdyU3Q1JpZ2h0ZW91cyU3Q1Jpc3F1ZSU3Q1JvYm90byU3Q1JvYm90bytDb25kZW5zZWQlN0NSb2JvdG8rU2xhYiU3Q1JvY2hlc3RlciU3Q1JvY2srU2FsdCU3Q1Jva2tpdHQlN0NSb21hbmVzY28lN0NSb3BhK1NhbnMlN0NSb3NhcmlvJTdDUm9zYXJpdm8lN0NSb3VnZStTY3JpcHQlN0NSb3poYStPbmUlN0NSdWJpaytNb25vK09uZSU3Q1J1YmlrK09uZSU3Q1J1ZGElN0NSdWZpbmElN0NSdWdlK0Jvb2dpZSU3Q1J1bHVrbyU3Q1J1bStSYWlzaW4lN0NSdXNsYW4rRGlzcGxheSU3Q1J1c3NvK09uZSU3Q1J1dGhpZSU3Q1J5ZSU3Q1NhY3JhbWVudG8lN0NTYWlsJTdDU2Fsc2ElN0NTYW5jaGV6JTdDU2FuY3JlZWslN0NTYW5zaXRhK09uZSU3Q1NhcmluYSU3Q1NhcnBhbmNoJTdDU2F0aXNmeSU3Q1NjYWRhJTdDU2Nob29sYmVsbCU3Q1NlYXdlZWQrU2NyaXB0JTdDU2V2aWxsYW5hJTdDU2V5bW91citPbmUlN0NTaGFkb3dzK0ludG8rTGlnaHQlN0NTaGFkb3dzK0ludG8rTGlnaHQrVHdvJTdDU2hhbnRpJTdDU2hhcmUlN0NTaGFyZStUZWNoJTdDU2hhcmUrVGVjaCtNb25vJTdDU2hvanVtYXJ1JTdDU2hvcnQrU3RhY2slN0NTaWVtcmVhcCU3Q1NpZ21hcitPbmUlN0NTaWduaWthJTdDU2lnbmlrYStOZWdhdGl2ZSU3Q1NpbW9uZXR0YSU3Q1NpbnRvbnklN0NTaXJpbitTdGVuY2lsJTdDU2l4K0NhcHMlN0NTa3JhbmppJTdDU2xhYm8rMTNweCU3Q1NsYWJvKzI3cHglN0NTbGFja2V5JTdDU21va3VtJTdDU215dGhlJiMwMzg7dmVyPTQuNy4yNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3NnZi1nb29nbGUtZm9udHMtNy1jc3MnICBocmVmPSdodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1TbmlnbGV0JTdDU25pcHBldCU3Q1Nub3didXJzdCtPbmUlN0NTb2ZhZGkrT25lJTdDU29maWElN0NTb25zaWUrT25lJTdDU29ydHMrTWlsbCtHb3VkeSU3Q1NvdXJjZStDb2RlK1BybyU3Q1NvdXJjZStTYW5zK1BybyU3Q1NvdXJjZStTZXJpZitQcm8lN0NTcGVjaWFsK0VsaXRlJTdDU3BpY3krUmljZSU3Q1NwaW5uYWtlciU3Q1NwaXJheCU3Q1NxdWFkYStPbmUlN0NTdGFsZW1hdGUlN0NTdGFsaW5pc3QrT25lJTdDU3RhcmRvcytTdGVuY2lsJTdDU3RpbnQrVWx0cmErQ29uZGVuc2VkJTdDU3RpbnQrVWx0cmErRXhwYW5kZWQlN0NTdG9rZSU3Q1N0cmFpdCU3Q1N1ZStFbGxlbitGcmFuY2lzY28lN0NTdW5zaGluZXklN0NTdXBlcm1lcmNhZG8rT25lJTdDU3V3YW5uYXBodW0lN0NTd2Fua3krYW5kK01vbytNb28lN0NTeW5jb3BhdGUlN0NUYW5nZXJpbmUlN0NUYXByb20lN0NUYXVyaSU3Q1Rla28lN0NUZWxleCU3Q1Rlbm9yK1NhbnMlN0NUZXh0K01lK09uZSU3Q1RoZStHaXJsK05leHQrRG9vciU3Q1RpZW5uZSU3Q1Rpbm9zJTdDVGl0YW4rT25lJTdDVGl0aWxsaXVtK1dlYiU3Q1RyYWRlK1dpbmRzJTdDVHJvY2NoaSU3Q1Ryb2NodXQlN0NUcnlra2VyJTdDVHVscGVuK09uZSU3Q1VidW50dSU3Q1VidW50dStDb25kZW5zZWQlN0NVYnVudHUrTW9ubyU3Q1VsdHJhJTdDVW5jaWFsK0FudGlxdWElN0NVbmRlcmRvZyU3Q1VuaWNhK09uZSU3Q1VuaWZyYWt0dXJDb29rJTdDVW5pZnJha3R1ck1hZ3VudGlhJTdDVW5rZW1wdCU3Q1VubG9jayU3Q1VubmElN0NWVDMyMyU3Q1ZhbXBpcm8rT25lJTdDVmFyZWxhJTdDVmFyZWxhK1JvdW5kJTdDVmFzdCtTaGFkb3clN0NWZXNwZXIrTGlicmUlN0NWaWJ1ciU3Q1ZpZGFsb2thJTdDVmlnYSU3Q1ZvY2VzJTdDVm9sa2hvdiU3Q1ZvbGxrb3JuJTdDVm9sdGFpcmUlN0NXYWl0aW5nK2Zvcit0aGUrU3VucmlzZSU3Q1dhbGxwb2V0JTdDV2FsdGVyK1R1cm5jb2F0JTdDV2FybmVzJTdDV2VsbGZsZWV0JTdDV2VuZHkrT25lJTdDV2lyZStPbmUlN0NZYW5vbmUrS2FmZmVlc2F0eiU3Q1llbGxvd3RhaWwlN0NZZXNldmErT25lJTdDWWVzdGVyeWVhciU3Q1pleWFkYSYjMDM4O3Zlcj00LjcuMjUnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS91aS9hY2NvcmRpb24ubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+Ci8qIDwhW0NEQVRBWyAqLwp2YXIgd3BjZjcgPSB7ImFwaVNldHRpbmdzIjp7InJvb3QiOiJodHRwOlwvXC93d3cud2VyZWduYS5jb21cL3dwLWpzb25cL2NvbnRhY3QtZm9ybS03XC92MSIsIm5hbWVzcGFjZSI6ImNvbnRhY3QtZm9ybS03XC92MSJ9LCJyZWNhcHRjaGEiOnsibWVzc2FnZXMiOnsiZW1wdHkiOiJQbGVhc2UgdmVyaWZ5IHRoYXQgeW91IGFyZSBub3QgYSByb2JvdC4ifX19OwovKiBdXT4gKi8KPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC9wbHVnaW5zL2NvbnRhY3QtZm9ybS03L2luY2x1ZGVzL2pzL3NjcmlwdHMuanM/dmVyPTQuOS4yJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3BsdWdpbnMvc21vb3RoLXNjcm9sbC11cC9qcy9qcXVlcnkuc2Nyb2xsVXAubWluLmpzP3Zlcj00LjcuMjUnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+Ci8qIDwhW0NEQVRBWyAqLwp2YXIgdGhlbWVNeUxvZ2luID0geyJhY3Rpb24iOiIiLCJlcnJvcnMiOltdfTsKLyogXV0+ICovCjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy90aGVtZS1teS1sb2dpbi9hc3NldHMvc2NyaXB0cy90aGVtZS1teS1sb2dpbi5taW4uanM/dmVyPTcuMC4xNSc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC90aGVtZXMvYWNjZXNzcHJlc3MtbGl0ZS9qcy9qcXVlcnkuYnhzbGlkZXIubWluLmpzP3Zlcj00LjEnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LndlcmVnbmEuY29tL3dwLWNvbnRlbnQvdGhlbWVzL2FjY2Vzc3ByZXNzLWxpdGUvanMvbml2by1saWdodGJveC5taW4uanM/dmVyPTIuMSc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cud2VyZWduYS5jb20vd3AtY29udGVudC90aGVtZXMvYWNjZXNzcHJlc3MtbGl0ZS9qcy9qcXVlcnkuYWN0dWFsLm1pbi5qcz92ZXI9MS4wLjE2Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3RoZW1lcy9hY2Nlc3NwcmVzcy1saXRlL2pzL3NraXAtbGluay1mb2N1cy1maXguanM/dmVyPTIwMTMwMTE1Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1jb250ZW50L3RoZW1lcy9hY2Nlc3NwcmVzcy1saXRlL2pzL2N1c3RvbS5qcz92ZXI9MS4xJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy53ZXJlZ25hLmNvbS93cC1pbmNsdWRlcy9qcy93cC1lbWJlZC5taW4uanM/dmVyPTQuNy4yNSc+PC9zY3JpcHQ+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+PC9zdHlsZT4NCg0KPCEtLSBTdGFydCBvZiBTdGF0Q291bnRlciBDb2RlIGZvciBEZWZhdWx0IEd1aWRlIC0tPg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KdmFyIHNjX3Byb2plY3Q9MTA0NzYzOTk7IA0KdmFyIHNjX2ludmlzaWJsZT0xOyANCnZhciBzY19zZWN1cml0eT0iZTRjMGFjYmUiOyANCnZhciBzY0pzSG9zdCA9ICgoImh0dHBzOiIgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wpID8NCiJodHRwczovL3NlY3VyZS4iIDogImh0dHA6Ly93d3cuIik7DQpkb2N1bWVudC53cml0ZSgiPHNjIisicmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0nIiArDQpzY0pzSG9zdCsNCiJzdGF0Y291bnRlci5jb20vY291bnRlci9jb3VudGVyLmpzJz48LyIrInNjcmlwdD4iKTsNCjwvc2NyaXB0Pg0KPG5vc2NyaXB0PjxkaXYgY2xhc3M9InN0YXRjb3VudGVyIj48YSB0aXRsZT0ic2hvcGlmeQ0KYW5hbHl0aWNzIGVjb21tZXJjZSIgaHJlZj0iaHR0cDovL3N0YXRjb3VudGVyLmNvbS9zaG9waWZ5LyINCnRhcmdldD0iX2JsYW5rIj48aW1nIGNsYXNzPSJzdGF0Y291bnRlciINCnNyYz0iaHR0cDovL2Muc3RhdGNvdW50ZXIuY29tLzEwNDc2Mzk5LzAvZTRjMGFjYmUvMS8iDQphbHQ9InNob3BpZnkgYW5hbHl0aWNzIGVjb21tZXJjZSI+PC9hPjwvZGl2Pjwvbm9zY3JpcHQ+DQo8IS0tIEVuZCBvZiBTdGF0Q291bnRlciBDb2RlIGZvciBEZWZhdWx0IEd1aWRlIC0tPg0KDQo8L2JvZHk+DQo8L2h0bWw+DQo=
  recorded_at: Sat, 02 Mar 2024 20:05:18 GMT
recorded_with: VCR 6.2.0
